{
	"id": "629ab76fbf33f3426aec9eca1410ce83",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/OrderBookDex.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.12;\n\nimport \"./utils/ISupraOracle.sol\";\nimport \"./utils/IERC20.sol\";\nimport \"./utils/SafeERC20.sol\";\nimport \"./utils/SafeMath.sol\";\nimport \"./utils/Ownable.sol\";\n\ncontract OrderBookDex is Ownable {\n    using SafeERC20 for IERC20;\n\n    ISupraOracle pricefeed;\n    mapping(string => address) public tokenAddresses;\n\n    constructor(address _pricefeed){\n        pricefeed = ISupraOracle(_pricefeed);\n    }\n\n    function ratio(string memory numerator, string memory denominator)\n        public\n        view\n        returns (int256)\n    {\n        string memory pairName = string.concat(numerator, \"_\", denominator);\n        (int256 price, ) = pricefeed.checkPrice(pairName);\n        return price;\n    }\n\n    function queryAmountOut(\n        string memory fromTokenName,\n        string memory toTokenName,\n        uint256 _amount\n    ) public view returns (int256) {\n        if (\n            keccak256(abi.encodePacked(fromTokenName)) ==\n            keccak256(abi.encodePacked(\"usdt\"))\n        ) {\n            int256 priceFlip = ratio(toTokenName, fromTokenName);\n            int256 tokenAmountToUSDT = int256(_amount) * (int256(1e18) / priceFlip);\n            return (tokenAmountToUSDT * 1e8) / 1e18;\n        }\n\n        if (\n            keccak256(abi.encodePacked(\"usdt\")) ==\n            keccak256(abi.encodePacked(toTokenName))\n        ) {\n            int256 price = ratio(fromTokenName, toTokenName);\n            int256 tokenAmountFromUSDT = int256(_amount) * (price);\n            return tokenAmountFromUSDT / 1e8;\n        }\n\n        int256 price1 = ratio(fromTokenName, \"usdt\");\n        int256 price2 = ratio(toTokenName, \"usdt\");\n        int256 tokenAmount = int256(_amount) * ((price1 * 1e18) / price2);\n        return tokenAmount / 1e18;\n    }\n\n    function swap(\n        string memory _fromTokenName,\n        string memory _toTokenName,\n        uint256 _amount\n    ) public {\n        require(\n            (tokenAddresses[_fromTokenName] != address(0) &&\n                tokenAddresses[_toTokenName] != address(0)),\n            \"Tokens not available for swap\"\n        );\n        uint256 returnAmount = uint256(\n            queryAmountOut(_fromTokenName, _toTokenName, _amount)\n        );\n        require(returnAmount > 0, \"Invalid price feed\");\n        require(\n            returnAmount <= _getBalance(_toTokenName),\n            \"Insufficient Liquidity\"\n        );\n        _safeTransferFrom(\n            address(tokenAddresses[_fromTokenName]),\n            address(msg.sender),\n            address(this),\n            _amount\n        );\n        _safeTransfer(\n            address(tokenAddresses[_toTokenName]),\n            address(msg.sender),\n            returnAmount\n        );\n\n    }\n\n    function addLiquidity(string memory _name, uint256 _amount) public {\n        require(\n            tokenAddresses[_name] != address(0),\n            \"Tokens not available for swap\"\n        );\n\n        _safeTransferFrom(\n            address(tokenAddresses[_name]),\n            address(msg.sender),\n            address(this),\n            _amount\n        );\n    }\n\n    function addTrustedTokens(address _token, string memory _name)\n        public\n        onlyOwner\n    {\n        tokenAddresses[_name] = _token;\n    }\n\n    function addTrustedTokensMulti(\n        address[] memory _tokens,\n        string[] memory _names\n    ) public onlyOwner {\n        require(_tokens.length == _names.length, \"Invalid Names/Tokens\");\n\n        for (uint256 i = 0; i < _tokens.length; i++) {\n            tokenAddresses[_names[i]] = _tokens[i];\n        }\n    }\n\n    function _safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) private {\n        IERC20(token).safeTransferFrom(address(from), address(to), value);\n    }\n        function _safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) private {\n        IERC20(token).safeTransfer( address(to), value);\n    }\n\n    function _getBalance(string memory _tokenName)\n        internal\n        view\n        returns (uint256 balance)\n    {\n        balance = IERC20(tokenAddresses[_tokenName]).balanceOf(address(this));\n    }\n}\n"
			},
			"contracts/utils/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"contracts/utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}"
			},
			"contracts/utils/SafeERC20.sol": {
				"content": "// This is a simplified version of OpenZepplin's SafeERC20 library\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./IERC20.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"contracts/utils/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function decimals() external view returns (uint8);\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address owner) external view returns (uint256);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 value) external returns (bool);\n\n    function transfer(address to, uint256 value) external returns (bool);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n}\n"
			},
			"contracts/utils/ISupraOracle.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.12;\n\ninterface ISupraOracle {\n\n    function checkPrice(string memory marketPair) external view returns (int256 price, uint256 timestamp);\n\n}"
			},
			"contracts/utils/Context.sol": {
				"content": "\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/OrderBookDex.sol": {
				"OrderBookDex": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pricefeed",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "addTrustedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "string[]",
									"name": "_names",
									"type": "string[]"
								}
							],
							"name": "addTrustedTokensMulti",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "fromTokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "toTokenName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "queryAmountOut",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "numerator",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "denominator",
									"type": "string"
								}
							],
							"name": "ratio",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_fromTokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_toTokenName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "tokenAddresses",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/OrderBookDex.sol\":222:4189  contract OrderBookDex is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/OrderBookDex.sol\":377:461  constructor(address _pricefeed){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/utils/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/utils/Context.sol\":721:731  msg.sender */\n  caller\n    /* \"contracts/utils/Ownable.sol\":929:947  _transferOwnership */\n  tag_10\n    /* \"contracts/utils/Ownable.sol\":929:961  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"contracts/OrderBookDex.sol\":418:427  pricefeed */\n  0x01\n    /* \"contracts/OrderBookDex.sol\":418:454  pricefeed = ISupraOracle(_pricefeed) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/OrderBookDex.sol\":222:4189  contract OrderBookDex is Ownable {... */\n  jump(tag_15)\n    /* \"contracts/utils/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/utils/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"contracts/utils/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/utils/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/utils/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/utils/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/utils/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"contracts/utils/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"contracts/OrderBookDex.sol\":222:4189  contract OrderBookDex is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/OrderBookDex.sol\":222:4189  contract OrderBookDex is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x935b13f6\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xd7eb64f7\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xd7eb64f7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe07a8665\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x935b13f6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa451f602\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x715018a6\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x80770b05\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x3161a93a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x433ff288\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/OrderBookDex.sol\":467:756  function ratio(string memory numerator, string memory denominator)... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n        /* \"#utility.yul\":1829:1854   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1817:1819   */\n      0x20\n        /* \"#utility.yul\":1802:1820   */\n      add\n        /* \"contracts/OrderBookDex.sol\":467:756  function ratio(string memory numerator, string memory denominator)... */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/OrderBookDex.sol\":2751:3109  function addLiquidity(string memory _name, uint256 _amount) public {... */\n    tag_4:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/utils/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_22\n      tag_27\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":762:1803  function queryAmountOut(... */\n    tag_6:\n      tag_16\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"contracts/utils/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"contracts/utils/Ownable.sol\":1240:1247  address */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1266:1272  _owner */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":3052:3094   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3040:3095   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3022:3096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3010:3012   */\n      0x20\n        /* \"#utility.yul\":2995:3013   */\n      add\n        /* \"contracts/utils/Ownable.sol\":1194:1279  function owner() public view virtual returns (address) {... */\n      tag_20\n        /* \"#utility.yul\":2876:3102   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":322:370  mapping(string => address) public tokenAddresses */\n    tag_8:\n      tag_33\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x02\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"contracts/OrderBookDex.sol\":1809:2745  function swap(... */\n    tag_9:\n      tag_22\n      tag_43\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":3268:3587  function addTrustedTokensMulti(... */\n    tag_10:\n      tag_22\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":3115:3262  function addTrustedTokens(address _token, string memory _name)... */\n    tag_11:\n      tag_22\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/utils/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_22\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":467:756  function ratio(string memory numerator, string memory denominator)... */\n    tag_19:\n        /* \"contracts/OrderBookDex.sol\":579:585  int256 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":601:623  string memory pairName */\n      dup1\n        /* \"contracts/OrderBookDex.sol\":640:649  numerator */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":656:667  denominator */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":626:668  string.concat(numerator, \"_\", denominator) */\n      add(0x20, mload(0x40))\n      tag_58\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/OrderBookDex.sol\":697:706  pricefeed */\n      sload(0x01)\n        /* \"contracts/OrderBookDex.sol\":697:727  pricefeed.checkPrice(pairName) */\n      0xabc4544e00000000000000000000000000000000000000000000000000000000\n      dup4\n      mstore\n        /* \"contracts/OrderBookDex.sol\":626:668  string.concat(numerator, \"_\", denominator) */\n      swap1\n      swap3\n      pop\n        /* \"contracts/OrderBookDex.sol\":679:691  int256 price */\n      0x00\n      swap2\n        /* \"contracts/OrderBookDex.sol\":697:706  pricefeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/OrderBookDex.sol\":697:717  pricefeed.checkPrice */\n      0xabc4544e\n      swap1\n        /* \"contracts/OrderBookDex.sol\":697:727  pricefeed.checkPrice(pairName) */\n      tag_60\n      swap1\n        /* \"contracts/OrderBookDex.sol\":626:668  string.concat(numerator, \"_\", denominator) */\n      dup6\n      swap1\n        /* \"contracts/OrderBookDex.sol\":697:727  pricefeed.checkPrice(pairName) */\n      0x04\n      add\n      tag_61\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      pop\n        /* \"contracts/OrderBookDex.sol\":678:727  (int256 price, ) = pricefeed.checkPrice(pairName) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/OrderBookDex.sol\":467:756  function ratio(string memory numerator, string memory denominator)... */\n    tag_57:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":2751:3109  function addLiquidity(string memory _name, uint256 _amount) public {... */\n    tag_25:\n        /* \"contracts/OrderBookDex.sol\":2882:2883  0 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":2849:2884  tokenAddresses[_name] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2849:2863  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":2864:2869  _name */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":2849:2870  tokenAddresses[_name] */\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2849:2884  tokenAddresses[_name] != address(0) */\n      sub\n        /* \"contracts/OrderBookDex.sol\":2828:2939  require(... */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8562:8564   */\n      0x20\n        /* \"contracts/OrderBookDex.sol\":2828:2939  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8544:8565   */\n      mstore\n        /* \"#utility.yul\":8601:8603   */\n      0x1d\n        /* \"#utility.yul\":8581:8599   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8574:8604   */\n      mstore\n        /* \"#utility.yul\":8640:8671   */\n      0x546f6b656e73206e6f7420617661696c61626c6520666f722073776170000000\n        /* \"#utility.yul\":8620:8638   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8613:8672   */\n      mstore\n        /* \"#utility.yul\":8689:8707   */\n      0x64\n      add\n        /* \"contracts/OrderBookDex.sol\":2828:2939  require(... */\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/OrderBookDex.sol\":2950:3102  _safeTransferFrom(... */\n      tag_72\n        /* \"contracts/OrderBookDex.sol\":2989:3003  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":3004:3009  _name */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":2989:3010  tokenAddresses[_name] */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_73:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":3033:3043  msg.sender */\n      caller\n        /* \"contracts/OrderBookDex.sol\":3066:3070  this */\n      address\n        /* \"contracts/OrderBookDex.sol\":3085:3092  _amount */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":2950:2967  _safeTransferFrom */\n      tag_74\n        /* \"contracts/OrderBookDex.sol\":2950:3102  _safeTransferFrom(... */\n      jump\t// in\n    tag_72:\n        /* \"contracts/OrderBookDex.sol\":2751:3109  function addLiquidity(string memory _name, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_76\n        /* \"contracts/utils/Ownable.sol\":1087:1098  _checkOwner */\n      tag_77\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/utils/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_79\n        /* \"contracts/utils/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_80\n        /* \"contracts/utils/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/utils/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":762:1803  function queryAmountOut(... */\n    tag_31:\n        /* \"contracts/OrderBookDex.sol\":1013:1037  abi.encodePacked(\"usdt\") */\n      mload(0x40)\n        /* \"#utility.yul\":8932:8938   */\n      0x7573647400000000000000000000000000000000000000000000000000000000\n        /* \"contracts/OrderBookDex.sol\":1013:1037  abi.encodePacked(\"usdt\") */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":8920:8939   */\n      mstore\n        /* \"contracts/OrderBookDex.sol\":910:916  int256 */\n      0x00\n      swap1\n        /* \"#utility.yul\":8955:8966   */\n      0x24\n      add\n        /* \"contracts/OrderBookDex.sol\":1013:1037  abi.encodePacked(\"usdt\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OrderBookDex.sol\":1003:1038  keccak256(abi.encodePacked(\"usdt\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":972:985  fromTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":955:986  abi.encodePacked(fromTokenName) */\n      add(0x20, mload(0x40))\n      tag_84\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OrderBookDex.sol\":945:987  keccak256(abi.encodePacked(fromTokenName)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":945:1038  keccak256(abi.encodePacked(fromTokenName)) ==... */\n      sub\n        /* \"contracts/OrderBookDex.sol\":928:1264  if (... */\n      tag_85\n      jumpi\n        /* \"contracts/OrderBookDex.sol\":1063:1079  int256 priceFlip */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1082:1115  ratio(toTokenName, fromTokenName) */\n      tag_86\n        /* \"contracts/OrderBookDex.sol\":1088:1099  toTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":1101:1114  fromTokenName */\n      dup7\n        /* \"contracts/OrderBookDex.sol\":1082:1087  ratio */\n      tag_19\n        /* \"contracts/OrderBookDex.sol\":1082:1115  ratio(toTokenName, fromTokenName) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/OrderBookDex.sol\":1063:1115  int256 priceFlip = ratio(toTokenName, fromTokenName) */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1129:1153  int256 tokenAmountToUSDT */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1175:1199  int256(1e18) / priceFlip */\n      tag_87\n        /* \"contracts/OrderBookDex.sol\":1063:1115  int256 priceFlip = ratio(toTokenName, fromTokenName) */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1182:1186  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/OrderBookDex.sol\":1175:1199  int256(1e18) / priceFlip */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/OrderBookDex.sol\":1156:1200  int256(_amount) * (int256(1e18) / priceFlip) */\n      tag_89\n      swap1\n        /* \"contracts/OrderBookDex.sol\":1163:1170  _amount */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1156:1200  int256(_amount) * (int256(1e18) / priceFlip) */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/OrderBookDex.sol\":1129:1200  int256 tokenAmountToUSDT = int256(_amount) * (int256(1e18) / priceFlip) */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1249:1253  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/OrderBookDex.sol\":1222:1245  tokenAmountToUSDT * 1e8 */\n      tag_91\n        /* \"contracts/OrderBookDex.sol\":1129:1200  int256 tokenAmountToUSDT = int256(_amount) * (int256(1e18) / priceFlip) */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1242:1245  1e8 */\n      0x05f5e100\n        /* \"contracts/OrderBookDex.sol\":1222:1245  tokenAmountToUSDT * 1e8 */\n      tag_90\n      jump\t// in\n    tag_91:\n        /* \"contracts/OrderBookDex.sol\":1221:1253  (tokenAmountToUSDT * 1e8) / 1e18 */\n      tag_92\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_92:\n        /* \"contracts/OrderBookDex.sol\":1214:1253  return (tokenAmountToUSDT * 1e8) / 1e18 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_81)\n        /* \"contracts/OrderBookDex.sol\":928:1264  if (... */\n    tag_85:\n        /* \"contracts/OrderBookDex.sol\":1369:1380  toTokenName */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1352:1381  abi.encodePacked(toTokenName) */\n      add(0x20, mload(0x40))\n      tag_93\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OrderBookDex.sol\":1342:1382  keccak256(abi.encodePacked(toTokenName)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":1301:1325  abi.encodePacked(\"usdt\") */\n      add(0x20, mload(0x40))\n      tag_94\n      swap1\n        /* \"#utility.yul\":8932:8938   */\n      0x7573647400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8920:8939   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8964:8965   */\n      0x04\n        /* \"#utility.yul\":8955:8966   */\n      add\n      swap1\n        /* \"#utility.yul\":8718:8972   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":1301:1325  abi.encodePacked(\"usdt\") */\n    tag_94:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/OrderBookDex.sol\":1291:1326  keccak256(abi.encodePacked(\"usdt\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":1291:1382  keccak256(abi.encodePacked(\"usdt\")) ==... */\n      sub\n        /* \"contracts/OrderBookDex.sol\":1274:1580  if (... */\n      tag_95\n      jumpi\n        /* \"contracts/OrderBookDex.sol\":1407:1419  int256 price */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1422:1455  ratio(fromTokenName, toTokenName) */\n      tag_96\n        /* \"contracts/OrderBookDex.sol\":1428:1441  fromTokenName */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1443:1454  toTokenName */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1422:1427  ratio */\n      tag_19\n        /* \"contracts/OrderBookDex.sol\":1422:1455  ratio(fromTokenName, toTokenName) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/OrderBookDex.sol\":1407:1455  int256 price = ratio(fromTokenName, toTokenName) */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1469:1495  int256 tokenAmountFromUSDT */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1498:1523  int256(_amount) * (price) */\n      tag_97\n        /* \"contracts/OrderBookDex.sol\":1407:1455  int256 price = ratio(fromTokenName, toTokenName) */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1505:1512  _amount */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1498:1523  int256(_amount) * (price) */\n      tag_90\n      jump\t// in\n    tag_97:\n        /* \"contracts/OrderBookDex.sol\":1469:1523  int256 tokenAmountFromUSDT = int256(_amount) * (price) */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1544:1569  tokenAmountFromUSDT / 1e8 */\n      tag_92\n        /* \"contracts/OrderBookDex.sol\":1566:1569  1e8 */\n      0x05f5e100\n        /* \"contracts/OrderBookDex.sol\":1469:1523  int256 tokenAmountFromUSDT = int256(_amount) * (price) */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1544:1569  tokenAmountFromUSDT / 1e8 */\n      tag_88\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":1274:1580  if (... */\n    tag_95:\n        /* \"contracts/OrderBookDex.sol\":1590:1603  int256 price1 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1606:1634  ratio(fromTokenName, \"usdt\") */\n      tag_99\n        /* \"contracts/OrderBookDex.sol\":1612:1625  fromTokenName */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1606:1634  ratio(fromTokenName, \"usdt\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x7573647400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/OrderBookDex.sol\":1606:1611  ratio */\n      tag_19\n        /* \"contracts/OrderBookDex.sol\":1606:1634  ratio(fromTokenName, \"usdt\") */\n      jump\t// in\n    tag_99:\n        /* \"contracts/OrderBookDex.sol\":1590:1634  int256 price1 = ratio(fromTokenName, \"usdt\") */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1644:1657  int256 price2 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1660:1686  ratio(toTokenName, \"usdt\") */\n      tag_100\n        /* \"contracts/OrderBookDex.sol\":1666:1677  toTokenName */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":1660:1686  ratio(toTokenName, \"usdt\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x7573647400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/OrderBookDex.sol\":1660:1665  ratio */\n      tag_19\n        /* \"contracts/OrderBookDex.sol\":1660:1686  ratio(toTokenName, \"usdt\") */\n      jump\t// in\n    tag_100:\n        /* \"contracts/OrderBookDex.sol\":1644:1686  int256 price2 = ratio(toTokenName, \"usdt\") */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1696:1714  int256 tokenAmount */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1644:1686  int256 price2 = ratio(toTokenName, \"usdt\") */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":1737:1750  price1 * 1e18 */\n      tag_101\n        /* \"contracts/OrderBookDex.sol\":1737:1743  price1 */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":1746:1750  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/OrderBookDex.sol\":1737:1750  price1 * 1e18 */\n      tag_90\n      jump\t// in\n    tag_101:\n        /* \"contracts/OrderBookDex.sol\":1736:1760  (price1 * 1e18) / price2 */\n      tag_102\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_102:\n        /* \"contracts/OrderBookDex.sol\":1717:1761  int256(_amount) * ((price1 * 1e18) / price2) */\n      tag_103\n      swap1\n        /* \"contracts/OrderBookDex.sol\":1724:1731  _amount */\n      dup7\n        /* \"contracts/OrderBookDex.sol\":1717:1761  int256(_amount) * ((price1 * 1e18) / price2) */\n      tag_90\n      jump\t// in\n    tag_103:\n        /* \"contracts/OrderBookDex.sol\":1696:1761  int256 tokenAmount = int256(_amount) * ((price1 * 1e18) / price2) */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":1778:1796  tokenAmount / 1e18 */\n      tag_104\n        /* \"contracts/OrderBookDex.sol\":1792:1796  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/OrderBookDex.sol\":1696:1761  int256 tokenAmount = int256(_amount) * ((price1 * 1e18) / price2) */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":1778:1796  tokenAmount / 1e18 */\n      tag_88\n      jump\t// in\n    tag_104:\n        /* \"contracts/OrderBookDex.sol\":1771:1796  return tokenAmount / 1e18 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/OrderBookDex.sol\":762:1803  function queryAmountOut(... */\n    tag_81:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":1809:2745  function swap(... */\n    tag_44:\n        /* \"contracts/OrderBookDex.sol\":2009:2010  0 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":1967:2011  tokenAddresses[_fromTokenName] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":1967:1981  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":1982:1996  _fromTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":1967:1997  tokenAddresses[_fromTokenName] */\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_107:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":1967:2011  tokenAddresses[_fromTokenName] != address(0) */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/OrderBookDex.sol\":1967:2073  tokenAddresses[_fromTokenName] != address(0) &&... */\n      tag_108\n      jumpi\n      pop\n        /* \"contracts/OrderBookDex.sol\":2071:2072  0 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":2031:2073  tokenAddresses[_toTokenName] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2031:2045  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":2046:2058  _toTokenName */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":2031:2059  tokenAddresses[_toTokenName] */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_109:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2031:2073  tokenAddresses[_toTokenName] != address(0) */\n      eq\n      iszero\n        /* \"contracts/OrderBookDex.sol\":1967:2073  tokenAddresses[_fromTokenName] != address(0) &&... */\n    tag_108:\n        /* \"contracts/OrderBookDex.sol\":1945:2129  require(... */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8562:8564   */\n      0x20\n        /* \"contracts/OrderBookDex.sol\":1945:2129  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8544:8565   */\n      mstore\n        /* \"#utility.yul\":8601:8603   */\n      0x1d\n        /* \"#utility.yul\":8581:8599   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8574:8604   */\n      mstore\n        /* \"#utility.yul\":8640:8671   */\n      0x546f6b656e73206e6f7420617661696c61626c6520666f722073776170000000\n        /* \"#utility.yul\":8620:8638   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8613:8672   */\n      mstore\n        /* \"#utility.yul\":8689:8707   */\n      0x64\n      add\n        /* \"contracts/OrderBookDex.sol\":1945:2129  require(... */\n      tag_70\n        /* \"#utility.yul\":8360:8713   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":1945:2129  require(... */\n    tag_110:\n        /* \"contracts/OrderBookDex.sol\":2139:2159  uint256 returnAmount */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":2183:2236  queryAmountOut(_fromTokenName, _toTokenName, _amount) */\n      tag_112\n        /* \"contracts/OrderBookDex.sol\":2198:2212  _fromTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":2214:2226  _toTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":2228:2235  _amount */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":2183:2197  queryAmountOut */\n      tag_31\n        /* \"contracts/OrderBookDex.sol\":2183:2236  queryAmountOut(_fromTokenName, _toTokenName, _amount) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/OrderBookDex.sol\":2139:2246  uint256 returnAmount = uint256(... */\n      swap1\n      pop\n        /* \"contracts/OrderBookDex.sol\":2279:2280  0 */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":2264:2276  returnAmount */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":2264:2280  returnAmount > 0 */\n      gt\n        /* \"contracts/OrderBookDex.sol\":2256:2303  require(returnAmount > 0, \"Invalid price feed\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10132:10134   */\n      0x20\n        /* \"contracts/OrderBookDex.sol\":2256:2303  require(returnAmount > 0, \"Invalid price feed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10114:10135   */\n      mstore\n        /* \"#utility.yul\":10171:10173   */\n      0x12\n        /* \"#utility.yul\":10151:10169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10144:10174   */\n      mstore\n        /* \"#utility.yul\":10210:10230   */\n      0x496e76616c696420707269636520666565640000000000000000000000000000\n        /* \"#utility.yul\":10190:10208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10183:10231   */\n      mstore\n        /* \"#utility.yul\":10248:10266   */\n      0x64\n      add\n        /* \"contracts/OrderBookDex.sol\":2256:2303  require(returnAmount > 0, \"Invalid price feed\") */\n      tag_70\n        /* \"#utility.yul\":9930:10272   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":2256:2303  require(returnAmount > 0, \"Invalid price feed\") */\n    tag_113:\n        /* \"contracts/OrderBookDex.sol\":2350:2375  _getBalance(_toTokenName) */\n      tag_116\n        /* \"contracts/OrderBookDex.sol\":2362:2374  _toTokenName */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":2350:2361  _getBalance */\n      tag_117\n        /* \"contracts/OrderBookDex.sol\":2350:2375  _getBalance(_toTokenName) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/OrderBookDex.sol\":2334:2346  returnAmount */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":2334:2375  returnAmount <= _getBalance(_toTokenName) */\n      gt\n      iszero\n        /* \"contracts/OrderBookDex.sol\":2313:2423  require(... */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10479:10481   */\n      0x20\n        /* \"contracts/OrderBookDex.sol\":2313:2423  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10461:10482   */\n      mstore\n        /* \"#utility.yul\":10518:10520   */\n      0x16\n        /* \"#utility.yul\":10498:10516   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10491:10521   */\n      mstore\n        /* \"#utility.yul\":10557:10581   */\n      0x496e73756666696369656e74204c697175696469747900000000000000000000\n        /* \"#utility.yul\":10537:10555   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10530:10582   */\n      mstore\n        /* \"#utility.yul\":10599:10617   */\n      0x64\n      add\n        /* \"contracts/OrderBookDex.sol\":2313:2423  require(... */\n      tag_70\n        /* \"#utility.yul\":10277:10623   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":2313:2423  require(... */\n    tag_118:\n        /* \"contracts/OrderBookDex.sol\":2433:2594  _safeTransferFrom(... */\n      tag_121\n        /* \"contracts/OrderBookDex.sol\":2472:2486  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":2487:2501  _fromTokenName */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":2472:2502  tokenAddresses[_fromTokenName] */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_122:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2525:2535  msg.sender */\n      caller\n        /* \"contracts/OrderBookDex.sol\":2558:2562  this */\n      address\n        /* \"contracts/OrderBookDex.sol\":2577:2584  _amount */\n      dup6\n        /* \"contracts/OrderBookDex.sol\":2433:2450  _safeTransferFrom */\n      tag_74\n        /* \"contracts/OrderBookDex.sol\":2433:2594  _safeTransferFrom(... */\n      jump\t// in\n    tag_121:\n        /* \"contracts/OrderBookDex.sol\":2604:2737  _safeTransfer(... */\n      tag_123\n        /* \"contracts/OrderBookDex.sol\":2639:2653  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":2654:2666  _toTokenName */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":2639:2667  tokenAddresses[_toTokenName] */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_124:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/OrderBookDex.sol\":2690:2700  msg.sender */\n      caller\n        /* \"contracts/OrderBookDex.sol\":2715:2727  returnAmount */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":2604:2617  _safeTransfer */\n      tag_125\n        /* \"contracts/OrderBookDex.sol\":2604:2737  _safeTransfer(... */\n      jump\t// in\n    tag_123:\n        /* \"contracts/OrderBookDex.sol\":1935:2745  {... */\n      pop\n        /* \"contracts/OrderBookDex.sol\":1809:2745  function swap(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":3268:3587  function addTrustedTokensMulti(... */\n    tag_48:\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_127\n        /* \"contracts/utils/Ownable.sol\":1087:1098  _checkOwner */\n      tag_77\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/OrderBookDex.sol\":3424:3430  _names */\n      dup1\n        /* \"contracts/OrderBookDex.sol\":3424:3437  _names.length */\n      mload\n        /* \"contracts/OrderBookDex.sol\":3406:3413  _tokens */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":3406:3420  _tokens.length */\n      mload\n        /* \"contracts/OrderBookDex.sol\":3406:3437  _tokens.length == _names.length */\n      eq\n        /* \"contracts/OrderBookDex.sol\":3398:3462  require(_tokens.length == _names.length, \"Invalid Names/Tokens\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10830:10832   */\n      0x20\n        /* \"contracts/OrderBookDex.sol\":3398:3462  require(_tokens.length == _names.length, \"Invalid Names/Tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10812:10833   */\n      mstore\n        /* \"#utility.yul\":10869:10871   */\n      0x14\n        /* \"#utility.yul\":10849:10867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10842:10872   */\n      mstore\n        /* \"#utility.yul\":10908:10930   */\n      0x496e76616c6964204e616d65732f546f6b656e73000000000000000000000000\n        /* \"#utility.yul\":10888:10906   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10881:10931   */\n      mstore\n        /* \"#utility.yul\":10948:10966   */\n      0x64\n      add\n        /* \"contracts/OrderBookDex.sol\":3398:3462  require(_tokens.length == _names.length, \"Invalid Names/Tokens\") */\n      tag_70\n        /* \"#utility.yul\":10628:10972   */\n      jump\n        /* \"contracts/OrderBookDex.sol\":3398:3462  require(_tokens.length == _names.length, \"Invalid Names/Tokens\") */\n    tag_129:\n        /* \"contracts/OrderBookDex.sol\":3478:3487  uint256 i */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":3473:3581  for (uint256 i = 0; i < _tokens.length; i++) {... */\n    tag_132:\n        /* \"contracts/OrderBookDex.sol\":3497:3504  _tokens */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":3497:3511  _tokens.length */\n      mload\n        /* \"contracts/OrderBookDex.sol\":3493:3494  i */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":3493:3511  i < _tokens.length */\n      lt\n        /* \"contracts/OrderBookDex.sol\":3473:3581  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/OrderBookDex.sol\":3560:3567  _tokens */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":3568:3569  i */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":3560:3570  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OrderBookDex.sol\":3532:3546  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":3547:3553  _names */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":3554:3555  i */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":3547:3556  _names[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_137\n      jump\t// in\n    tag_139:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/OrderBookDex.sol\":3532:3557  tokenAddresses[_names[i]] */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_140:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":3532:3570  tokenAddresses[_names[i]] = _tokens[i] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/OrderBookDex.sol\":3513:3516  i++ */\n      dup1\n      tag_141\n      dup2\n      tag_142\n      jump\t// in\n    tag_141:\n      swap2\n      pop\n      pop\n        /* \"contracts/OrderBookDex.sol\":3473:3581  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      jump(tag_132)\n    tag_133:\n      pop\n        /* \"contracts/OrderBookDex.sol\":3268:3587  function addTrustedTokensMulti(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":3115:3262  function addTrustedTokens(address _token, string memory _name)... */\n    tag_52:\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_144\n        /* \"contracts/utils/Ownable.sol\":1087:1098  _checkOwner */\n      tag_77\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/OrderBookDex.sol\":3249:3255  _token */\n      dup2\n        /* \"contracts/OrderBookDex.sol\":3225:3239  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":3240:3245  _name */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":3225:3246  tokenAddresses[_name] */\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_146:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n        /* \"contracts/OrderBookDex.sol\":3225:3255  tokenAddresses[_name] = _token */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/OrderBookDex.sol\":3115:3262  function addTrustedTokens(address _token, string memory _name)... */\n      jump\t// out\n        /* \"contracts/utils/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_56:\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      tag_148\n        /* \"contracts/utils/Ownable.sol\":1087:1098  _checkOwner */\n      tag_77\n        /* \"contracts/utils/Ownable.sol\":1087:1100  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/utils/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/utils/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11568:11570   */\n      0x20\n        /* \"contracts/utils/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11550:11571   */\n      mstore\n        /* \"#utility.yul\":11607:11609   */\n      0x26\n        /* \"#utility.yul\":11587:11605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11580:11610   */\n      mstore\n        /* \"#utility.yul\":11646:11680   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11626:11644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11619:11681   */\n      mstore\n        /* \"#utility.yul\":11717:11725   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11697:11715   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11690:11726   */\n      mstore\n        /* \"#utility.yul\":11743:11762   */\n      0x84\n      add\n        /* \"contracts/utils/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_70\n        /* \"#utility.yul\":11366:11768   */\n      jump\n        /* \"contracts/utils/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_150:\n        /* \"contracts/utils/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_153\n        /* \"contracts/utils/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"contracts/utils/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_80\n        /* \"contracts/utils/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/utils/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":3593:3804  function _safeTransferFrom(... */\n    tag_74:\n        /* \"contracts/OrderBookDex.sol\":3732:3797  IERC20(token).safeTransferFrom(address(from), address(to), value) */\n      tag_123\n        /* \"contracts/OrderBookDex.sol\":3732:3762  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"contracts/OrderBookDex.sol\":3771:3775  from */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":3786:3788  to */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":3791:3796  value */\n      dup5\n        /* \"contracts/OrderBookDex.sol\":3732:3762  IERC20(token).safeTransferFrom */\n      tag_156\n        /* \"contracts/OrderBookDex.sol\":3732:3797  IERC20(token).safeTransferFrom(address(from), address(to), value) */\n      jump\t// in\n        /* \"contracts/utils/Ownable.sol\":1352:1482  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"contracts/utils/Ownable.sol\":1240:1247  address */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":1266:1272  _owner */\n      sload\n        /* \"contracts/utils/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/utils/Ownable.sol\":1266:1272  _owner */\n      and\n        /* \"contracts/utils/Context.sol\":721:731  msg.sender */\n      caller\n        /* \"contracts/utils/Ownable.sol\":1415:1438  owner() == _msgSender() */\n      eq\n        /* \"contracts/utils/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11975:11977   */\n      0x20\n        /* \"contracts/utils/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11957:11978   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11994:12012   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11987:12017   */\n      mstore\n        /* \"#utility.yul\":12053:12087   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12033:12051   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12026:12088   */\n      mstore\n        /* \"#utility.yul\":12105:12123   */\n      0x64\n      add\n        /* \"contracts/utils/Ownable.sol\":1407:1475  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_70\n        /* \"#utility.yul\":11773:12129   */\n      jump\n        /* \"contracts/utils/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_80:\n        /* \"contracts/utils/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"contracts/utils/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/utils/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/utils/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/utils/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"contracts/utils/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/utils/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"contracts/utils/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/OrderBookDex.sol\":3986:4187  function _getBalance(string memory _tokenName)... */\n    tag_117:\n        /* \"contracts/OrderBookDex.sol\":4080:4095  uint256 balance */\n      0x00\n        /* \"contracts/OrderBookDex.sol\":4128:4142  tokenAddresses */\n      0x02\n        /* \"contracts/OrderBookDex.sol\":4143:4153  _tokenName */\n      dup3\n        /* \"contracts/OrderBookDex.sol\":4128:4154  tokenAddresses[_tokenName] */\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_166:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n      sload\n        /* \"contracts/OrderBookDex.sol\":4121:4180  IERC20(tokenAddresses[_tokenName]).balanceOf(address(this)) */\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup3\n      mstore\n        /* \"contracts/OrderBookDex.sol\":4174:4178  this */\n      address\n        /* \"contracts/OrderBookDex.sol\":4121:4180  IERC20(tokenAddresses[_tokenName]).balanceOf(address(this)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3022:3096   */\n      mstore\n        /* \"contracts/OrderBookDex.sol\":4128:4154  tokenAddresses[_tokenName] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"contracts/OrderBookDex.sol\":4121:4165  IERC20(tokenAddresses[_tokenName]).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2995:3013   */\n      0x24\n      add\n        /* \"contracts/OrderBookDex.sol\":4121:4180  IERC20(tokenAddresses[_tokenName]).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n        /* \"contracts/OrderBookDex.sol\":3813:3980  function _safeTransfer(... */\n    tag_125:\n        /* \"contracts/OrderBookDex.sol\":3926:3973  IERC20(token).safeTransfer( address(to), value) */\n      tag_133\n        /* \"contracts/OrderBookDex.sol\":3926:3952  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"contracts/OrderBookDex.sol\":3962:3964  to */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":3967:3972  value */\n      dup4\n        /* \"contracts/OrderBookDex.sol\":3926:3952  IERC20(token).safeTransfer */\n      tag_174\n        /* \"contracts/OrderBookDex.sol\":3926:3973  IERC20(token).safeTransfer( address(to), value) */\n      jump\t// in\n        /* \"contracts/utils/SafeERC20.sol\":874:1115  function safeTransferFrom(... */\n    tag_156:\n        /* \"contracts/utils/SafeERC20.sol\":1039:1107  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":12535:12577   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12604:12619   */\n      dup1\n      dup6\n      and\n        /* \"contracts/utils/SafeERC20.sol\":1039:1107  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":12586:12620   */\n      mstore\n        /* \"#utility.yul\":12656:12671   */\n      dup4\n      and\n        /* \"#utility.yul\":12636:12654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12629:12672   */\n      mstore\n        /* \"#utility.yul\":12688:12706   */\n      0x64\n      dup2\n      add\n        /* \"#utility.yul\":12681:12715   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/utils/SafeERC20.sol\":1012:1108  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_123\n      swap1\n        /* \"contracts/utils/SafeERC20.sol\":1032:1037  token */\n      dup6\n      swap1\n        /* \"contracts/utils/SafeERC20.sol\":1062:1089  token.transferFrom.selector */\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":12498:12516   */\n      0x84\n      add\n        /* \"contracts/utils/SafeERC20.sol\":1039:1107  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n    tag_177:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"contracts/utils/SafeERC20.sol\":1012:1031  _callOptionalReturn */\n      tag_179\n        /* \"contracts/utils/SafeERC20.sol\":1012:1108  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n        /* \"contracts/utils/SafeERC20.sol\":663:868  function safeTransfer(... */\n    tag_174:\n        /* \"contracts/utils/SafeERC20.sol\":802:860  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      mload(0x40)\n        /* \"#utility.yul\":12930:12972   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12918:12973   */\n      dup4\n      and\n        /* \"contracts/utils/SafeERC20.sol\":802:860  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12900:12974   */\n      mstore\n        /* \"#utility.yul\":12990:13008   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":12983:13017   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/utils/SafeERC20.sol\":775:861  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_133\n      swap1\n        /* \"contracts/utils/SafeERC20.sol\":795:800  token */\n      dup5\n      swap1\n        /* \"contracts/utils/SafeERC20.sol\":825:848  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      swap1\n        /* \"#utility.yul\":12873:12891   */\n      0x64\n      add\n        /* \"contracts/utils/SafeERC20.sol\":802:860  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      tag_177\n        /* \"#utility.yul\":12726:13023   */\n      jump\n        /* \"contracts/utils/SafeERC20.sol\":2160:3187  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_179:\n        /* \"contracts/utils/SafeERC20.sol\":2809:2821  bool success */\n      0x00\n        /* \"contracts/utils/SafeERC20.sol\":2823:2846  bytes memory returndata */\n      dup1\n        /* \"contracts/utils/SafeERC20.sol\":2858:2863  token */\n      dup4\n        /* \"contracts/utils/SafeERC20.sol\":2850:2869  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/SafeERC20.sol\":2870:2874  data */\n      dup4\n        /* \"contracts/utils/SafeERC20.sol\":2850:2875  address(token).call(data) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_186:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_190\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_189)\n    tag_190:\n      0x60\n      swap2\n      pop\n    tag_189:\n      pop\n        /* \"contracts/utils/SafeERC20.sol\":2808:2875  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/utils/SafeERC20.sol\":2893:2900  success */\n      dup2\n        /* \"contracts/utils/SafeERC20.sol\":2885:2937  require(success, \"SafeERC20: low-level call failed\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":13522:13524   */\n      0x20\n        /* \"contracts/utils/SafeERC20.sol\":2885:2937  require(success, \"SafeERC20: low-level call failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13504:13525   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13541:13559   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13534:13564   */\n      mstore\n        /* \"#utility.yul\":13600:13634   */\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n        /* \"#utility.yul\":13580:13598   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13573:13635   */\n      mstore\n        /* \"#utility.yul\":13652:13670   */\n      0x64\n      add\n        /* \"contracts/utils/SafeERC20.sol\":2885:2937  require(success, \"SafeERC20: low-level call failed\") */\n      tag_70\n        /* \"#utility.yul\":13320:13676   */\n      jump\n        /* \"contracts/utils/SafeERC20.sol\":2885:2937  require(success, \"SafeERC20: low-level call failed\") */\n    tag_191:\n        /* \"contracts/utils/SafeERC20.sol\":2952:2969  returndata.length */\n      dup1\n      mload\n        /* \"contracts/utils/SafeERC20.sol\":2952:2973  returndata.length > 0 */\n      iszero\n        /* \"contracts/utils/SafeERC20.sol\":2948:3181  if (returndata.length > 0) {... */\n      tag_123\n      jumpi\n        /* \"contracts/utils/SafeERC20.sol\":3104:3114  returndata */\n      dup1\n        /* \"contracts/utils/SafeERC20.sol\":3093:3123  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/utils/SafeERC20.sol\":3085:3170  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":14165:14167   */\n      0x20\n        /* \"contracts/utils/SafeERC20.sol\":3085:3170  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14147:14168   */\n      mstore\n        /* \"#utility.yul\":14204:14206   */\n      0x2a\n        /* \"#utility.yul\":14184:14202   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14177:14207   */\n      mstore\n        /* \"#utility.yul\":14243:14277   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":14223:14241   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14216:14278   */\n      mstore\n        /* \"#utility.yul\":14314:14326   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14294:14312   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14287:14327   */\n      mstore\n        /* \"#utility.yul\":14344:14363   */\n      0x84\n      add\n        /* \"contracts/utils/SafeERC20.sol\":3085:3170  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_70\n        /* \"#utility.yul\":13963:14369   */\n      jump\n        /* \"#utility.yul\":14:198   */\n    tag_200:\n        /* \"#utility.yul\":66:143   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:144   */\n      mstore\n        /* \"#utility.yul\":163:167   */\n      0x41\n        /* \"#utility.yul\":160:161   */\n      0x04\n        /* \"#utility.yul\":153:168   */\n      mstore\n        /* \"#utility.yul\":187:191   */\n      0x24\n        /* \"#utility.yul\":184:185   */\n      0x00\n        /* \"#utility.yul\":177:192   */\n      revert\n        /* \"#utility.yul\":203:537   */\n    tag_201:\n        /* \"#utility.yul\":274:276   */\n      0x40\n        /* \"#utility.yul\":268:277   */\n      mload\n        /* \"#utility.yul\":330:332   */\n      0x1f\n        /* \"#utility.yul\":320:333   */\n      dup3\n      add\n        /* \"#utility.yul\":335:401   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":316:402   */\n      and\n        /* \"#utility.yul\":304:403   */\n      dup2\n      add\n        /* \"#utility.yul\":433:451   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":418:452   */\n      dup2\n      gt\n        /* \"#utility.yul\":454:476   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":415:477   */\n      or\n        /* \"#utility.yul\":412:500   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":480:498   */\n      tag_212\n      tag_200\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":516:518   */\n      0x40\n        /* \"#utility.yul\":509:531   */\n      mstore\n        /* \"#utility.yul\":203:537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":542:1132   */\n    tag_202:\n        /* \"#utility.yul\":585:590   */\n      0x00\n        /* \"#utility.yul\":638:641   */\n      dup3\n        /* \"#utility.yul\":631:635   */\n      0x1f\n        /* \"#utility.yul\":623:629   */\n      dup4\n        /* \"#utility.yul\":619:636   */\n      add\n        /* \"#utility.yul\":615:642   */\n      slt\n        /* \"#utility.yul\":605:660   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":656:657   */\n      0x00\n        /* \"#utility.yul\":653:654   */\n      dup1\n        /* \"#utility.yul\":646:658   */\n      revert\n        /* \"#utility.yul\":605:660   */\n    tag_214:\n        /* \"#utility.yul\":692:698   */\n      dup2\n        /* \"#utility.yul\":679:699   */\n      calldataload\n        /* \"#utility.yul\":718:736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":714:716   */\n      dup2\n        /* \"#utility.yul\":711:737   */\n      gt\n        /* \"#utility.yul\":708:760   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":740:758   */\n      tag_216\n      tag_200\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":784:898   */\n      tag_217\n        /* \"#utility.yul\":892:896   */\n      0x20\n        /* \"#utility.yul\":823:889   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":816:820   */\n      0x1f\n        /* \"#utility.yul\":812:814   */\n      dup5\n        /* \"#utility.yul\":808:821   */\n      add\n        /* \"#utility.yul\":804:890   */\n      and\n        /* \"#utility.yul\":800:897   */\n      add\n        /* \"#utility.yul\":784:898   */\n      tag_201\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":923:925   */\n      dup2\n        /* \"#utility.yul\":914:921   */\n      dup2\n        /* \"#utility.yul\":907:926   */\n      mstore\n        /* \"#utility.yul\":969:972   */\n      dup5\n        /* \"#utility.yul\":962:966   */\n      0x20\n        /* \"#utility.yul\":957:959   */\n      dup4\n        /* \"#utility.yul\":949:955   */\n      dup7\n        /* \"#utility.yul\":945:960   */\n      add\n        /* \"#utility.yul\":941:967   */\n      add\n        /* \"#utility.yul\":938:973   */\n      gt\n        /* \"#utility.yul\":935:990   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":986:987   */\n      0x00\n        /* \"#utility.yul\":983:984   */\n      dup1\n        /* \"#utility.yul\":976:988   */\n      revert\n        /* \"#utility.yul\":935:990   */\n    tag_218:\n        /* \"#utility.yul\":1051:1053   */\n      dup2\n        /* \"#utility.yul\":1044:1048   */\n      0x20\n        /* \"#utility.yul\":1036:1042   */\n      dup6\n        /* \"#utility.yul\":1032:1049   */\n      add\n        /* \"#utility.yul\":1025:1029   */\n      0x20\n        /* \"#utility.yul\":1016:1023   */\n      dup4\n        /* \"#utility.yul\":1012:1030   */\n      add\n        /* \"#utility.yul\":999:1054   */\n      calldatacopy\n        /* \"#utility.yul\":1099:1100   */\n      0x00\n        /* \"#utility.yul\":1074:1090   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1092:1096   */\n      0x20\n        /* \"#utility.yul\":1070:1097   */\n      add\n        /* \"#utility.yul\":1063:1101   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1078:1085   */\n      swap4\n        /* \"#utility.yul\":542:1132   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1137:1680   */\n    tag_18:\n        /* \"#utility.yul\":1225:1231   */\n      0x00\n        /* \"#utility.yul\":1233:1239   */\n      dup1\n        /* \"#utility.yul\":1286:1288   */\n      0x40\n        /* \"#utility.yul\":1274:1283   */\n      dup4\n        /* \"#utility.yul\":1265:1272   */\n      dup6\n        /* \"#utility.yul\":1261:1284   */\n      sub\n        /* \"#utility.yul\":1257:1289   */\n      slt\n        /* \"#utility.yul\":1254:1306   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":1302:1303   */\n      0x00\n        /* \"#utility.yul\":1299:1300   */\n      dup1\n        /* \"#utility.yul\":1292:1304   */\n      revert\n        /* \"#utility.yul\":1254:1306   */\n    tag_220:\n        /* \"#utility.yul\":1342:1351   */\n      dup3\n        /* \"#utility.yul\":1329:1352   */\n      calldataload\n        /* \"#utility.yul\":1371:1389   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1412:1414   */\n      dup1\n        /* \"#utility.yul\":1404:1410   */\n      dup3\n        /* \"#utility.yul\":1401:1415   */\n      gt\n        /* \"#utility.yul\":1398:1432   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":1428:1429   */\n      0x00\n        /* \"#utility.yul\":1425:1426   */\n      dup1\n        /* \"#utility.yul\":1418:1430   */\n      revert\n        /* \"#utility.yul\":1398:1432   */\n    tag_221:\n        /* \"#utility.yul\":1451:1501   */\n      tag_222\n        /* \"#utility.yul\":1493:1500   */\n      dup7\n        /* \"#utility.yul\":1484:1490   */\n      dup4\n        /* \"#utility.yul\":1473:1482   */\n      dup8\n        /* \"#utility.yul\":1469:1491   */\n      add\n        /* \"#utility.yul\":1451:1501   */\n      tag_202\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1441:1501   */\n      swap4\n      pop\n        /* \"#utility.yul\":1554:1556   */\n      0x20\n        /* \"#utility.yul\":1543:1552   */\n      dup6\n        /* \"#utility.yul\":1539:1557   */\n      add\n        /* \"#utility.yul\":1526:1558   */\n      calldataload\n        /* \"#utility.yul\":1510:1558   */\n      swap2\n      pop\n        /* \"#utility.yul\":1583:1585   */\n      dup1\n        /* \"#utility.yul\":1573:1581   */\n      dup3\n        /* \"#utility.yul\":1570:1586   */\n      gt\n        /* \"#utility.yul\":1567:1603   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1596:1597   */\n      dup1\n        /* \"#utility.yul\":1589:1601   */\n      revert\n        /* \"#utility.yul\":1567:1603   */\n    tag_223:\n      pop\n        /* \"#utility.yul\":1622:1674   */\n      tag_224\n        /* \"#utility.yul\":1666:1673   */\n      dup6\n        /* \"#utility.yul\":1655:1663   */\n      dup3\n        /* \"#utility.yul\":1644:1653   */\n      dup7\n        /* \"#utility.yul\":1640:1664   */\n      add\n        /* \"#utility.yul\":1622:1674   */\n      tag_202\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1612:1674   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1137:1680   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1865:2255   */\n    tag_24:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1951:1957   */\n      dup1\n        /* \"#utility.yul\":2004:2006   */\n      0x40\n        /* \"#utility.yul\":1992:2001   */\n      dup4\n        /* \"#utility.yul\":1983:1990   */\n      dup6\n        /* \"#utility.yul\":1979:2002   */\n      sub\n        /* \"#utility.yul\":1975:2007   */\n      slt\n        /* \"#utility.yul\":1972:2024   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":2020:2021   */\n      0x00\n        /* \"#utility.yul\":2017:2018   */\n      dup1\n        /* \"#utility.yul\":2010:2022   */\n      revert\n        /* \"#utility.yul\":1972:2024   */\n    tag_227:\n        /* \"#utility.yul\":2060:2069   */\n      dup3\n        /* \"#utility.yul\":2047:2070   */\n      calldataload\n        /* \"#utility.yul\":2093:2111   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2085:2091   */\n      dup2\n        /* \"#utility.yul\":2082:2112   */\n      gt\n        /* \"#utility.yul\":2079:2129   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2125:2126   */\n      0x00\n        /* \"#utility.yul\":2122:2123   */\n      dup1\n        /* \"#utility.yul\":2115:2127   */\n      revert\n        /* \"#utility.yul\":2079:2129   */\n    tag_228:\n        /* \"#utility.yul\":2148:2198   */\n      tag_229\n        /* \"#utility.yul\":2190:2197   */\n      dup6\n        /* \"#utility.yul\":2181:2187   */\n      dup3\n        /* \"#utility.yul\":2170:2179   */\n      dup7\n        /* \"#utility.yul\":2166:2188   */\n      add\n        /* \"#utility.yul\":2148:2198   */\n      tag_202\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2138:2198   */\n      swap6\n        /* \"#utility.yul\":2245:2247   */\n      0x20\n        /* \"#utility.yul\":2230:2248   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2217:2249   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1865:2255   */\n      jump\t// out\n        /* \"#utility.yul\":2260:2871   */\n    tag_30:\n        /* \"#utility.yul\":2357:2363   */\n      0x00\n        /* \"#utility.yul\":2365:2371   */\n      dup1\n        /* \"#utility.yul\":2373:2379   */\n      0x00\n        /* \"#utility.yul\":2426:2428   */\n      0x60\n        /* \"#utility.yul\":2414:2423   */\n      dup5\n        /* \"#utility.yul\":2405:2412   */\n      dup7\n        /* \"#utility.yul\":2401:2424   */\n      sub\n        /* \"#utility.yul\":2397:2429   */\n      slt\n        /* \"#utility.yul\":2394:2446   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2439:2440   */\n      dup1\n        /* \"#utility.yul\":2432:2444   */\n      revert\n        /* \"#utility.yul\":2394:2446   */\n    tag_231:\n        /* \"#utility.yul\":2482:2491   */\n      dup4\n        /* \"#utility.yul\":2469:2492   */\n      calldataload\n        /* \"#utility.yul\":2511:2529   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2552:2554   */\n      dup1\n        /* \"#utility.yul\":2544:2550   */\n      dup3\n        /* \"#utility.yul\":2541:2555   */\n      gt\n        /* \"#utility.yul\":2538:2572   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2565:2566   */\n      dup1\n        /* \"#utility.yul\":2558:2570   */\n      revert\n        /* \"#utility.yul\":2538:2572   */\n    tag_232:\n        /* \"#utility.yul\":2591:2641   */\n      tag_233\n        /* \"#utility.yul\":2633:2640   */\n      dup8\n        /* \"#utility.yul\":2624:2630   */\n      dup4\n        /* \"#utility.yul\":2613:2622   */\n      dup9\n        /* \"#utility.yul\":2609:2631   */\n      add\n        /* \"#utility.yul\":2591:2641   */\n      tag_202\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2581:2641   */\n      swap5\n      pop\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup7\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2666:2698   */\n      calldataload\n        /* \"#utility.yul\":2650:2698   */\n      swap2\n      pop\n        /* \"#utility.yul\":2723:2725   */\n      dup1\n        /* \"#utility.yul\":2713:2721   */\n      dup3\n        /* \"#utility.yul\":2710:2726   */\n      gt\n        /* \"#utility.yul\":2707:2743   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2739:2740   */\n      0x00\n        /* \"#utility.yul\":2736:2737   */\n      dup1\n        /* \"#utility.yul\":2729:2741   */\n      revert\n        /* \"#utility.yul\":2707:2743   */\n    tag_234:\n      pop\n        /* \"#utility.yul\":2762:2814   */\n      tag_235\n        /* \"#utility.yul\":2806:2813   */\n      dup7\n        /* \"#utility.yul\":2795:2803   */\n      dup3\n        /* \"#utility.yul\":2784:2793   */\n      dup8\n        /* \"#utility.yul\":2780:2804   */\n      add\n        /* \"#utility.yul\":2762:2814   */\n      tag_202\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2752:2814   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2861:2863   */\n      0x40\n        /* \"#utility.yul\":2850:2859   */\n      dup5\n        /* \"#utility.yul\":2846:2864   */\n      add\n        /* \"#utility.yul\":2833:2865   */\n      calldataload\n        /* \"#utility.yul\":2823:2865   */\n      swap1\n      pop\n        /* \"#utility.yul\":2260:2871   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3107:3429   */\n    tag_39:\n        /* \"#utility.yul\":3176:3182   */\n      0x00\n        /* \"#utility.yul\":3229:3231   */\n      0x20\n        /* \"#utility.yul\":3217:3226   */\n      dup3\n        /* \"#utility.yul\":3208:3215   */\n      dup5\n        /* \"#utility.yul\":3204:3227   */\n      sub\n        /* \"#utility.yul\":3200:3232   */\n      slt\n        /* \"#utility.yul\":3197:3249   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":3245:3246   */\n      0x00\n        /* \"#utility.yul\":3242:3243   */\n      dup1\n        /* \"#utility.yul\":3235:3247   */\n      revert\n        /* \"#utility.yul\":3197:3249   */\n    tag_238:\n        /* \"#utility.yul\":3285:3294   */\n      dup2\n        /* \"#utility.yul\":3272:3295   */\n      calldataload\n        /* \"#utility.yul\":3318:3336   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3310:3316   */\n      dup2\n        /* \"#utility.yul\":3307:3337   */\n      gt\n        /* \"#utility.yul\":3304:3354   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3347:3348   */\n      dup1\n        /* \"#utility.yul\":3340:3352   */\n      revert\n        /* \"#utility.yul\":3304:3354   */\n    tag_239:\n        /* \"#utility.yul\":3373:3423   */\n      tag_240\n        /* \"#utility.yul\":3415:3422   */\n      dup5\n        /* \"#utility.yul\":3406:3412   */\n      dup3\n        /* \"#utility.yul\":3395:3404   */\n      dup6\n        /* \"#utility.yul\":3391:3413   */\n      add\n        /* \"#utility.yul\":3373:3423   */\n      tag_202\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3363:3423   */\n      swap5\n        /* \"#utility.yul\":3107:3429   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3434:3617   */\n    tag_203:\n        /* \"#utility.yul\":3494:3498   */\n      0x00\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3519:3525   */\n      dup3\n        /* \"#utility.yul\":3516:3546   */\n      gt\n        /* \"#utility.yul\":3513:3569   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_243\n      tag_200\n      jump\t// in\n    tag_243:\n      pop\n        /* \"#utility.yul\":3594:3595   */\n      0x05\n        /* \"#utility.yul\":3590:3604   */\n      shl\n        /* \"#utility.yul\":3606:3610   */\n      0x20\n        /* \"#utility.yul\":3586:3611   */\n      add\n      swap1\n        /* \"#utility.yul\":3434:3617   */\n      jump\t// out\n        /* \"#utility.yul\":3622:3818   */\n    tag_204:\n        /* \"#utility.yul\":3690:3710   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3750:3792   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3739:3793   */\n      dup2\n      and\n        /* \"#utility.yul\":3729:3794   */\n      dup2\n      eq\n        /* \"#utility.yul\":3719:3812   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":3808:3809   */\n      0x00\n        /* \"#utility.yul\":3805:3806   */\n      dup1\n        /* \"#utility.yul\":3798:3810   */\n      revert\n        /* \"#utility.yul\":3719:3812   */\n    tag_245:\n        /* \"#utility.yul\":3622:3818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:4711   */\n    tag_205:\n        /* \"#utility.yul\":3876:3881   */\n      0x00\n        /* \"#utility.yul\":3929:3932   */\n      dup3\n        /* \"#utility.yul\":3922:3926   */\n      0x1f\n        /* \"#utility.yul\":3914:3920   */\n      dup4\n        /* \"#utility.yul\":3910:3927   */\n      add\n        /* \"#utility.yul\":3906:3933   */\n      slt\n        /* \"#utility.yul\":3896:3951   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":3947:3948   */\n      0x00\n        /* \"#utility.yul\":3944:3945   */\n      dup1\n        /* \"#utility.yul\":3937:3949   */\n      revert\n        /* \"#utility.yul\":3896:3951   */\n    tag_247:\n        /* \"#utility.yul\":3983:3989   */\n      dup2\n        /* \"#utility.yul\":3970:3990   */\n      calldataload\n        /* \"#utility.yul\":4009:4013   */\n      0x20\n        /* \"#utility.yul\":4033:4093   */\n      tag_248\n        /* \"#utility.yul\":4049:4092   */\n      tag_249\n        /* \"#utility.yul\":4089:4091   */\n      dup4\n        /* \"#utility.yul\":4049:4092   */\n      tag_203\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4033:4093   */\n      tag_201\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4127:4142   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4213:4214   */\n      0x05\n        /* \"#utility.yul\":4209:4219   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":4197:4220   */\n      dup5\n      add\n        /* \"#utility.yul\":4193:4225   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":4158:4170   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4237:4252   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":4234:4269   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":4265:4266   */\n      0x00\n        /* \"#utility.yul\":4262:4263   */\n      dup1\n        /* \"#utility.yul\":4255:4267   */\n      revert\n        /* \"#utility.yul\":4234:4269   */\n    tag_250:\n        /* \"#utility.yul\":4301:4303   */\n      dup3\n        /* \"#utility.yul\":4293:4299   */\n      dup7\n        /* \"#utility.yul\":4289:4304   */\n      add\n        /* \"#utility.yul\":4313:4682   */\n    tag_251:\n        /* \"#utility.yul\":4329:4335   */\n      dup5\n        /* \"#utility.yul\":4324:4327   */\n      dup2\n        /* \"#utility.yul\":4321:4336   */\n      lt\n        /* \"#utility.yul\":4313:4682   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":4415:4418   */\n      dup1\n        /* \"#utility.yul\":4402:4419   */\n      calldataload\n        /* \"#utility.yul\":4451:4469   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4438:4449   */\n      dup2\n        /* \"#utility.yul\":4435:4470   */\n      gt\n        /* \"#utility.yul\":4432:4557   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":4511:4512   */\n      0x00\n        /* \"#utility.yul\":4540:4542   */\n      dup1\n        /* \"#utility.yul\":4536:4538   */\n      dup2\n        /* \"#utility.yul\":4529:4543   */\n      revert\n        /* \"#utility.yul\":4432:4557   */\n    tag_254:\n        /* \"#utility.yul\":4582:4639   */\n      tag_255\n        /* \"#utility.yul\":4635:4638   */\n      dup10\n        /* \"#utility.yul\":4630:4632   */\n      dup7\n        /* \"#utility.yul\":4616:4627   */\n      dup4\n        /* \"#utility.yul\":4608:4614   */\n      dup12\n        /* \"#utility.yul\":4604:4628   */\n      add\n        /* \"#utility.yul\":4600:4633   */\n      add\n        /* \"#utility.yul\":4582:4639   */\n      tag_202\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":4570:4640   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":4660:4672   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4346:4358   */\n      dup4\n      add\n        /* \"#utility.yul\":4313:4682   */\n      jump(tag_251)\n    tag_253:\n      pop\n        /* \"#utility.yul\":4700:4705   */\n      swap7\n        /* \"#utility.yul\":3823:4711   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4716:5871   */\n    tag_47:\n        /* \"#utility.yul\":4844:4850   */\n      0x00\n        /* \"#utility.yul\":4852:4858   */\n      dup1\n        /* \"#utility.yul\":4905:4907   */\n      0x40\n        /* \"#utility.yul\":4893:4902   */\n      dup4\n        /* \"#utility.yul\":4884:4891   */\n      dup6\n        /* \"#utility.yul\":4880:4903   */\n      sub\n        /* \"#utility.yul\":4876:4908   */\n      slt\n        /* \"#utility.yul\":4873:4925   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":4921:4922   */\n      0x00\n        /* \"#utility.yul\":4918:4919   */\n      dup1\n        /* \"#utility.yul\":4911:4923   */\n      revert\n        /* \"#utility.yul\":4873:4925   */\n    tag_257:\n        /* \"#utility.yul\":4961:4970   */\n      dup3\n        /* \"#utility.yul\":4948:4971   */\n      calldataload\n        /* \"#utility.yul\":4990:5008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5031:5033   */\n      dup1\n        /* \"#utility.yul\":5023:5029   */\n      dup3\n        /* \"#utility.yul\":5020:5034   */\n      gt\n        /* \"#utility.yul\":5017:5051   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":5047:5048   */\n      0x00\n        /* \"#utility.yul\":5044:5045   */\n      dup1\n        /* \"#utility.yul\":5037:5049   */\n      revert\n        /* \"#utility.yul\":5017:5051   */\n    tag_258:\n        /* \"#utility.yul\":5085:5091   */\n      dup2\n        /* \"#utility.yul\":5074:5083   */\n      dup6\n        /* \"#utility.yul\":5070:5092   */\n      add\n        /* \"#utility.yul\":5060:5092   */\n      swap2\n      pop\n        /* \"#utility.yul\":5130:5137   */\n      dup6\n        /* \"#utility.yul\":5123:5127   */\n      0x1f\n        /* \"#utility.yul\":5119:5121   */\n      dup4\n        /* \"#utility.yul\":5115:5128   */\n      add\n        /* \"#utility.yul\":5111:5138   */\n      slt\n        /* \"#utility.yul\":5101:5156   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5149:5150   */\n      dup1\n        /* \"#utility.yul\":5142:5154   */\n      revert\n        /* \"#utility.yul\":5101:5156   */\n    tag_259:\n        /* \"#utility.yul\":5188:5190   */\n      dup2\n        /* \"#utility.yul\":5175:5191   */\n      calldataload\n        /* \"#utility.yul\":5210:5214   */\n      0x20\n        /* \"#utility.yul\":5234:5294   */\n      tag_260\n        /* \"#utility.yul\":5250:5293   */\n      tag_249\n        /* \"#utility.yul\":5290:5292   */\n      dup4\n        /* \"#utility.yul\":5250:5293   */\n      tag_203\n      jump\t// in\n        /* \"#utility.yul\":5234:5294   */\n    tag_260:\n        /* \"#utility.yul\":5328:5343   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5410:5411   */\n      0x05\n        /* \"#utility.yul\":5406:5416   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":5398:5417   */\n      dup5\n      add\n        /* \"#utility.yul\":5394:5422   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":5359:5371   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5434:5453   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5431:5470   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":5466:5467   */\n      0x00\n        /* \"#utility.yul\":5463:5464   */\n      dup1\n        /* \"#utility.yul\":5456:5468   */\n      revert\n        /* \"#utility.yul\":5431:5470   */\n    tag_262:\n        /* \"#utility.yul\":5490:5501   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5510:5658   */\n    tag_263:\n        /* \"#utility.yul\":5526:5532   */\n      dup4\n        /* \"#utility.yul\":5521:5524   */\n      dup7\n        /* \"#utility.yul\":5518:5533   */\n      lt\n        /* \"#utility.yul\":5510:5658   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":5592:5615   */\n      tag_266\n        /* \"#utility.yul\":5611:5614   */\n      dup7\n        /* \"#utility.yul\":5592:5615   */\n      tag_204\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5580:5616   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5543:5555   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5636:5648   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5510:5658   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":5677:5682   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5720:5738   */\n      dup7\n      add\n        /* \"#utility.yul\":5707:5739   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5751:5767   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5748:5784   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5780:5781   */\n      0x00\n        /* \"#utility.yul\":5777:5778   */\n      dup1\n        /* \"#utility.yul\":5770:5782   */\n      revert\n        /* \"#utility.yul\":5748:5784   */\n    tag_267:\n      pop\n        /* \"#utility.yul\":5803:5865   */\n      tag_224\n        /* \"#utility.yul\":5857:5864   */\n      dup6\n        /* \"#utility.yul\":5846:5854   */\n      dup3\n        /* \"#utility.yul\":5835:5844   */\n      dup7\n        /* \"#utility.yul\":5831:5855   */\n      add\n        /* \"#utility.yul\":5803:5865   */\n      tag_205\n      jump\t// in\n        /* \"#utility.yul\":5876:6272   */\n    tag_51:\n        /* \"#utility.yul\":5954:5960   */\n      0x00\n        /* \"#utility.yul\":5962:5968   */\n      dup1\n        /* \"#utility.yul\":6015:6017   */\n      0x40\n        /* \"#utility.yul\":6003:6012   */\n      dup4\n        /* \"#utility.yul\":5994:6001   */\n      dup6\n        /* \"#utility.yul\":5990:6013   */\n      sub\n        /* \"#utility.yul\":5986:6018   */\n      slt\n        /* \"#utility.yul\":5983:6035   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":6031:6032   */\n      0x00\n        /* \"#utility.yul\":6028:6029   */\n      dup1\n        /* \"#utility.yul\":6021:6033   */\n      revert\n        /* \"#utility.yul\":5983:6035   */\n    tag_270:\n        /* \"#utility.yul\":6054:6083   */\n      tag_271\n        /* \"#utility.yul\":6073:6082   */\n      dup4\n        /* \"#utility.yul\":6054:6083   */\n      tag_204\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6044:6083   */\n      swap2\n      pop\n        /* \"#utility.yul\":6134:6136   */\n      0x20\n        /* \"#utility.yul\":6123:6132   */\n      dup4\n        /* \"#utility.yul\":6119:6137   */\n      add\n        /* \"#utility.yul\":6106:6138   */\n      calldataload\n        /* \"#utility.yul\":6161:6179   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6153:6159   */\n      dup2\n        /* \"#utility.yul\":6150:6180   */\n      gt\n        /* \"#utility.yul\":6147:6197   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":6193:6194   */\n      0x00\n        /* \"#utility.yul\":6190:6191   */\n      dup1\n        /* \"#utility.yul\":6183:6195   */\n      revert\n        /* \"#utility.yul\":6147:6197   */\n    tag_272:\n        /* \"#utility.yul\":6216:6266   */\n      tag_224\n        /* \"#utility.yul\":6258:6265   */\n      dup6\n        /* \"#utility.yul\":6249:6255   */\n      dup3\n        /* \"#utility.yul\":6238:6247   */\n      dup7\n        /* \"#utility.yul\":6234:6256   */\n      add\n        /* \"#utility.yul\":6216:6266   */\n      tag_202\n      jump\t// in\n        /* \"#utility.yul\":6277:6463   */\n    tag_55:\n        /* \"#utility.yul\":6336:6342   */\n      0x00\n        /* \"#utility.yul\":6389:6391   */\n      0x20\n        /* \"#utility.yul\":6377:6386   */\n      dup3\n        /* \"#utility.yul\":6368:6375   */\n      dup5\n        /* \"#utility.yul\":6364:6387   */\n      sub\n        /* \"#utility.yul\":6360:6392   */\n      slt\n        /* \"#utility.yul\":6357:6409   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":6405:6406   */\n      0x00\n        /* \"#utility.yul\":6402:6403   */\n      dup1\n        /* \"#utility.yul\":6395:6407   */\n      revert\n        /* \"#utility.yul\":6357:6409   */\n    tag_275:\n        /* \"#utility.yul\":6428:6457   */\n      tag_81\n        /* \"#utility.yul\":6447:6456   */\n      dup3\n        /* \"#utility.yul\":6428:6457   */\n      tag_204\n      jump\t// in\n        /* \"#utility.yul\":6468:6718   */\n    tag_206:\n        /* \"#utility.yul\":6553:6554   */\n      0x00\n        /* \"#utility.yul\":6563:6676   */\n    tag_278:\n        /* \"#utility.yul\":6577:6583   */\n      dup4\n        /* \"#utility.yul\":6574:6575   */\n      dup2\n        /* \"#utility.yul\":6571:6584   */\n      lt\n        /* \"#utility.yul\":6563:6676   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6653:6664   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6647:6665   */\n      mload\n        /* \"#utility.yul\":6634:6645   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":6627:6666   */\n      mstore\n        /* \"#utility.yul\":6599:6601   */\n      0x20\n        /* \"#utility.yul\":6592:6602   */\n      add\n        /* \"#utility.yul\":6563:6676   */\n      jump(tag_278)\n    tag_280:\n      pop\n      pop\n        /* \"#utility.yul\":6710:6711   */\n      0x00\n        /* \"#utility.yul\":6692:6708   */\n      swap2\n      add\n        /* \"#utility.yul\":6685:6712   */\n      mstore\n        /* \"#utility.yul\":6468:6718   */\n      jump\t// out\n        /* \"#utility.yul\":6723:7352   */\n    tag_59:\n        /* \"#utility.yul\":6992:6995   */\n      0x00\n        /* \"#utility.yul\":7030:7036   */\n      dup4\n        /* \"#utility.yul\":7024:7037   */\n      mload\n        /* \"#utility.yul\":7046:7112   */\n      tag_282\n        /* \"#utility.yul\":7105:7111   */\n      dup2\n        /* \"#utility.yul\":7100:7103   */\n      dup5\n        /* \"#utility.yul\":7093:7097   */\n      0x20\n        /* \"#utility.yul\":7085:7091   */\n      dup9\n        /* \"#utility.yul\":7081:7098   */\n      add\n        /* \"#utility.yul\":7046:7112   */\n      tag_206\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7173:7176   */\n      0x5f00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7134:7150   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":7159:7177   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7202:7215   */\n      dup4\n      mload\n        /* \"#utility.yul\":7224:7302   */\n      tag_283\n        /* \"#utility.yul\":7202:7215   */\n      dup2\n        /* \"#utility.yul\":7289:7290   */\n      0x01\n        /* \"#utility.yul\":7278:7291   */\n      dup5\n      add\n        /* \"#utility.yul\":7271:7275   */\n      0x20\n        /* \"#utility.yul\":7259:7276   */\n      dup9\n      add\n        /* \"#utility.yul\":7224:7302   */\n      tag_206\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7322:7342   */\n      add\n        /* \"#utility.yul\":7344:7345   */\n      0x01\n        /* \"#utility.yul\":7318:7346   */\n      add\n      swap5\n        /* \"#utility.yul\":6723:7352   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7357:7812   */\n    tag_61:\n        /* \"#utility.yul\":7506:7508   */\n      0x20\n        /* \"#utility.yul\":7495:7504   */\n      dup2\n        /* \"#utility.yul\":7488:7509   */\n      mstore\n        /* \"#utility.yul\":7469:7473   */\n      0x00\n        /* \"#utility.yul\":7538:7544   */\n      dup3\n        /* \"#utility.yul\":7532:7545   */\n      mload\n        /* \"#utility.yul\":7581:7587   */\n      dup1\n        /* \"#utility.yul\":7576:7578   */\n      0x20\n        /* \"#utility.yul\":7565:7574   */\n      dup5\n        /* \"#utility.yul\":7561:7579   */\n      add\n        /* \"#utility.yul\":7554:7588   */\n      mstore\n        /* \"#utility.yul\":7597:7676   */\n      tag_285\n        /* \"#utility.yul\":7669:7675   */\n      dup2\n        /* \"#utility.yul\":7664:7666   */\n      0x40\n        /* \"#utility.yul\":7653:7662   */\n      dup6\n        /* \"#utility.yul\":7649:7667   */\n      add\n        /* \"#utility.yul\":7644:7646   */\n      0x20\n        /* \"#utility.yul\":7636:7642   */\n      dup8\n        /* \"#utility.yul\":7632:7647   */\n      add\n        /* \"#utility.yul\":7597:7676   */\n      tag_206\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7728:7730   */\n      0x1f\n        /* \"#utility.yul\":7716:7731   */\n      add\n        /* \"#utility.yul\":7733:7799   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":7712:7800   */\n      and\n        /* \"#utility.yul\":7697:7801   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7803:7805   */\n      0x40\n        /* \"#utility.yul\":7693:7806   */\n      add\n      swap3\n        /* \"#utility.yul\":7357:7812   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7817:8061   */\n    tag_65:\n        /* \"#utility.yul\":7895:7901   */\n      0x00\n        /* \"#utility.yul\":7903:7909   */\n      dup1\n        /* \"#utility.yul\":7956:7958   */\n      0x40\n        /* \"#utility.yul\":7944:7953   */\n      dup4\n        /* \"#utility.yul\":7935:7942   */\n      dup6\n        /* \"#utility.yul\":7931:7954   */\n      sub\n        /* \"#utility.yul\":7927:7959   */\n      slt\n        /* \"#utility.yul\":7924:7976   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7972:7973   */\n      0x00\n        /* \"#utility.yul\":7969:7970   */\n      dup1\n        /* \"#utility.yul\":7962:7974   */\n      revert\n        /* \"#utility.yul\":7924:7976   */\n    tag_287:\n      pop\n      pop\n        /* \"#utility.yul\":7995:8011   */\n      dup1\n      mload\n        /* \"#utility.yul\":8051:8053   */\n      0x20\n        /* \"#utility.yul\":8036:8054   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8030:8055   */\n      mload\n        /* \"#utility.yul\":7995:8011   */\n      swap1\n      swap3\n        /* \"#utility.yul\":8030:8055   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":7817:8061   */\n      jump\t// out\n        /* \"#utility.yul\":8066:8355   */\n    tag_68:\n        /* \"#utility.yul\":8197:8200   */\n      0x00\n        /* \"#utility.yul\":8235:8241   */\n      dup3\n        /* \"#utility.yul\":8229:8242   */\n      mload\n        /* \"#utility.yul\":8251:8317   */\n      tag_289\n        /* \"#utility.yul\":8310:8316   */\n      dup2\n        /* \"#utility.yul\":8305:8308   */\n      dup5\n        /* \"#utility.yul\":8298:8302   */\n      0x20\n        /* \"#utility.yul\":8290:8296   */\n      dup8\n        /* \"#utility.yul\":8286:8303   */\n      add\n        /* \"#utility.yul\":8251:8317   */\n      tag_206\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8333:8349   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8066:8355   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8977:9161   */\n    tag_207:\n        /* \"#utility.yul\":9029:9106   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9026:9027   */\n      0x00\n        /* \"#utility.yul\":9019:9107   */\n      mstore\n        /* \"#utility.yul\":9126:9130   */\n      0x11\n        /* \"#utility.yul\":9123:9124   */\n      0x04\n        /* \"#utility.yul\":9116:9131   */\n      mstore\n        /* \"#utility.yul\":9150:9154   */\n      0x24\n        /* \"#utility.yul\":9147:9148   */\n      0x00\n        /* \"#utility.yul\":9140:9155   */\n      revert\n        /* \"#utility.yul\":9166:9628   */\n    tag_88:\n        /* \"#utility.yul\":9205:9206   */\n      0x00\n        /* \"#utility.yul\":9231:9232   */\n      dup3\n        /* \"#utility.yul\":9221:9410   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":9266:9343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9263:9264   */\n      0x00\n        /* \"#utility.yul\":9256:9344   */\n      mstore\n        /* \"#utility.yul\":9367:9371   */\n      0x12\n        /* \"#utility.yul\":9364:9365   */\n      0x04\n        /* \"#utility.yul\":9357:9372   */\n      mstore\n        /* \"#utility.yul\":9395:9399   */\n      0x24\n        /* \"#utility.yul\":9392:9393   */\n      0x00\n        /* \"#utility.yul\":9385:9400   */\n      revert\n        /* \"#utility.yul\":9221:9410   */\n    tag_294:\n        /* \"#utility.yul\":9507:9573   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9504:9505   */\n      dup4\n        /* \"#utility.yul\":9501:9574   */\n      eq\n        /* \"#utility.yul\":9432:9498   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9429:9430   */\n      dup4\n        /* \"#utility.yul\":9426:9499   */\n      eq\n        /* \"#utility.yul\":9422:9575   */\n      and\n        /* \"#utility.yul\":9419:9598   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":9578:9596   */\n      tag_296\n      tag_207\n      jump\t// in\n    tag_296:\n      pop\n        /* \"#utility.yul\":9612:9622   */\n      sdiv\n      swap1\n        /* \"#utility.yul\":9166:9628   */\n      jump\t// out\n        /* \"#utility.yul\":9633:9925   */\n    tag_90:\n        /* \"#utility.yul\":9705:9714   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9672:9679   */\n      0x00\n        /* \"#utility.yul\":9730:9739   */\n      dup3\n      slt\n        /* \"#utility.yul\":9747:9813   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9741:9814   */\n      dup5\n      eq\n        /* \"#utility.yul\":9726:9815   */\n      and\n        /* \"#utility.yul\":9723:9838   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":9818:9836   */\n      tag_299\n      tag_207\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9891:9892   */\n      dup2\n        /* \"#utility.yul\":9882:9889   */\n      dup2\n        /* \"#utility.yul\":9877:9893   */\n      sdiv\n        /* \"#utility.yul\":9874:9875   */\n      dup4\n        /* \"#utility.yul\":9871:9894   */\n      eq\n        /* \"#utility.yul\":9867:9868   */\n      dup3\n        /* \"#utility.yul\":9860:9869   */\n      iszero\n        /* \"#utility.yul\":9857:9895   */\n      or\n        /* \"#utility.yul\":9847:9919   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":9899:9917   */\n      tag_57\n      tag_207\n      jump\t// in\n        /* \"#utility.yul\":10977:11161   */\n    tag_137:\n        /* \"#utility.yul\":11029:11106   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11026:11027   */\n      0x00\n        /* \"#utility.yul\":11019:11107   */\n      mstore\n        /* \"#utility.yul\":11126:11130   */\n      0x32\n        /* \"#utility.yul\":11123:11124   */\n      0x04\n        /* \"#utility.yul\":11116:11131   */\n      mstore\n        /* \"#utility.yul\":11150:11154   */\n      0x24\n        /* \"#utility.yul\":11147:11148   */\n      0x00\n        /* \"#utility.yul\":11140:11155   */\n      revert\n        /* \"#utility.yul\":11166:11361   */\n    tag_142:\n        /* \"#utility.yul\":11205:11208   */\n      0x00\n        /* \"#utility.yul\":11236:11302   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11229:11234   */\n      dup3\n        /* \"#utility.yul\":11226:11303   */\n      sub\n        /* \"#utility.yul\":11223:11326   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":11306:11324   */\n      tag_308\n      tag_207\n      jump\t// in\n    tag_308:\n      pop\n        /* \"#utility.yul\":11353:11354   */\n      0x01\n        /* \"#utility.yul\":11342:11355   */\n      add\n      swap1\n        /* \"#utility.yul\":11166:11361   */\n      jump\t// out\n        /* \"#utility.yul\":12134:12318   */\n    tag_171:\n        /* \"#utility.yul\":12204:12210   */\n      0x00\n        /* \"#utility.yul\":12257:12259   */\n      0x20\n        /* \"#utility.yul\":12245:12254   */\n      dup3\n        /* \"#utility.yul\":12236:12243   */\n      dup5\n        /* \"#utility.yul\":12232:12255   */\n      sub\n        /* \"#utility.yul\":12228:12260   */\n      slt\n        /* \"#utility.yul\":12225:12277   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":12273:12274   */\n      0x00\n        /* \"#utility.yul\":12270:12271   */\n      dup1\n        /* \"#utility.yul\":12263:12275   */\n      revert\n        /* \"#utility.yul\":12225:12277   */\n    tag_312:\n      pop\n        /* \"#utility.yul\":12296:12312   */\n      mload\n      swap2\n        /* \"#utility.yul\":12134:12318   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13681:13958   */\n    tag_196:\n        /* \"#utility.yul\":13748:13754   */\n      0x00\n        /* \"#utility.yul\":13801:13803   */\n      0x20\n        /* \"#utility.yul\":13789:13798   */\n      dup3\n        /* \"#utility.yul\":13780:13787   */\n      dup5\n        /* \"#utility.yul\":13776:13799   */\n      sub\n        /* \"#utility.yul\":13772:13804   */\n      slt\n        /* \"#utility.yul\":13769:13821   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":13817:13818   */\n      0x00\n        /* \"#utility.yul\":13814:13815   */\n      dup1\n        /* \"#utility.yul\":13807:13819   */\n      revert\n        /* \"#utility.yul\":13769:13821   */\n    tag_319:\n        /* \"#utility.yul\":13849:13858   */\n      dup2\n        /* \"#utility.yul\":13843:13859   */\n      mload\n        /* \"#utility.yul\":13902:13907   */\n      dup1\n        /* \"#utility.yul\":13895:13908   */\n      iszero\n        /* \"#utility.yul\":13888:13909   */\n      iszero\n        /* \"#utility.yul\":13881:13886   */\n      dup2\n        /* \"#utility.yul\":13878:13910   */\n      eq\n        /* \"#utility.yul\":13868:13928   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":13924:13925   */\n      0x00\n        /* \"#utility.yul\":13921:13922   */\n      dup1\n        /* \"#utility.yul\":13914:13926   */\n      revert\n\n    auxdata: 0xa26469706673582212205048726c77d152c3d08237dd78796a78f131ea407b7d6a8f500c4d6850918c0064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_590": {
									"entryPoint": null,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_460": {
									"entryPoint": null,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_678": {
									"entryPoint": 93,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:7"
															},
															"nodeType": "YulIf",
															"src": "105:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:7"
															},
															"nodeType": "YulIf",
															"src": "204:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:7",
														"type": ""
													}
												],
												"src": "14:290:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516117af3803806117af83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6116c3806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063935b13f611610076578063d7eb64f71161005b578063d7eb64f7146101ac578063e07a8665146101bf578063f2fde38b146101d257600080fd5b8063935b13f614610158578063a451f6021461019957600080fd5b8063715018a6116100a7578063715018a6146100fe57806380770b05146101065780638da5cb5b1461011957600080fd5b80633161a93a146100c3578063433ff288146100e9575b600080fd5b6100d66100d136600461108f565b6101e5565b6040519081526020015b60405180910390f35b6100fc6100f73660046110f3565b6102cf565b005b6100fc6103ce565b6100d6610114366004611138565b6103e2565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6101336101663660046111a5565b805160208183018101805160028252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b6100fc6101a7366004611138565b61061a565b6100fc6101ba3660046112bf565b61089a565b6100fc6101cd366004611375565b6109c7565b6100fc6101e03660046113b9565b610a38565b60008083836040516020016101fb9291906113f8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526001547fabc4544e00000000000000000000000000000000000000000000000000000000835290925060009173ffffffffffffffffffffffffffffffffffffffff9091169063abc4544e90610283908590600401611450565b6040805180830381865afa15801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c391906114a1565b50925050505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff166002836040516102f791906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f546f6b656e73206e6f7420617661696c61626c6520666f72207377617000000060448201526064015b60405180910390fd5b6103ca60028360405161039c91906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16333084610aef565b5050565b6103d6610b11565b6103e06000610b92565b565b6040517f75736474000000000000000000000000000000000000000000000000000000006020820152600090602401604051602081830303815290604052805190602001208460405160200161043891906114c5565b60405160208183030381529060405280519060200120036104ab57600061045f84866101e5565b9050600061047582670de0b6b3a7640000611510565b61047f908561159f565b9050670de0b6b3a7640000610498826305f5e10061159f565b6104a29190611510565b92505050610613565b826040516020016104bc91906114c5565b60405160208183030381529060405280519060200120604051602001610505907f7573647400000000000000000000000000000000000000000000000000000000815260040190565b604051602081830303815290604052805190602001200361054a57600061052c85856101e5565b9050600061053a828561159f565b90506104a26305f5e10082611510565b600061058b856040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506101e5565b905060006105ce856040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506101e5565b90506000816105e584670de0b6b3a764000061159f565b6105ef9190611510565b6105f9908661159f565b905061060d670de0b6b3a764000082611510565b93505050505b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff1660028460405161064291906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16148015906106c25750600073ffffffffffffffffffffffffffffffffffffffff1660028360405161069991906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1614155b610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f546f6b656e73206e6f7420617661696c61626c6520666f7220737761700000006044820152606401610380565b60006107358484846103e2565b9050600081116107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e76616c6964207072696365206665656400000000000000000000000000006044820152606401610380565b6107aa83610c07565b811115610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152606401610380565b61085460028560405161082691906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16333085610aef565b61089460028460405161086791906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff163383610cb3565b50505050565b6108a2610b11565b805182511461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964204e616d65732f546f6b656e730000000000000000000000006044820152606401610380565b60005b82518110156109c25782818151811061092b5761092b6115eb565b60200260200101516002838381518110610947576109476115eb565b602002602001015160405161095c91906114c5565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055806109ba8161161a565b915050610910565b505050565b6109cf610b11565b816002826040516109e091906114c5565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555050565b610a40610b11565b73ffffffffffffffffffffffffffffffffffffffff8116610ae3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610380565b610aec81610b92565b50565b61089473ffffffffffffffffffffffffffffffffffffffff8516848484610cd4565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610380565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600282604051610c1991906114c5565b908152604051908190036020018120547f70a0823100000000000000000000000000000000000000000000000000000000825230600483015273ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610c8f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c99190611652565b6109c273ffffffffffffffffffffffffffffffffffffffff84168383610db0565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108949085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e06565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109c29084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610d2e565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610e2e91906114c5565b6000604051808303816000865af19150503d8060008114610e6b576040519150601f19603f3d011682016040523d82523d6000602084013e610e70565b606091505b509150915081610edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646044820152606401610380565b8051156108945780806020019051810190610ef7919061166b565b610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610380565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ff957610ff9610f83565b604052919050565b600082601f83011261101257600080fd5b813567ffffffffffffffff81111561102c5761102c610f83565b61105d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fb2565b81815284602083860101111561107257600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156110a257600080fd5b823567ffffffffffffffff808211156110ba57600080fd5b6110c686838701611001565b935060208501359150808211156110dc57600080fd5b506110e985828601611001565b9150509250929050565b6000806040838503121561110657600080fd5b823567ffffffffffffffff81111561111d57600080fd5b61112985828601611001565b95602094909401359450505050565b60008060006060848603121561114d57600080fd5b833567ffffffffffffffff8082111561116557600080fd5b61117187838801611001565b9450602086013591508082111561118757600080fd5b5061119486828701611001565b925050604084013590509250925092565b6000602082840312156111b757600080fd5b813567ffffffffffffffff8111156111ce57600080fd5b6111da84828501611001565b949350505050565b600067ffffffffffffffff8211156111fc576111fc610f83565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461122a57600080fd5b919050565b600082601f83011261124057600080fd5b81356020611255611250836111e2565b610fb2565b82815260059290921b8401810191818101908684111561127457600080fd5b8286015b848110156112b457803567ffffffffffffffff8111156112985760008081fd5b6112a68986838b0101611001565b845250918301918301611278565b509695505050505050565b600080604083850312156112d257600080fd5b823567ffffffffffffffff808211156112ea57600080fd5b818501915085601f8301126112fe57600080fd5b8135602061130e611250836111e2565b82815260059290921b8401810191818101908984111561132d57600080fd5b948201945b838610156113525761134386611206565b82529482019490820190611332565b9650508601359250508082111561136857600080fd5b506110e98582860161122f565b6000806040838503121561138857600080fd5b61139183611206565b9150602083013567ffffffffffffffff8111156113ad57600080fd5b6110e985828601611001565b6000602082840312156113cb57600080fd5b61061382611206565b60005b838110156113ef5781810151838201526020016113d7565b50506000910152565b6000835161140a8184602088016113d4565b7f5f0000000000000000000000000000000000000000000000000000000000000090830190815283516114448160018401602088016113d4565b01600101949350505050565b602081526000825180602084015261146f8160408501602087016113d4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600080604083850312156114b457600080fd5b505080516020909101519092909150565b600082516114d78184602087016113d4565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611546577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561159a5761159a6114e1565b500590565b808202600082127f8000000000000000000000000000000000000000000000000000000000000000841416156115d7576115d76114e1565b81810583148215176102c9576102c96114e1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361164b5761164b6114e1565b5060010190565b60006020828403121561166457600080fd5b5051919050565b60006020828403121561167d57600080fd5b8151801515811461061357600080fdfea26469706673582212205048726c77d152c3d08237dd78796a78f131ea407b7d6a8f500c4d6850918c0064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x17AF CODESIZE SUB DUP1 PUSH2 0x17AF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xAD JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x5D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16C3 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x935B13F6 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xD7EB64F7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD7EB64F7 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xE07A8665 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x935B13F6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xA451F602 EQ PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x80770B05 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3161A93A EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x433FF288 EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x2 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B9 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FB SWAP3 SWAP2 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH32 0xABC4544E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xABC4544E SWAP1 PUSH2 0x283 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xAEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x3E0 PUSH1 0x0 PUSH2 0xB92 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x4AB JUMPI PUSH1 0x0 PUSH2 0x45F DUP5 DUP7 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x475 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x47F SWAP1 DUP6 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x498 DUP3 PUSH4 0x5F5E100 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x613 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x505 SWAP1 PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x54A JUMPI PUSH1 0x0 PUSH2 0x52C DUP6 DUP6 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53A DUP3 DUP6 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH2 0x4A2 PUSH4 0x5F5E100 DUP3 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5CE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x5E5 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x5F9 SWAP1 DUP7 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH2 0x60D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO SWAP1 PUSH2 0x6C2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP5 DUP5 DUP5 PUSH2 0x3E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420707269636520666565640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0xC07 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0x854 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x894 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0xB11 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204E616D65732F546F6B656E73000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92B PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x9BA DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x910 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9CF PUSH2 0xB11 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA40 PUSH2 0xB11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0xB92 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x894 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x9C2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x894 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x894 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x380 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF9 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x105D PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0xFB2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C6 DUP7 DUP4 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1129 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1171 DUP8 DUP4 DUP9 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1194 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11DA DUP5 DUP3 DUP6 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1255 PUSH2 0x1250 DUP4 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0xFB2 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x12B4 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x12A6 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x1001 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1278 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x130E PUSH2 0x1250 DUP4 PUSH2 0x11E2 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1352 JUMPI PUSH2 0x1343 DUP7 PUSH2 0x1206 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1332 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x613 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x140A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH32 0x5F00000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1444 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13D4 JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x146F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14D7 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1546 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x159A JUMPI PUSH2 0x159A PUSH2 0x14E1 JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ AND ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x14E1 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x164B JUMPI PUSH2 0x164B PUSH2 0x14E1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BASEFEE PUSH19 0x6C77D152C3D08237DD78796A78F131EA407B7D PUSH11 0x8F500C4D6850918C006473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "222:3967:0:-:0;;;377:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;929:32:4;721:10:1;929:18:4;:32::i;:::-;418:9:0;:36;;-1:-1:-1;;;;;;418:36:0;-1:-1:-1;;;;;418:36:0;;;;;;;;;;222:3967;;2426:187:4;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:4;;;-1:-1:-1;;;;;;2534:17:4;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;222:3967:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_820": {
									"entryPoint": 3590,
									"id": 820,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_621": {
									"entryPoint": 2833,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBalance_447": {
									"entryPoint": 3079,
									"id": 447,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_460": {
									"entryPoint": null,
									"id": 460,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferFrom_404": {
									"entryPoint": 2799,
									"id": 404,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_safeTransfer_425": {
									"entryPoint": 3251,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_678": {
									"entryPoint": 2962,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_317": {
									"entryPoint": 719,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addTrustedTokensMulti_377": {
									"entryPoint": 2202,
									"id": 377,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addTrustedTokens_333": {
									"entryPoint": 2503,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_607": {
									"entryPoint": null,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@queryAmountOut_185": {
									"entryPoint": 994,
									"id": 185,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@ratio_60": {
									"entryPoint": 485,
									"id": 60,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_635": {
									"entryPoint": 974,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_733": {
									"entryPoint": 3284,
									"id": 733,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_707": {
									"entryPoint": 3504,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swap_278": {
									"entryPoint": 1562,
									"id": 278,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@tokenAddresses_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_658": {
									"entryPoint": 2616,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_string_dyn": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_uint256_fromMemory": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7_t_string_memory_ptr__to_t_string_memory_ptr_t_bytes1_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2286e863fd3779b7a63f86a5daedb3046d372c0fc20d5d22ebceabb566152232__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 5535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 5658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14371:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "66:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "163:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "153:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "153:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "153:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "184:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "187:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "177:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "248:289:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "258:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "274:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "268:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "258:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "286:117:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "324:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "330:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "320:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "320:13:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "335:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "316:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "316:86:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "304:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:99:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "290:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "433:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "457:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "469:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "454:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "454:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:62:7"
															},
															"nodeType": "YulIf",
															"src": "412:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "516:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "520:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:22:7"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "228:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "237:6:7",
														"type": ""
													}
												],
												"src": "203:334:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:537:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "644:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "653:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "656:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "646:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "646:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "646:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "623:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "631:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "619:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "638:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "615:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "615:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:35:7"
															},
															"nodeType": "YulIf",
															"src": "605:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "669:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "692:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "679:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "673:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "738:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "740:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "740:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "740:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "714:2:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "711:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:26:7"
															},
															"nodeType": "YulIf",
															"src": "708:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "769:129:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "812:2:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "816:4:7",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "808:13:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "823:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "804:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "804:86:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "892:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:97:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "784:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "784:114:7"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "773:7:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "914:7:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "923:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "907:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "907:19:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "974:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "976:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "976:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "976:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "949:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "957:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "945:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "945:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "962:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "941:26:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "969:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "938:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:35:7"
															},
															"nodeType": "YulIf",
															"src": "935:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "1016:7:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1025:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1012:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1036:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1044:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1032:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1032:17:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1051:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "999:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "999:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "999:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1078:7:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1087:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:16:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1092:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1070:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1070:27:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1063:38:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1063:38:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1110:16:7",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1119:7:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "569:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "577:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "585:5:7",
														"type": ""
													}
												],
												"src": "542:590:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:436:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1290:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1299:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1302:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1292:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1292:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1265:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1274:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1261:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1286:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1257:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:32:7"
															},
															"nodeType": "YulIf",
															"src": "1254:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1315:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1329:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1319:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1361:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1371:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1365:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1416:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1428:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1418:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1418:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1418:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1412:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:14:7"
															},
															"nodeType": "YulIf",
															"src": "1398:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1473:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1469:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1469:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1493:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1451:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1510:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1543:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1554:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1526:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1514:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1589:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1589:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1573:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1583:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1570:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:16:7"
															},
															"nodeType": "YulIf",
															"src": "1567:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1612:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1655:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1640:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1666:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1622:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1622:52:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1202:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1225:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1233:6:7",
														"type": ""
													}
												],
												"src": "1137:543:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1836:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1847:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1753:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1764:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1775:4:7",
														"type": ""
													}
												],
												"src": "1685:175:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1962:293:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2008:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2017:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2010:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2010:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2010:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1983:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1992:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1979:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1979:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2004:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1975:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:32:7"
															},
															"nodeType": "YulIf",
															"src": "1972:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2033:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2060:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2047:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2047:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2037:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2113:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2125:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2115:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2115:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2085:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2082:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:30:7"
															},
															"nodeType": "YulIf",
															"src": "2079:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2138:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2190:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2148:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2138:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2245:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2230:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2217:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2207:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1943:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1951:6:7",
														"type": ""
													}
												],
												"src": "1865:390:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:487:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2430:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2439:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2432:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2432:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2432:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2405:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2401:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2426:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:32:7"
															},
															"nodeType": "YulIf",
															"src": "2394:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2455:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2469:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2459:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2511:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2505:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2556:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2565:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2568:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2558:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2558:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2558:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2544:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2552:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2541:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:14:7"
															},
															"nodeType": "YulIf",
															"src": "2538:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2581:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2613:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2609:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2633:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2591:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2581:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2666:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2654:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2727:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2739:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2729:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2729:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2729:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2713:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2723:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2710:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:16:7"
															},
															"nodeType": "YulIf",
															"src": "2707:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2752:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2784:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2795:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2806:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2762:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2762:52:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2823:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2850:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2861:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2846:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2833:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2823:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2334:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2345:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2365:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2373:6:7",
														"type": ""
													}
												],
												"src": "2260:611:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2977:125:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2987:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2999:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2987:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3029:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3044:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3052:42:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:55:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:74:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:74:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2946:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2957:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2968:4:7",
														"type": ""
													}
												],
												"src": "2876:226:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3187:242:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3233:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3242:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3245:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3235:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3235:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3208:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3217:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3229:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:32:7"
															},
															"nodeType": "YulIf",
															"src": "3197:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3258:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3272:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3262:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3338:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3350:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3340:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3340:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3310:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3318:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3307:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:30:7"
															},
															"nodeType": "YulIf",
															"src": "3304:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3363:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3395:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3406:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3391:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3391:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3415:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3373:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:50:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3153:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3164:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3176:6:7",
														"type": ""
													}
												],
												"src": "3107:322:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3503:114:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3519:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3516:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:30:7"
															},
															"nodeType": "YulIf",
															"src": "3513:56:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3578:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:1:7",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3597:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:14:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3606:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3586:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:25:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3578:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3483:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3494:4:7",
														"type": ""
													}
												],
												"src": "3434:183:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3671:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3690:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3690:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3681:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3796:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3805:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3808:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3798:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3798:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3798:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3732:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3743:5:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3750:42:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3739:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3739:54:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3729:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:65:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3722:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:73:7"
															},
															"nodeType": "YulIf",
															"src": "3719:93:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3650:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3661:5:7",
														"type": ""
													}
												],
												"src": "3622:196:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3886:825:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3935:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3944:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3947:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3937:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3937:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3937:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3914:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3922:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3910:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3910:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3929:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3899:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:35:7"
															},
															"nodeType": "YulIf",
															"src": "3896:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3960:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3983:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3970:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3970:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3964:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3999:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4009:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4003:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4022:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4089:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "4049:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4033:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4026:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4102:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4115:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4106:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4139:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4127:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4127:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4151:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4162:3:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4167:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4158:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4179:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4201:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4213:1:7",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "4216:2:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4209:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4209:10:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4197:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4197:23:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4222:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4193:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:32:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4183:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4253:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4262:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4265:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4255:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4255:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4255:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4240:6:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4237:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:15:7"
															},
															"nodeType": "YulIf",
															"src": "4234:35:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4278:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4293:6:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4301:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4289:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4289:15:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4282:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4369:313:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4383:36:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4415:3:7"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "4402:12:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4402:17:7"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "4387:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4483:74:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "4501:11:7",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4511:1:7",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_3",
																							"nodeType": "YulTypedName",
																							"src": "4505:2:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4536:2:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4540:2:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "4529:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4529:14:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4529:14:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "4438:11:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4451:18:7",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4435:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4435:35:7"
																		},
																		"nodeType": "YulIf",
																		"src": "4432:125:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4577:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "4608:6:7"
																										},
																										{
																											"name": "innerOffset",
																											"nodeType": "YulIdentifier",
																											"src": "4616:11:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4604:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4604:24:7"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "4630:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4600:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4600:33:7"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4635:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_string",
																						"nodeType": "YulIdentifier",
																						"src": "4582:17:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4582:57:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4570:70:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4570:70:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4653:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4664:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4669:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4660:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4660:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4653:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4324:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4329:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4337:23:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4339:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4350:3:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4355:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4346:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4346:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4339:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4317:3:7",
																"statements": []
															},
															"src": "4313:369:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4691:14:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4700:5:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4691:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_string_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3860:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3868:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3876:5:7",
														"type": ""
													}
												],
												"src": "3823:888:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4863:1008:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4909:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4918:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4921:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4911:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4911:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4911:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4884:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4880:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4880:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:32:7"
															},
															"nodeType": "YulIf",
															"src": "4873:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4934:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4948:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4948:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4938:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4980:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4990:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4984:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5035:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5044:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5047:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5037:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5037:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5037:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5023:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5031:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5020:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:14:7"
															},
															"nodeType": "YulIf",
															"src": "5017:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5060:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5074:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5085:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5064:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5140:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5149:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5152:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5142:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5142:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5142:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5119:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5123:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5115:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5115:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5130:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5111:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5111:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:35:7"
															},
															"nodeType": "YulIf",
															"src": "5101:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5165:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5188:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5175:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:16:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5169:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5200:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5210:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5204:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5223:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5290:2:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5250:39:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:43:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5234:15:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:60:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5227:3:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5303:16:7",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5316:3:7"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5307:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5335:3:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5340:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5328:15:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5352:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5363:3:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5368:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:12:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5380:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5402:2:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5410:1:7",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5413:2:7"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5406:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5406:10:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:19:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5419:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:28:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5384:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5454:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5463:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5466:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5456:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5456:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5456:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5437:6:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5445:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5434:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:19:7"
															},
															"nodeType": "YulIf",
															"src": "5431:39:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5479:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5494:2:7"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5498:2:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:11:7"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5483:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5566:92:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5587:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5611:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5592:18:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5592:23:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5580:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5580:36:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5580:36:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5629:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5640:3:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5645:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5636:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5636:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5629:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5521:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5526:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5518:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5518:15:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5534:23:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5536:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5547:3:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5552:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5543:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5543:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5536:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5514:3:7",
																"statements": []
															},
															"src": "5510:148:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5667:15:7",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5677:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5667:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5691:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5724:9:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5735:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5720:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5720:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5707:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5707:32:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5695:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5768:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5777:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5770:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5770:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5770:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5754:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5764:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5751:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5751:16:7"
															},
															"nodeType": "YulIf",
															"src": "5748:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5793:72:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5835:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5846:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5831:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5831:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5857:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_string_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5803:27:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:62:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5793:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4821:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4832:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4844:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4852:6:7",
														"type": ""
													}
												],
												"src": "4716:1155:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5973:299:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6019:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6028:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6031:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6021:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6021:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6021:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5994:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5990:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6015:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:32:7"
															},
															"nodeType": "YulIf",
															"src": "5983:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6044:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6073:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6054:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6092:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6123:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6134:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6119:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6106:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6096:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6181:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6190:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6193:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6183:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6183:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6183:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6153:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6150:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:30:7"
															},
															"nodeType": "YulIf",
															"src": "6147:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6206:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6238:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6249:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6234:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6234:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6258:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6216:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6216:50:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6206:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5942:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5954:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5962:6:7",
														"type": ""
													}
												],
												"src": "5876:396:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6347:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6393:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6402:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6405:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6395:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6395:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6395:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6368:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6364:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:32:7"
															},
															"nodeType": "YulIf",
															"src": "6357:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6418:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6447:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6428:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6418:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6313:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6324:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6336:6:7",
														"type": ""
													}
												],
												"src": "6277:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6534:184:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6544:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6553:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6548:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6613:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6638:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6643:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6634:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6634:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6657:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6662:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6653:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6653:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6647:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6647:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6627:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6627:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6627:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6574:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6577:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6571:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6585:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6587:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6596:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6599:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6592:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6592:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6587:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6567:3:7",
																"statements": []
															},
															"src": "6563:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6696:3:7"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6701:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6692:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6692:16:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6710:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:27:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6512:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6517:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6522:6:7",
														"type": ""
													}
												],
												"src": "6468:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7000:352:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7010:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7030:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7024:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7014:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7100:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7105:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7046:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7046:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7046:66:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7121:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7138:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7143:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7134:16:7"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "7125:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "7166:5:7"
																	},
																	{
																		"hexValue": "5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7173:3:7",
																		"type": "",
																		"value": "_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7186:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7208:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7202:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:13:7"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "7190:8:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7263:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7271:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7259:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7259:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nodeType": "YulIdentifier",
																				"src": "7282:5:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7289:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7278:13:7"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "7293:8:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7224:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7224:78:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7224:78:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7311:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nodeType": "YulIdentifier",
																				"src": "7326:5:7"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "7333:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7322:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7322:20:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7318:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:28:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7311:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7_t_string_memory_ptr__to_t_string_memory_ptr_t_bytes1_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6968:3:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6973:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6981:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6992:3:7",
														"type": ""
													}
												],
												"src": "6723:629:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7478:334:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7495:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7506:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7488:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7488:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7518:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7522:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7565:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7576:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7561:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7561:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7554:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7636:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7644:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7632:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7632:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7653:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7664:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7649:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7669:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7597:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:79:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7597:79:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7685:121:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7720:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7728:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7716:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7716:15:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7733:66:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7712:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7712:88:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7697:104:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7803:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7693:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7693:113:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7685:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7447:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7458:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7469:4:7",
														"type": ""
													}
												],
												"src": "7357:455:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7914:147:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7960:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7969:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7972:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7962:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7962:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7962:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7935:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7944:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7931:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7956:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:32:7"
															},
															"nodeType": "YulIf",
															"src": "7924:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7985:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8001:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7995:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7985:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8020:35:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8030:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:25:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8020:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7872:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7883:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7895:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7903:6:7",
														"type": ""
													}
												],
												"src": "7817:244:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8205:150:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8215:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8235:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8229:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8229:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8219:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8290:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8298:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8286:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8305:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8310:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8251:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8251:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8251:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8326:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8337:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8342:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8333:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8326:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8181:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8186:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8197:3:7",
														"type": ""
													}
												],
												"src": "8066:289:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8551:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8585:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8596:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8581:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8581:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8601:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8574:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8574:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8635:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8620:18:7"
																	},
																	{
																		"hexValue": "546f6b656e73206e6f7420617661696c61626c6520666f722073776170",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8640:31:7",
																		"type": "",
																		"value": "Tokens not available for swap"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8613:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8613:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8613:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8693:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8704:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8689:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8681:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8511:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8525:4:7",
														"type": ""
													}
												],
												"src": "8360:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8910:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8927:3:7"
																	},
																	{
																		"hexValue": "75736474",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8932:6:7",
																		"type": "",
																		"value": "usdt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8920:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8920:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8948:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8959:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8964:1:7",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8955:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8955:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8948:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8894:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8902:3:7",
														"type": ""
													}
												],
												"src": "8718:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9009:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9026:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9019:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9019:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9123:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9126:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9147:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9150:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9140:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8977:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:417:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9242:168:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9263:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9266:77:7",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9256:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9256:88:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9256:88:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9367:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9357:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9357:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9357:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9392:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9395:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9385:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9385:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9385:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9231:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:9:7"
															},
															"nodeType": "YulIf",
															"src": "9221:189:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9576:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9578:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9578:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9578:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9429:1:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9432:66:7",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9426:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9426:73:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9504:1:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9507:66:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9501:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9501:73:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:153:7"
															},
															"nodeType": "YulIf",
															"src": "9419:179:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9607:15:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9617:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9620:1:7"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "9612:4:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9612:10:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9607:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9196:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9199:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9205:1:7",
														"type": ""
													}
												],
												"src": "9166:462:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9684:241:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9694:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9709:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9712:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9705:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9705:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9694:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9816:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9818:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9818:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9818:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9734:1:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9737:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9730:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9744:1:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9747:66:7",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9741:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9741:73:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:89:7"
															},
															"nodeType": "YulIf",
															"src": "9723:115:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9897:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9899:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9899:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9899:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9867:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9860:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9860:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9874:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9882:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9891:1:7"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nodeType": "YulIdentifier",
																							"src": "9877:4:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9877:16:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9871:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9871:23:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9857:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9857:38:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9850:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9850:46:7"
															},
															"nodeType": "YulIf",
															"src": "9847:72:7"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9663:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9666:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9672:7:7",
														"type": ""
													}
												],
												"src": "9633:292:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10104:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10121:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10114:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10114:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10155:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10166:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10151:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10151:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10171:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10194:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10205:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10190:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10190:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10210:20:7",
																		"type": "",
																		"value": "Invalid price feed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10183:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10183:48:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10183:48:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10240:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10252:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10263:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10248:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10248:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10240:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10081:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10095:4:7",
														"type": ""
													}
												],
												"src": "9930:342:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10451:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10468:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10479:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10461:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10461:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10461:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10502:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10513:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10498:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10518:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10491:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10491:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10491:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10541:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10552:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10537:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10537:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74204c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10557:24:7",
																		"type": "",
																		"value": "Insufficient Liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10530:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10530:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10530:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10591:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10603:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10614:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10599:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10599:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10591:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10428:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10442:4:7",
														"type": ""
													}
												],
												"src": "10277:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10802:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10819:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10830:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10812:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10812:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10853:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10864:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10849:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10869:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10842:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10892:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10903:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10888:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10888:18:7"
																	},
																	{
																		"hexValue": "496e76616c6964204e616d65732f546f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10908:22:7",
																		"type": "",
																		"value": "Invalid Names/Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10881:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10881:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10881:50:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10940:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10952:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10963:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10948:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10940:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2286e863fd3779b7a63f86a5daedb3046d372c0fc20d5d22ebceabb566152232__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10779:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10793:4:7",
														"type": ""
													}
												],
												"src": "10628:344:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11009:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11026:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11019:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11123:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11126:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11116:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11116:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11116:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10977:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11213:148:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11304:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11306:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11306:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11306:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11229:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11236:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11226:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11226:77:7"
															},
															"nodeType": "YulIf",
															"src": "11223:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11335:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11346:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11342:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11342:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11335:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11195:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11205:3:7",
														"type": ""
													}
												],
												"src": "11166:195:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11540:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11557:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11568:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11550:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11550:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11591:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11602:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11607:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11580:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11630:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11641:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11626:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11626:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11646:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11619:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11619:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11701:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11712:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11697:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11717:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11690:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11690:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11735:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11747:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11758:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11743:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11735:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11517:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11531:4:7",
														"type": ""
													}
												],
												"src": "11366:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11947:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11964:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11975:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11957:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11957:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11998:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12009:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12014:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11987:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11987:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11987:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12037:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12048:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12033:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12033:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12053:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12026:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12026:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12097:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12109:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12120:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12105:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12097:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11924:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11938:4:7",
														"type": ""
													}
												],
												"src": "11773:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12215:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12261:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12270:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12273:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12263:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12263:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12263:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12236:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12245:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12232:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12232:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12257:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12228:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12228:32:7"
															},
															"nodeType": "YulIf",
															"src": "12225:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12286:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12302:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12296:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12296:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12181:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12192:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12204:6:7",
														"type": ""
													}
												],
												"src": "12134:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12480:241:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12490:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12502:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12513:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12498:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12498:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12490:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12525:52:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12535:42:7",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12529:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12593:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12608:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12616:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12604:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12586:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12640:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12651:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12636:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12636:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12660:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12668:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12629:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12629:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12692:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12703:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12688:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12688:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12708:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12681:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12681:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12681:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12433:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12444:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12452:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12471:4:7",
														"type": ""
													}
												],
												"src": "12323:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12855:168:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12865:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12877:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12888:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12873:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12873:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12865:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12907:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12922:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12930:42:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:55:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:74:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:74:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12994:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13005:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12990:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12990:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12983:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12983:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12816:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12827:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12835:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12846:4:7",
														"type": ""
													}
												],
												"src": "12726:297:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13165:150:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13175:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13195:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13189:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13189:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13179:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13250:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13258:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13246:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13246:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13265:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13270:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13211:34:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13211:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13211:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13286:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13297:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13302:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13293:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13286:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13141:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13146:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13157:3:7",
														"type": ""
													}
												],
												"src": "13028:287:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13494:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13511:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13504:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13504:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13545:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13556:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13541:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13561:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13595:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13580:18:7"
																	},
																	{
																		"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13600:34:7",
																		"type": "",
																		"value": "SafeERC20: low-level call failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13573:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13573:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13573:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13644:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13656:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13667:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13652:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13652:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13644:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13471:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13485:4:7",
														"type": ""
													}
												],
												"src": "13320:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13759:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13805:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13814:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13817:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13807:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13807:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13807:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13780:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13789:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13776:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13776:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13801:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13772:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13772:32:7"
															},
															"nodeType": "YulIf",
															"src": "13769:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13830:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13849:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13843:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13843:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13834:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13912:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13921:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13924:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13914:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13914:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13914:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13881:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "13902:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "13895:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13895:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13888:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13888:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13878:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13878:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:40:7"
															},
															"nodeType": "YulIf",
															"src": "13868:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13937:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13947:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13937:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13725:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13736:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13748:6:7",
														"type": ""
													}
												],
												"src": "13681:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14137:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14154:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14165:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14147:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14147:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14147:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14188:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14199:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14184:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14184:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14204:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14177:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14177:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14177:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14227:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14238:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14223:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14223:18:7"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14243:34:7",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14216:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14216:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14298:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14309:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14294:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14294:18:7"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14314:12:7",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14287:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14287:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14287:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14336:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14348:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14359:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14344:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14336:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14114:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14128:4:7",
														"type": ""
													}
												],
												"src": "13963:406:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_array_string_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, abi_decode_string(add(add(offset, innerOffset), _2), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_string_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7_t_string_memory_ptr__to_t_string_memory_ptr_t_bytes1_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"_\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(end_1, 1), length_1)\n        end := add(add(end_1, length_1), 1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_int256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Tokens not available for swap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"usdt\")\n        end := add(pos, 4)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        if and(eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000), eq(y, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        product := mul(x, y)\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n        if iszero(or(iszero(x), eq(y, sdiv(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid price feed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient Liquidity\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2286e863fd3779b7a63f86a5daedb3046d372c0fc20d5d22ebceabb566152232__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid Names/Tokens\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"SafeERC20: low-level call failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100be5760003560e01c8063935b13f611610076578063d7eb64f71161005b578063d7eb64f7146101ac578063e07a8665146101bf578063f2fde38b146101d257600080fd5b8063935b13f614610158578063a451f6021461019957600080fd5b8063715018a6116100a7578063715018a6146100fe57806380770b05146101065780638da5cb5b1461011957600080fd5b80633161a93a146100c3578063433ff288146100e9575b600080fd5b6100d66100d136600461108f565b6101e5565b6040519081526020015b60405180910390f35b6100fc6100f73660046110f3565b6102cf565b005b6100fc6103ce565b6100d6610114366004611138565b6103e2565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6101336101663660046111a5565b805160208183018101805160028252928201919093012091525473ffffffffffffffffffffffffffffffffffffffff1681565b6100fc6101a7366004611138565b61061a565b6100fc6101ba3660046112bf565b61089a565b6100fc6101cd366004611375565b6109c7565b6100fc6101e03660046113b9565b610a38565b60008083836040516020016101fb9291906113f8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526001547fabc4544e00000000000000000000000000000000000000000000000000000000835290925060009173ffffffffffffffffffffffffffffffffffffffff9091169063abc4544e90610283908590600401611450565b6040805180830381865afa15801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c391906114a1565b50925050505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff166002836040516102f791906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f546f6b656e73206e6f7420617661696c61626c6520666f72207377617000000060448201526064015b60405180910390fd5b6103ca60028360405161039c91906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16333084610aef565b5050565b6103d6610b11565b6103e06000610b92565b565b6040517f75736474000000000000000000000000000000000000000000000000000000006020820152600090602401604051602081830303815290604052805190602001208460405160200161043891906114c5565b60405160208183030381529060405280519060200120036104ab57600061045f84866101e5565b9050600061047582670de0b6b3a7640000611510565b61047f908561159f565b9050670de0b6b3a7640000610498826305f5e10061159f565b6104a29190611510565b92505050610613565b826040516020016104bc91906114c5565b60405160208183030381529060405280519060200120604051602001610505907f7573647400000000000000000000000000000000000000000000000000000000815260040190565b604051602081830303815290604052805190602001200361054a57600061052c85856101e5565b9050600061053a828561159f565b90506104a26305f5e10082611510565b600061058b856040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506101e5565b905060006105ce856040518060400160405280600481526020017f75736474000000000000000000000000000000000000000000000000000000008152506101e5565b90506000816105e584670de0b6b3a764000061159f565b6105ef9190611510565b6105f9908661159f565b905061060d670de0b6b3a764000082611510565b93505050505b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff1660028460405161064291906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16148015906106c25750600073ffffffffffffffffffffffffffffffffffffffff1660028360405161069991906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1614155b610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f546f6b656e73206e6f7420617661696c61626c6520666f7220737761700000006044820152606401610380565b60006107358484846103e2565b9050600081116107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f496e76616c6964207072696365206665656400000000000000000000000000006044820152606401610380565b6107aa83610c07565b811115610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152606401610380565b61085460028560405161082691906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16333085610aef565b61089460028460405161086791906114c5565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff163383610cb3565b50505050565b6108a2610b11565b805182511461090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e76616c6964204e616d65732f546f6b656e730000000000000000000000006044820152606401610380565b60005b82518110156109c25782818151811061092b5761092b6115eb565b60200260200101516002838381518110610947576109476115eb565b602002602001015160405161095c91906114c5565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055806109ba8161161a565b915050610910565b505050565b6109cf610b11565b816002826040516109e091906114c5565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555050565b610a40610b11565b73ffffffffffffffffffffffffffffffffffffffff8116610ae3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610380565b610aec81610b92565b50565b61089473ffffffffffffffffffffffffffffffffffffffff8516848484610cd4565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610380565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600282604051610c1991906114c5565b908152604051908190036020018120547f70a0823100000000000000000000000000000000000000000000000000000000825230600483015273ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610c8f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c99190611652565b6109c273ffffffffffffffffffffffffffffffffffffffff84168383610db0565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108949085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e06565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109c29084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610d2e565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610e2e91906114c5565b6000604051808303816000865af19150503d8060008114610e6b576040519150601f19603f3d011682016040523d82523d6000602084013e610e70565b606091505b509150915081610edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65646044820152606401610380565b8051156108945780806020019051810190610ef7919061166b565b610894576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610380565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ff957610ff9610f83565b604052919050565b600082601f83011261101257600080fd5b813567ffffffffffffffff81111561102c5761102c610f83565b61105d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610fb2565b81815284602083860101111561107257600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156110a257600080fd5b823567ffffffffffffffff808211156110ba57600080fd5b6110c686838701611001565b935060208501359150808211156110dc57600080fd5b506110e985828601611001565b9150509250929050565b6000806040838503121561110657600080fd5b823567ffffffffffffffff81111561111d57600080fd5b61112985828601611001565b95602094909401359450505050565b60008060006060848603121561114d57600080fd5b833567ffffffffffffffff8082111561116557600080fd5b61117187838801611001565b9450602086013591508082111561118757600080fd5b5061119486828701611001565b925050604084013590509250925092565b6000602082840312156111b757600080fd5b813567ffffffffffffffff8111156111ce57600080fd5b6111da84828501611001565b949350505050565b600067ffffffffffffffff8211156111fc576111fc610f83565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461122a57600080fd5b919050565b600082601f83011261124057600080fd5b81356020611255611250836111e2565b610fb2565b82815260059290921b8401810191818101908684111561127457600080fd5b8286015b848110156112b457803567ffffffffffffffff8111156112985760008081fd5b6112a68986838b0101611001565b845250918301918301611278565b509695505050505050565b600080604083850312156112d257600080fd5b823567ffffffffffffffff808211156112ea57600080fd5b818501915085601f8301126112fe57600080fd5b8135602061130e611250836111e2565b82815260059290921b8401810191818101908984111561132d57600080fd5b948201945b838610156113525761134386611206565b82529482019490820190611332565b9650508601359250508082111561136857600080fd5b506110e98582860161122f565b6000806040838503121561138857600080fd5b61139183611206565b9150602083013567ffffffffffffffff8111156113ad57600080fd5b6110e985828601611001565b6000602082840312156113cb57600080fd5b61061382611206565b60005b838110156113ef5781810151838201526020016113d7565b50506000910152565b6000835161140a8184602088016113d4565b7f5f0000000000000000000000000000000000000000000000000000000000000090830190815283516114448160018401602088016113d4565b01600101949350505050565b602081526000825180602084015261146f8160408501602087016113d4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600080604083850312156114b457600080fd5b505080516020909101519092909150565b600082516114d78184602087016113d4565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082611546577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f80000000000000000000000000000000000000000000000000000000000000008314161561159a5761159a6114e1565b500590565b808202600082127f8000000000000000000000000000000000000000000000000000000000000000841416156115d7576115d76114e1565b81810583148215176102c9576102c96114e1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361164b5761164b6114e1565b5060010190565b60006020828403121561166457600080fd5b5051919050565b60006020828403121561167d57600080fd5b8151801515811461061357600080fdfea26469706673582212205048726c77d152c3d08237dd78796a78f131ea407b7d6a8f500c4d6850918c0064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x935B13F6 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0xD7EB64F7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD7EB64F7 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xE07A8665 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x935B13F6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xA451F602 EQ PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xA7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x80770B05 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3161A93A EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x433FF288 EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xD6 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x2 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1138 JUMP JUMPDEST PUSH2 0x61A JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1375 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B9 JUMP JUMPDEST PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1FB SWAP3 SWAP2 SWAP1 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH32 0xABC4544E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xABC4544E SWAP1 PUSH2 0x283 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CA PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xAEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0x3E0 PUSH1 0x0 PUSH2 0xB92 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x4AB JUMPI PUSH1 0x0 PUSH2 0x45F DUP5 DUP7 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x475 DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x47F SWAP1 DUP6 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x498 DUP3 PUSH4 0x5F5E100 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x613 JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x505 SWAP1 PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x54A JUMPI PUSH1 0x0 PUSH2 0x52C DUP6 DUP6 PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x53A DUP3 DUP6 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH2 0x4A2 PUSH4 0x5F5E100 DUP3 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5CE DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7573647400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH2 0x5E5 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x159F JUMP JUMPDEST PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0x5F9 SWAP1 DUP7 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH2 0x60D PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x1510 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO SWAP1 PUSH2 0x6C2 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x728 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP5 DUP5 DUP5 PUSH2 0x3E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420707269636520666565640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0xC07 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x813 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0x854 PUSH1 0x2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x894 PUSH1 0x2 DUP5 PUSH1 0x40 MLOAD PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0xCB3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0xB11 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x90D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964204E616D65732F546F6B656E73000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x9C2 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92B PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x947 JUMPI PUSH2 0x947 PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x9BA DUP2 PUSH2 0x161A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x910 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9CF PUSH2 0xB11 JUMP JUMPDEST DUP2 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E0 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA40 PUSH2 0xB11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x380 JUMP JUMPDEST PUSH2 0xAEC DUP2 PUSH2 0xB92 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x894 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP5 DUP5 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x9C2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP4 DUP4 PUSH2 0xDB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x894 SWAP1 DUP6 SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x9C2 SWAP1 DUP5 SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 SWAP1 PUSH1 0x64 ADD PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE6B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE70 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x380 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x894 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x380 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF9 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0xF83 JUMP JUMPDEST PUSH2 0x105D PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0xFB2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1072 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C6 DUP7 DUP4 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1129 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1171 DUP8 DUP4 DUP9 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1194 DUP7 DUP3 DUP8 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11DA DUP5 DUP3 DUP6 ADD PUSH2 0x1001 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FC PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x122A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1255 PUSH2 0x1250 DUP4 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0xFB2 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x12B4 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1298 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x12A6 DUP10 DUP7 DUP4 DUP12 ADD ADD PUSH2 0x1001 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1278 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x130E PUSH2 0x1250 DUP4 PUSH2 0x11E2 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x1352 JUMPI PUSH2 0x1343 DUP7 PUSH2 0x1206 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x1332 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x1368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x122F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1391 DUP4 PUSH2 0x1206 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x613 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13EF JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13D7 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x140A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH32 0x5F00000000000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x1444 DUP2 PUSH1 0x1 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13D4 JUMP JUMPDEST ADD PUSH1 0x1 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x146F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x14D7 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1546 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x159A JUMPI PUSH2 0x159A PUSH2 0x14E1 JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL PUSH1 0x0 DUP3 SLT PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ AND ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D7 PUSH2 0x14E1 JUMP JUMPDEST DUP2 DUP2 SDIV DUP4 EQ DUP3 ISZERO OR PUSH2 0x2C9 JUMPI PUSH2 0x2C9 PUSH2 0x14E1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x164B JUMPI PUSH2 0x164B PUSH2 0x14E1 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BASEFEE PUSH19 0x6C77D152C3D08237DD78796A78F131EA407B7D PUSH11 0x8F500C4D6850918C006473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "222:3967:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:289;;;;;;:::i;:::-;;:::i;:::-;;;1829:25:7;;;1817:2;1802:18;467:289:0;;;;;;;;2751:358;;;;;;:::i;:::-;;:::i;:::-;;1824:101:4;;;:::i;762:1041:0:-;;;;;;:::i;:::-;;:::i;1194:85:4:-;1240:7;1266:6;;;1194:85;;;3052:42:7;3040:55;;;3022:74;;3010:2;2995:18;1194:85:4;2876:226:7;322:48:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:936;;;;;;:::i;:::-;;:::i;3268:319::-;;;;;;:::i;:::-;;:::i;3115:147::-;;;;;;:::i;:::-;;:::i;2074:198:4:-;;;;;;:::i;:::-;;:::i;467:289:0:-;579:6;601:22;640:9;656:11;626:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;697:9;;:30;;;626:42;;-1:-1:-1;679:12:0;;697:9;;;;;:20;;:30;;626:42;;697:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;678:49:0;-1:-1:-1;;;467:289:0;;;;;:::o;2751:358::-;2882:1;2849:35;;:14;2864:5;2849:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:35;2828:111;;;;;;;8562:2:7;2828:111:0;;;8544:21:7;8601:2;8581:18;;;8574:30;8640:31;8620:18;;;8613:59;8689:18;;2828:111:0;;;;;;;;;2950:152;2989:14;3004:5;2989:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3033:10;3066:4;3085:7;2950:17;:152::i;:::-;2751:358;;:::o;1824:101:4:-;1087:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;762:1041:0:-;1013:24;;8932:6:7;1013:24:0;;;8920:19:7;910:6:0;;8955:11:7;;1013:24:0;;;;;;;;;;;;1003:35;;;;;;972:13;955:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;945:42;;;;;;:93;928:336;;1063:16;1082:33;1088:11;1101:13;1082:5;:33::i;:::-;1063:52;-1:-1:-1;1129:24:0;1175;1063:52;1182:4;1175:24;:::i;:::-;1156:44;;1163:7;1156:44;:::i;:::-;1129:71;-1:-1:-1;1249:4:0;1222:23;1129:71;1242:3;1222:23;:::i;:::-;1221:32;;;;:::i;:::-;1214:39;;;;;;928:336;1369:11;1352:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;1342:40;;;;;;1301:24;;;;;;8932:6:7;8920:19;;8964:1;8955:11;;8718:254;1301:24:0;;;;;;;;;;;;;1291:35;;;;;;:91;1274:306;;1407:12;1422:33;1428:13;1443:11;1422:5;:33::i;:::-;1407:48;-1:-1:-1;1469:26:0;1498:25;1407:48;1505:7;1498:25;:::i;:::-;1469:54;-1:-1:-1;1544:25:0;1566:3;1469:54;1544:25;:::i;1274:306::-;1590:13;1606:28;1612:13;1606:28;;;;;;;;;;;;;;;;;:5;:28::i;:::-;1590:44;;1644:13;1660:26;1666:11;1660:26;;;;;;;;;;;;;;;;;:5;:26::i;:::-;1644:42;-1:-1:-1;1696:18:0;1644:42;1737:13;:6;1746:4;1737:13;:::i;:::-;1736:24;;;;:::i;:::-;1717:44;;1724:7;1717:44;:::i;:::-;1696:65;-1:-1:-1;1778:18:0;1792:4;1696:65;1778:18;:::i;:::-;1771:25;;;;;762:1041;;;;;;:::o;1809:936::-;2009:1;1967:44;;:14;1982;1967:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:44;;;;:106;;;2071:1;2031:42;;:14;2046:12;2031:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:42;;1967:106;1945:184;;;;;;;8562:2:7;1945:184:0;;;8544:21:7;8601:2;8581:18;;;8574:30;8640:31;8620:18;;;8613:59;8689:18;;1945:184:0;8360:353:7;1945:184:0;2139:20;2183:53;2198:14;2214:12;2228:7;2183:14;:53::i;:::-;2139:107;;2279:1;2264:12;:16;2256:47;;;;;;;10132:2:7;2256:47:0;;;10114:21:7;10171:2;10151:18;;;10144:30;10210:20;10190:18;;;10183:48;10248:18;;2256:47:0;9930:342:7;2256:47:0;2350:25;2362:12;2350:11;:25::i;:::-;2334:12;:41;;2313:110;;;;;;;10479:2:7;2313:110:0;;;10461:21:7;10518:2;10498:18;;;10491:30;10557:24;10537:18;;;10530:52;10599:18;;2313:110:0;10277:346:7;2313:110:0;2433:161;2472:14;2487;2472:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2525:10;2558:4;2577:7;2433:17;:161::i;:::-;2604:133;2639:14;2654:12;2639:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2690:10;2715:12;2604:13;:133::i;:::-;1935:810;1809:936;;;:::o;3268:319::-;1087:13:4;:11;:13::i;:::-;3424:6:0::1;:13;3406:7;:14;:31;3398:64;;;::::0;::::1;::::0;;10830:2:7;3398:64:0::1;::::0;::::1;10812:21:7::0;10869:2;10849:18;;;10842:30;10908:22;10888:18;;;10881:50;10948:18;;3398:64:0::1;10628:344:7::0;3398:64:0::1;3478:9;3473:108;3497:7;:14;3493:1;:18;3473:108;;;3560:7;3568:1;3560:10;;;;;;;;:::i;:::-;;;;;;;3532:14;3547:6;3554:1;3547:9;;;;;;;;:::i;:::-;;;;;;;3532:25;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:38;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3513:3;::::1;::::0;::::1;:::i;:::-;;;;3473:108;;;;3268:319:::0;;:::o;3115:147::-;1087:13:4;:11;:13::i;:::-;3249:6:0::1;3225:14;3240:5;3225:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:30;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;3115:147:0:o;2074:198:4:-;1087:13;:11;:13::i;:::-;2162:22:::1;::::0;::::1;2154:73;;;::::0;::::1;::::0;;11568:2:7;2154:73:4::1;::::0;::::1;11550:21:7::0;11607:2;11587:18;;;11580:30;11646:34;11626:18;;;11619:62;11717:8;11697:18;;;11690:36;11743:19;;2154:73:4::1;11366:402:7::0;2154:73:4::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3593:211:0:-;3732:65;:30;;;3771:4;3786:2;3791:5;3732:30;:65::i;1352:130:4:-;1240:7;1266:6;1415:23;1266:6;721:10:1;1415:23:4;1407:68;;;;;;;11975:2:7;1407:68:4;;;11957:21:7;;;11994:18;;;11987:30;12053:34;12033:18;;;12026:62;12105:18;;1407:68:4;11773:356:7;2426:187:4;2499:16;2518:6;;;2534:17;;;;;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;3986:201:0:-;4080:15;4128:14;4143:10;4128:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;4121:59;;;4174:4;4121:59;;;3022:74:7;4128:26:0;;;4121:44;;2995:18:7;;4121:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3813:167::-;3926:47;:26;;;3962:2;3967:5;3926:26;:47::i;874:241:5:-;1039:68;;12535:42:7;12604:15;;;1039:68:5;;;12586:34:7;12656:15;;12636:18;;;12629:43;12688:18;;;12681:34;;;1012:96:5;;1032:5;;1062:27;;12498:18:7;;1039:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:19;:96::i;663:205::-;802:58;;12930:42:7;12918:55;;802:58:5;;;12900:74:7;12990:18;;;12983:34;;;775:86:5;;795:5;;825:23;;12873:18:7;;802:58:5;12726:297:7;2160:1027:5;2809:12;2823:23;2858:5;2850:19;;2870:4;2850:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2808:67;;;;2893:7;2885:52;;;;;;;13522:2:7;2885:52:5;;;13504:21:7;;;13541:18;;;13534:30;13600:34;13580:18;;;13573:62;13652:18;;2885:52:5;13320:356:7;2885:52:5;2952:17;;:21;2948:233;;3104:10;3093:30;;;;;;;;;;;;:::i;:::-;3085:85;;;;;;;14165:2:7;3085:85:5;;;14147:21:7;14204:2;14184:18;;;14177:30;14243:34;14223:18;;;14216:62;14314:12;14294:18;;;14287:40;14344:19;;3085:85:5;13963:406:7;14:184;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:334;274:2;268:9;330:2;320:13;;335:66;316:86;304:99;;433:18;418:34;;454:22;;;415:62;412:88;;;480:18;;:::i;:::-;516:2;509:22;203:334;;-1:-1:-1;203:334:7:o;542:590::-;585:5;638:3;631:4;623:6;619:17;615:27;605:55;;656:1;653;646:12;605:55;692:6;679:20;718:18;714:2;711:26;708:52;;;740:18;;:::i;:::-;784:114;892:4;823:66;816:4;812:2;808:13;804:86;800:97;784:114;:::i;:::-;923:2;914:7;907:19;969:3;962:4;957:2;949:6;945:15;941:26;938:35;935:55;;;986:1;983;976:12;935:55;1051:2;1044:4;1036:6;1032:17;1025:4;1016:7;1012:18;999:55;1099:1;1074:16;;;1092:4;1070:27;1063:38;;;;1078:7;542:590;-1:-1:-1;;;542:590:7:o;1137:543::-;1225:6;1233;1286:2;1274:9;1265:7;1261:23;1257:32;1254:52;;;1302:1;1299;1292:12;1254:52;1342:9;1329:23;1371:18;1412:2;1404:6;1401:14;1398:34;;;1428:1;1425;1418:12;1398:34;1451:50;1493:7;1484:6;1473:9;1469:22;1451:50;:::i;:::-;1441:60;;1554:2;1543:9;1539:18;1526:32;1510:48;;1583:2;1573:8;1570:16;1567:36;;;1599:1;1596;1589:12;1567:36;;1622:52;1666:7;1655:8;1644:9;1640:24;1622:52;:::i;:::-;1612:62;;;1137:543;;;;;:::o;1865:390::-;1943:6;1951;2004:2;1992:9;1983:7;1979:23;1975:32;1972:52;;;2020:1;2017;2010:12;1972:52;2060:9;2047:23;2093:18;2085:6;2082:30;2079:50;;;2125:1;2122;2115:12;2079:50;2148;2190:7;2181:6;2170:9;2166:22;2148:50;:::i;:::-;2138:60;2245:2;2230:18;;;;2217:32;;-1:-1:-1;;;;1865:390:7:o;2260:611::-;2357:6;2365;2373;2426:2;2414:9;2405:7;2401:23;2397:32;2394:52;;;2442:1;2439;2432:12;2394:52;2482:9;2469:23;2511:18;2552:2;2544:6;2541:14;2538:34;;;2568:1;2565;2558:12;2538:34;2591:50;2633:7;2624:6;2613:9;2609:22;2591:50;:::i;:::-;2581:60;;2694:2;2683:9;2679:18;2666:32;2650:48;;2723:2;2713:8;2710:16;2707:36;;;2739:1;2736;2729:12;2707:36;;2762:52;2806:7;2795:8;2784:9;2780:24;2762:52;:::i;:::-;2752:62;;;2861:2;2850:9;2846:18;2833:32;2823:42;;2260:611;;;;;:::o;3107:322::-;3176:6;3229:2;3217:9;3208:7;3204:23;3200:32;3197:52;;;3245:1;3242;3235:12;3197:52;3285:9;3272:23;3318:18;3310:6;3307:30;3304:50;;;3350:1;3347;3340:12;3304:50;3373;3415:7;3406:6;3395:9;3391:22;3373:50;:::i;:::-;3363:60;3107:322;-1:-1:-1;;;;3107:322:7:o;3434:183::-;3494:4;3527:18;3519:6;3516:30;3513:56;;;3549:18;;:::i;:::-;-1:-1:-1;3594:1:7;3590:14;3606:4;3586:25;;3434:183::o;3622:196::-;3690:20;;3750:42;3739:54;;3729:65;;3719:93;;3808:1;3805;3798:12;3719:93;3622:196;;;:::o;3823:888::-;3876:5;3929:3;3922:4;3914:6;3910:17;3906:27;3896:55;;3947:1;3944;3937:12;3896:55;3983:6;3970:20;4009:4;4033:60;4049:43;4089:2;4049:43;:::i;:::-;4033:60;:::i;:::-;4127:15;;;4213:1;4209:10;;;;4197:23;;4193:32;;;4158:12;;;;4237:15;;;4234:35;;;4265:1;4262;4255:12;4234:35;4301:2;4293:6;4289:15;4313:369;4329:6;4324:3;4321:15;4313:369;;;4415:3;4402:17;4451:18;4438:11;4435:35;4432:125;;;4511:1;4540:2;4536;4529:14;4432:125;4582:57;4635:3;4630:2;4616:11;4608:6;4604:24;4600:33;4582:57;:::i;:::-;4570:70;;-1:-1:-1;4660:12:7;;;;4346;;4313:369;;;-1:-1:-1;4700:5:7;3823:888;-1:-1:-1;;;;;;3823:888:7:o;4716:1155::-;4844:6;4852;4905:2;4893:9;4884:7;4880:23;4876:32;4873:52;;;4921:1;4918;4911:12;4873:52;4961:9;4948:23;4990:18;5031:2;5023:6;5020:14;5017:34;;;5047:1;5044;5037:12;5017:34;5085:6;5074:9;5070:22;5060:32;;5130:7;5123:4;5119:2;5115:13;5111:27;5101:55;;5152:1;5149;5142:12;5101:55;5188:2;5175:16;5210:4;5234:60;5250:43;5290:2;5250:43;:::i;5234:60::-;5328:15;;;5410:1;5406:10;;;;5398:19;;5394:28;;;5359:12;;;;5434:19;;;5431:39;;;5466:1;5463;5456:12;5431:39;5490:11;;;;5510:148;5526:6;5521:3;5518:15;5510:148;;;5592:23;5611:3;5592:23;:::i;:::-;5580:36;;5543:12;;;;5636;;;;5510:148;;;5677:5;-1:-1:-1;;5720:18:7;;5707:32;;-1:-1:-1;;5751:16:7;;;5748:36;;;5780:1;5777;5770:12;5748:36;;5803:62;5857:7;5846:8;5835:9;5831:24;5803:62;:::i;5876:396::-;5954:6;5962;6015:2;6003:9;5994:7;5990:23;5986:32;5983:52;;;6031:1;6028;6021:12;5983:52;6054:29;6073:9;6054:29;:::i;:::-;6044:39;;6134:2;6123:9;6119:18;6106:32;6161:18;6153:6;6150:30;6147:50;;;6193:1;6190;6183:12;6147:50;6216;6258:7;6249:6;6238:9;6234:22;6216:50;:::i;6277:186::-;6336:6;6389:2;6377:9;6368:7;6364:23;6360:32;6357:52;;;6405:1;6402;6395:12;6357:52;6428:29;6447:9;6428:29;:::i;6468:250::-;6553:1;6563:113;6577:6;6574:1;6571:13;6563:113;;;6653:11;;;6647:18;6634:11;;;6627:39;6599:2;6592:10;6563:113;;;-1:-1:-1;;6710:1:7;6692:16;;6685:27;6468:250::o;6723:629::-;6992:3;7030:6;7024:13;7046:66;7105:6;7100:3;7093:4;7085:6;7081:17;7046:66;:::i;:::-;7173:3;7134:16;;;7159:18;;;7202:13;;7224:78;7202:13;7289:1;7278:13;;7271:4;7259:17;;7224:78;:::i;:::-;7322:20;7344:1;7318:28;;6723:629;-1:-1:-1;;;;6723:629:7:o;7357:455::-;7506:2;7495:9;7488:21;7469:4;7538:6;7532:13;7581:6;7576:2;7565:9;7561:18;7554:34;7597:79;7669:6;7664:2;7653:9;7649:18;7644:2;7636:6;7632:15;7597:79;:::i;:::-;7728:2;7716:15;7733:66;7712:88;7697:104;;;;7803:2;7693:113;;7357:455;-1:-1:-1;;7357:455:7:o;7817:244::-;7895:6;7903;7956:2;7944:9;7935:7;7931:23;7927:32;7924:52;;;7972:1;7969;7962:12;7924:52;-1:-1:-1;;7995:16:7;;8051:2;8036:18;;;8030:25;7995:16;;8030:25;;-1:-1:-1;7817:244:7:o;8066:289::-;8197:3;8235:6;8229:13;8251:66;8310:6;8305:3;8298:4;8290:6;8286:17;8251:66;:::i;:::-;8333:16;;;;;8066:289;-1:-1:-1;;8066:289:7:o;8977:184::-;9029:77;9026:1;9019:88;9126:4;9123:1;9116:15;9150:4;9147:1;9140:15;9166:462;9205:1;9231;9221:189;;9266:77;9263:1;9256:88;9367:4;9364:1;9357:15;9395:4;9392:1;9385:15;9221:189;9507:66;9504:1;9501:73;9432:66;9429:1;9426:73;9422:153;9419:179;;;9578:18;;:::i;:::-;-1:-1:-1;9612:10:7;;9166:462::o;9633:292::-;9705:9;;;9672:7;9730:9;;9747:66;9741:73;;9726:89;9723:115;;;9818:18;;:::i;:::-;9891:1;9882:7;9877:16;9874:1;9871:23;9867:1;9860:9;9857:38;9847:72;;9899:18;;:::i;10977:184::-;11029:77;11026:1;11019:88;11126:4;11123:1;11116:15;11150:4;11147:1;11140:15;11166:195;11205:3;11236:66;11229:5;11226:77;11223:103;;11306:18;;:::i;:::-;-1:-1:-1;11353:1:7;11342:13;;11166:195::o;12134:184::-;12204:6;12257:2;12245:9;12236:7;12232:23;12228:32;12225:52;;;12273:1;12270;12263:12;12225:52;-1:-1:-1;12296:16:7;;12134:184;-1:-1:-1;12134:184:7:o;13681:277::-;13748:6;13801:2;13789:9;13780:7;13776:23;13772:32;13769:52;;;13817:1;13814;13807:12;13769:52;13849:9;13843:16;13902:5;13895:13;13888:21;13881:5;13878:32;13868:60;;13924:1;13921;13914:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1165400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(string,uint256)": "infinite",
								"addTrustedTokens(address,string)": "infinite",
								"addTrustedTokensMulti(address[],string[])": "infinite",
								"owner()": "2363",
								"queryAmountOut(string,string,uint256)": "infinite",
								"ratio(string,string)": "infinite",
								"renounceOwnership()": "infinite",
								"swap(string,string,uint256)": "infinite",
								"tokenAddresses(string)": "infinite",
								"transferOwnership(address)": "28336"
							},
							"internal": {
								"_getBalance(string memory)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 377,
									"end": 461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 461,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 377,
									"end": 461,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 929,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 929,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 929,
									"end": 961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 929,
									"end": 961,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 929,
									"end": 961,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 418,
									"end": 427,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 454,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 222,
									"end": 4189,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205048726c77d152c3d08237dd78796a78f131ea407b7d6a8f500c4d6850918c0064736f6c63430008110033",
									".code": [
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "935B13F6"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "D7EB64F7"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "D7EB64F7"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "E07A8665"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "935B13F6"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "A451F602"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "80770B05"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "3161A93A"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "433FF288"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 4189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 467,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 467,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2751,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2751,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 762,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 762,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3095,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3040,
											"end": 3095,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2876,
											"end": 3102,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 322,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 322,
											"end": 370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 322,
											"end": 370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 370,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1809,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1809,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3268,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3268,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3115,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3115,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 579,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 656,
											"end": 667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 626,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 697,
											"end": 706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "ABC4544E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 697,
											"end": 706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "ABC4544E"
										},
										{
											"begin": 697,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 626,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 697,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 697,
											"end": 727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 697,
											"end": 727,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 697,
											"end": 727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 678,
											"end": 727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 467,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2849,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8601,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8671,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2828,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2989,
											"end": 3003,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3004,
											"end": 3009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2989,
											"end": 3010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3033,
											"end": 3043,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3070,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2950,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2950,
											"end": 3102,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2950,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2751,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1087,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8938,
											"name": "PUSH",
											"source": 7,
											"value": "7573647400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8920,
											"end": 8939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 910,
											"end": 916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 972,
											"end": 985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 955,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 987,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 987,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1038,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 928,
											"end": 1264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1088,
											"end": 1099,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1082,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1082,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1063,
											"end": 1115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1186,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1175,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1175,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1199,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1175,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1156,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1156,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1156,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1129,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1129,
											"end": 1200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1222,
											"end": 1245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1222,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1221,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1221,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1214,
											"end": 1253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1264,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 928,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1369,
											"end": 1380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1352,
											"end": 1381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8932,
											"end": 8938,
											"name": "PUSH",
											"source": 7,
											"value": "7573647400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8920,
											"end": 8939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 8939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8965,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8718,
											"end": 8972,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1291,
											"end": 1382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1274,
											"end": 1580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1428,
											"end": 1441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1422,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1455,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1422,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1407,
											"end": 1455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1469,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1407,
											"end": 1455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1498,
											"end": 1523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1498,
											"end": 1523,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1498,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1544,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1566,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 1469,
											"end": 1523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1544,
											"end": 1569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1580,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1274,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "PUSH",
											"source": 0,
											"value": "7573647400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1606,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1606,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1590,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "PUSH",
											"source": 0,
											"value": "7573647400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1660,
											"end": 1686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1660,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1644,
											"end": 1686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1737,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1737,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1736,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1717,
											"end": 1761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1724,
											"end": 1731,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1717,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1717,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 1761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1696,
											"end": 1761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1778,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1981,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1982,
											"end": 1996,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1967,
											"end": 1997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1967,
											"end": 2073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2045,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2046,
											"end": 2058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2031,
											"end": 2059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2031,
											"end": 2059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2073,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 2073,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1967,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8601,
											"end": 8603,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8671,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E73206E6F7420617661696C61626C6520666F722073776170000000"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8360,
											"end": 8713,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1945,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2198,
											"end": 2212,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2183,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2183,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2280,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10132,
											"end": 10134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10171,
											"end": 10173,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10144,
											"end": 10174,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420707269636520666565640000000000000000000000000000"
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10183,
											"end": 10231,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10248,
											"end": 10266,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10248,
											"end": 10266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9930,
											"end": 10272,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2256,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2350,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2350,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2375,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10518,
											"end": 10520,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10491,
											"end": 10521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10557,
											"end": 10581,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74204C697175696469747900000000000000000000"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10530,
											"end": 10582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10599,
											"end": 10617,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10277,
											"end": 10623,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2313,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2487,
											"end": 2501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2472,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2558,
											"end": 2562,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2433,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2594,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2433,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2639,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2639,
											"end": 2667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2639,
											"end": 2667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2700,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2604,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2737,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2604,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1809,
											"end": 2745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1087,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3413,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3437,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3398,
											"end": 3462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3398,
											"end": 3462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10832,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 3462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10833,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10869,
											"end": 10871,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10908,
											"end": 10930,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964204E616D65732F546F6B656E73000000000000000000000000"
										},
										{
											"begin": 10888,
											"end": 10906,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10888,
											"end": 10906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 10906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10628,
											"end": 10972,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3398,
											"end": 3462,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3511,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3511,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3560,
											"end": 3570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3547,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3554,
											"end": 3555,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3547,
											"end": 3556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3547,
											"end": 3556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3513,
											"end": 3516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3513,
											"end": 3516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3473,
											"end": 3581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3115,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1087,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3240,
											"end": 3245,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3225,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3115,
											"end": 3262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1087,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1087,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1087,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11568,
											"end": 11570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11550,
											"end": 11571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11609,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11580,
											"end": 11610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11680,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11619,
											"end": 11681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11717,
											"end": 11725,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11690,
											"end": 11726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11743,
											"end": 11762,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11743,
											"end": 11762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 11366,
											"end": 11768,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3804,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3593,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3732,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1352,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11957,
											"end": 11978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11994,
											"end": 12012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11987,
											"end": 12017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12053,
											"end": 12087,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12033,
											"end": 12051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12088,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1407,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 11773,
											"end": 12129,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4187,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3986,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4142,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4128,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4178,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3022,
											"end": 3096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4165,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4121,
											"end": 4165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2995,
											"end": 3013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4121,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3980,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3813,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3964,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3926,
											"end": 3973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 874,
											"end": 1115,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 874,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12535,
											"end": 12577,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12604,
											"end": 12619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12619,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12619,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12586,
											"end": 12620,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12629,
											"end": 12672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12706,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12688,
											"end": 12706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12688,
											"end": 12706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12681,
											"end": 12715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12681,
											"end": 12715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12681,
											"end": 12715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1012,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1037,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1062,
											"end": 1089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12498,
											"end": 12516,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1012,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 663,
											"end": 868,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 663,
											"end": 868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 802,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 860,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12930,
											"end": 12972,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12918,
											"end": 12973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12918,
											"end": 12973,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 802,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 802,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 802,
											"end": 860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12900,
											"end": 12974,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12990,
											"end": 13008,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12990,
											"end": 13008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12990,
											"end": 13008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 13017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 13017,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12983,
											"end": 13017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 775,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 775,
											"end": 861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 795,
											"end": 800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 848,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 825,
											"end": 848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12873,
											"end": 12891,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12873,
											"end": 12891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 802,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 12726,
											"end": 13023,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 3187,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2160,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2850,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13504,
											"end": 13525,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13525,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13564,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13600,
											"end": 13634,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13580,
											"end": 13598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13652,
											"end": 13670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 13320,
											"end": 13676,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2885,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2973,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2948,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2948,
											"end": 3181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3093,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 3093,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14165,
											"end": 14167,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14147,
											"end": 14168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14204,
											"end": 14206,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 14184,
											"end": 14202,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14184,
											"end": 14202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14184,
											"end": 14202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14177,
											"end": 14207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14277,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14216,
											"end": 14278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14314,
											"end": 14326,
											"name": "PUSH",
											"source": 7,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14294,
											"end": 14312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14287,
											"end": 14327,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14344,
											"end": 14363,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14344,
											"end": 14363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 13963,
											"end": 14369,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 198,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 14,
											"end": 198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 66,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 144,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 163,
											"end": 167,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 160,
											"end": 161,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 187,
											"end": 191,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 184,
											"end": 185,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 192,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 203,
											"end": 537,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 274,
											"end": 276,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 277,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 330,
											"end": 332,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 320,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 320,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 401,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 316,
											"end": 402,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 304,
											"end": 403,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 304,
											"end": 403,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 433,
											"end": 451,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 418,
											"end": 452,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 418,
											"end": 452,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 454,
											"end": 476,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 415,
											"end": 477,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 412,
											"end": 500,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 412,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 412,
											"end": 500,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 480,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 480,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 480,
											"end": 498,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 480,
											"end": 498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 203,
											"end": 537,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 203,
											"end": 537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 203,
											"end": 537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 542,
											"end": 1132,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 542,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 585,
											"end": 590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 631,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 619,
											"end": 636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 615,
											"end": 642,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 605,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 605,
											"end": 660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 656,
											"end": 657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 646,
											"end": 658,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 605,
											"end": 660,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 605,
											"end": 660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 692,
											"end": 698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 679,
											"end": 699,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 718,
											"end": 736,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 737,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 708,
											"end": 760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 708,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 708,
											"end": 760,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 740,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 740,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 740,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 740,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 740,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 784,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 892,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 823,
											"end": 889,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 816,
											"end": 820,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 812,
											"end": 814,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 808,
											"end": 821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 804,
											"end": 890,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 800,
											"end": 897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 784,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 784,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 784,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 784,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 907,
											"end": 926,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 962,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 945,
											"end": 960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 941,
											"end": 967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 938,
											"end": 973,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 935,
											"end": 990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 935,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 935,
											"end": 990,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 986,
											"end": 987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 976,
											"end": 988,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 935,
											"end": 990,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 935,
											"end": 990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1044,
											"end": 1048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1023,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1054,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1090,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1070,
											"end": 1097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 542,
											"end": 1132,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 542,
											"end": 1132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1283,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1284,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1289,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1300,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1254,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1401,
											"end": 1415,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1398,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1473,
											"end": 1482,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1451,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1451,
											"end": 1501,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1451,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1501,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1441,
											"end": 1501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1558,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1586,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1666,
											"end": 1673,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1644,
											"end": 1653,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1622,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1622,
											"end": 1674,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1622,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 2255,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1865,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2006,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2001,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1979,
											"end": 2002,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2007,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2024,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1972,
											"end": 2024,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 2024,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1972,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2070,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2111,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2082,
											"end": 2112,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2129,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2079,
											"end": 2129,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2079,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2190,
											"end": 2197,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2148,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2148,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2198,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1865,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2412,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2424,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2394,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2492,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2554,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2555,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2572,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2538,
											"end": 2572,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2538,
											"end": 2572,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2538,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2591,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2591,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2591,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2641,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2725,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2762,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2863,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2859,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2865,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3107,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3217,
											"end": 3226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3227,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3232,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3249,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3197,
											"end": 3249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3247,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3249,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 3197,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3295,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3337,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3354,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3304,
											"end": 3354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3304,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 3304,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3415,
											"end": 3422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3373,
											"end": 3423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3423,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3373,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3423,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3107,
											"end": 3429,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3617,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3434,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3494,
											"end": 3498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3525,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3546,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3569,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3513,
											"end": 3569,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3590,
											"end": 3604,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3434,
											"end": 3617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3818,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3622,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3710,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3710,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3792,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3739,
											"end": 3793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3729,
											"end": 3794,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3719,
											"end": 3812,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3810,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3812,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3719,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 4711,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3823,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3927,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3933,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3896,
											"end": 3951,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3937,
											"end": 3949,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3951,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3896,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 3990,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4033,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4049,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4089,
											"end": 4091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4049,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4092,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 4049,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4033,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4033,
											"end": 4093,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4033,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4209,
											"end": 4219,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4220,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4252,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4252,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4252,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4269,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4234,
											"end": 4269,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4263,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4234,
											"end": 4269,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4234,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4324,
											"end": 4327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4321,
											"end": 4336,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4418,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4402,
											"end": 4419,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4432,
											"end": 4557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4511,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4432,
											"end": 4557,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 4432,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 4635,
											"end": 4638,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4632,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4616,
											"end": 4627,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4614,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4582,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4639,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 4582,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4660,
											"end": 4672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4358,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 4313,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 4711,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3823,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 5871,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4716,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4893,
											"end": 4902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4891,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4908,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 4923,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 4873,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5034,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5049,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5070,
											"end": 5092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5137,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5119,
											"end": 5121,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5115,
											"end": 5128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5111,
											"end": 5138,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5101,
											"end": 5156,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5154,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5101,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 5101,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5188,
											"end": 5190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5175,
											"end": 5191,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5210,
											"end": 5214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5234,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5250,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5294,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5234,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5417,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5394,
											"end": 5422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5431,
											"end": 5470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5431,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5431,
											"end": 5470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5456,
											"end": 5468,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5431,
											"end": 5470,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5431,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5501,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5501,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5524,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5518,
											"end": 5533,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5611,
											"end": 5614,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5592,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5616,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5543,
											"end": 5555,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5636,
											"end": 5648,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5510,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5677,
											"end": 5682,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5720,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5739,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5739,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 5767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5751,
											"end": 5767,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5782,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 5857,
											"end": 5864,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5846,
											"end": 5854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 5844,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5831,
											"end": 5855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5803,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5876,
											"end": 6272,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 5876,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5962,
											"end": 5968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6017,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 6018,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5983,
											"end": 6035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6035,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5983,
											"end": 6035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6054,
											"end": 6083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 6054,
											"end": 6083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6083,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6123,
											"end": 6132,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6106,
											"end": 6138,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6180,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6197,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6147,
											"end": 6197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6191,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6147,
											"end": 6197,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6147,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6258,
											"end": 6265,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6234,
											"end": 6256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6216,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6216,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6277,
											"end": 6463,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6277,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6360,
											"end": 6392,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6409,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6357,
											"end": 6409,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6402,
											"end": 6403,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6395,
											"end": 6407,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6409,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6357,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 6447,
											"end": 6456,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6428,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6428,
											"end": 6457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6718,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6468,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6583,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6584,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6666,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6602,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6563,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6710,
											"end": 6711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 7352,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6723,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 6995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7105,
											"end": 7111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7100,
											"end": 7103,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7046,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7046,
											"end": 7112,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 7046,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7176,
											"name": "PUSH",
											"source": 7,
											"value": "5F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7202,
											"end": 7215,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7289,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7278,
											"end": 7291,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7259,
											"end": 7276,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7224,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7302,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 7224,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7318,
											"end": 7346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7346,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6723,
											"end": 7352,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6723,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7357,
											"end": 7812,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 7357,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7506,
											"end": 7508,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7495,
											"end": 7504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7488,
											"end": 7509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7473,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7538,
											"end": 7544,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7565,
											"end": 7574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7664,
											"end": 7666,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7662,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7644,
											"end": 7646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7636,
											"end": 7642,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7597,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 7597,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7716,
											"end": 7731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7799,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 7712,
											"end": 7800,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7803,
											"end": 7805,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7806,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7357,
											"end": 7812,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7357,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7817,
											"end": 8061,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7817,
											"end": 8061,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7944,
											"end": 7953,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7942,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7931,
											"end": 7954,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7959,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7976,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7924,
											"end": 7976,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7962,
											"end": 7974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7976,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7924,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7995,
											"end": 8011,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8011,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8055,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7995,
											"end": 8011,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8055,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8030,
											"end": 8055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 8061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8355,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 8066,
											"end": 8355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8229,
											"end": 8242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8305,
											"end": 8308,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8298,
											"end": 8302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8290,
											"end": 8296,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 8286,
											"end": 8303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 8251,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8251,
											"end": 8317,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 8251,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8066,
											"end": 8355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8977,
											"end": 9161,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 8977,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9029,
											"end": 9106,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9026,
											"end": 9027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9123,
											"end": 9124,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9116,
											"end": 9131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9154,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9155,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9628,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 9166,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9205,
											"end": 9206,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9221,
											"end": 9410,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9266,
											"end": 9343,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9367,
											"end": 9371,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9357,
											"end": 9372,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9395,
											"end": 9399,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9392,
											"end": 9393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9221,
											"end": 9410,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 9221,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9507,
											"end": 9573,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9501,
											"end": 9574,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9498,
											"name": "PUSH",
											"source": 7,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9499,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9598,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9419,
											"end": 9598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9578,
											"end": 9596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 9578,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9612,
											"end": 9622,
											"name": "SDIV",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9622,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9166,
											"end": 9628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9925,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 9633,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 9739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9730,
											"end": 9739,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9747,
											"end": 9813,
											"name": "PUSH",
											"source": 7,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9741,
											"end": 9814,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9814,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9726,
											"end": 9815,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9838,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9723,
											"end": 9838,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9818,
											"end": 9836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9891,
											"end": 9892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9882,
											"end": 9889,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9877,
											"end": 9893,
											"name": "SDIV",
											"source": 7
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9871,
											"end": 9894,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 9868,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 9869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9857,
											"end": 9895,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9847,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9847,
											"end": 9919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 9899,
											"end": 9917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 11161,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 10977,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11029,
											"end": 11106,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11019,
											"end": 11107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11126,
											"end": 11130,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11116,
											"end": 11131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11155,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11166,
											"end": 11361,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 11166,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11205,
											"end": 11208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11229,
											"end": 11234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11223,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 11223,
											"end": 11326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 11306,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 11306,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11353,
											"end": 11354,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11342,
											"end": 11355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11342,
											"end": 11355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11166,
											"end": 11361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12318,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 12134,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12245,
											"end": 12254,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12243,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12232,
											"end": 12255,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12228,
											"end": 12260,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12277,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 12225,
											"end": 12277,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12270,
											"end": 12271,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12275,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12225,
											"end": 12277,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 12225,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12296,
											"end": 12312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12296,
											"end": 12312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12134,
											"end": 12318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12134,
											"end": 12318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13681,
											"end": 13958,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 13681,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13801,
											"end": 13803,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13789,
											"end": 13798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13780,
											"end": 13787,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13776,
											"end": 13799,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13772,
											"end": 13804,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13821,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13821,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 13769,
											"end": 13821,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13814,
											"end": 13815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13807,
											"end": 13819,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13769,
											"end": 13821,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 13769,
											"end": 13821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13849,
											"end": 13858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13843,
											"end": 13859,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13902,
											"end": 13907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13895,
											"end": 13908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13888,
											"end": 13909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13881,
											"end": 13886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13878,
											"end": 13910,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 13868,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 13868,
											"end": 13928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13924,
											"end": 13925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13921,
											"end": 13922,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13914,
											"end": 13926,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/OrderBookDex.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/IERC20.sol",
								"contracts/utils/ISupraOracle.sol",
								"contracts/utils/Ownable.sol",
								"contracts/utils/SafeERC20.sol",
								"contracts/utils/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(string,uint256)": "433ff288",
							"addTrustedTokens(address,string)": "e07a8665",
							"addTrustedTokensMulti(address[],string[])": "d7eb64f7",
							"owner()": "8da5cb5b",
							"queryAmountOut(string,string,uint256)": "80770b05",
							"ratio(string,string)": "3161a93a",
							"renounceOwnership()": "715018a6",
							"swap(string,string,uint256)": "a451f602",
							"tokenAddresses(string)": "935b13f6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pricefeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addTrustedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"}],\"name\":\"addTrustedTokensMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"fromTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"toTokenName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"queryAmountOut\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"numerator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"denominator\",\"type\":\"string\"}],\"name\":\"ratio\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_fromTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_toTokenName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tokenAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderBookDex.sol\":\"OrderBookDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/OrderBookDex.sol\":{\"keccak256\":\"0x981fe5c8930f6f5e68e34d0ed306228630c9cc1c08a8667d6f1c076d4733e1cf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f6d515b54d678e8d5182cc4a8e144ad83e1f41d2d8007648ba85e99b63f4b337\",\"dweb:/ipfs/QmeU6iRQvXsJsv1JqHeCNxVC4YiDPCUF18CRFphNShtvKW\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0x24aaa8312885fd156a9b311ec39f5fd68edb6703f4a21b0447a2522c90ae6c99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20cf21b6ac3ea8b8ffc3f506b549196e3ff2a56fa30511c5aed5bfef2c23cf38\",\"dweb:/ipfs/QmZKMvYTMDa7HkagdsyuzFW8XhdPyXWZGRTu3hA2UyzD6p\"]},\"contracts/utils/IERC20.sol\":{\"keccak256\":\"0xe0dd25fc0a978a40e8a07108cc43038512b56d173a63edae65070cd952468f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5fee1f2d6545064a1ff8ddf36dfc5130947d0b23ddb29b77f778fffb2650af\",\"dweb:/ipfs/QmdB9BnYtfTaKFDvvUUyB5hKpfT2X4SDis4mxQ2VyDqfT8\"]},\"contracts/utils/ISupraOracle.sol\":{\"keccak256\":\"0x453dbc25abc7466770c942d7ba94fea165032a4d0a726c4b794e204acd085efd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://14c362d4bb9e49acc10a5c4cc5448f595bb961de3ddf248a89522a31ab119473\",\"dweb:/ipfs/QmazDp8r69pzkvJYhSwRLjrpPS4GPBdovDSnujCwCiKcFz\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0xe447e234293e2fa3c867e7ab927c07629f5e412ee3037d48b0e0a945eb01e787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82202cee4abe4b0f4b9a9b7ec32b4cac6e4c60bca89a4aa3480a946f26f314a1\",\"dweb:/ipfs/QmVmZ2H1zvvzQGNZZxHXjznCj9aQnuVizNH85aixAw4fg3\"]},\"contracts/utils/SafeERC20.sol\":{\"keccak256\":\"0xb87506b1c1ec133f15b882539b0056275dbb385bc930b836e78c94df3f84c58f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14c7601fec0ae5a5b50d7ce05ae7f382eb0da759507dd9810f4006168e6b7602\",\"dweb:/ipfs/QmeJSYK53QX5E6r6znULc51nYJB6zoaXk4jrVDDTbeE2W4\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x1b1ab545dfde11a2697d8dce26ffc381765d7f073a32e0a4f8288b23a5e44dfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://313a87e1be8a19b3d5d3f5cd3de7ba4257b6fba9bb239d8b213a6bfb5718efe3\",\"dweb:/ipfs/QmYZgT4gXj15jA7XPwUexanaeBArmHRDBQg78rgpS2qBWG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 574,
								"contract": "contracts/OrderBookDex.sol:OrderBookDex",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 15,
								"contract": "contracts/OrderBookDex.sol:OrderBookDex",
								"label": "pricefeed",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ISupraOracle)566"
							},
							{
								"astId": 19,
								"contract": "contracts/OrderBookDex.sol:OrderBookDex",
								"label": "tokenAddresses",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(ISupraOracle)566": {
								"encoding": "inplace",
								"label": "contract ISupraOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x24aaa8312885fd156a9b311ec39f5fd68edb6703f4a21b0447a2522c90ae6c99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20cf21b6ac3ea8b8ffc3f506b549196e3ff2a56fa30511c5aed5bfef2c23cf38\",\"dweb:/ipfs/QmZKMvYTMDa7HkagdsyuzFW8XhdPyXWZGRTu3hA2UyzD6p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/IERC20.sol\":{\"keccak256\":\"0xe0dd25fc0a978a40e8a07108cc43038512b56d173a63edae65070cd952468f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5fee1f2d6545064a1ff8ddf36dfc5130947d0b23ddb29b77f778fffb2650af\",\"dweb:/ipfs/QmdB9BnYtfTaKFDvvUUyB5hKpfT2X4SDis4mxQ2VyDqfT8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/ISupraOracle.sol": {
				"ISupraOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "marketPair",
									"type": "string"
								}
							],
							"name": "checkPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "price",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkPrice(string)": "abc4544e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketPair\",\"type\":\"string\"}],\"name\":\"checkPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/ISupraOracle.sol\":\"ISupraOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/ISupraOracle.sol\":{\"keccak256\":\"0x453dbc25abc7466770c942d7ba94fea165032a4d0a726c4b794e204acd085efd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://14c362d4bb9e49acc10a5c4cc5448f595bb961de3ddf248a89522a31ab119473\",\"dweb:/ipfs/QmazDp8r69pzkvJYhSwRLjrpPS4GPBdovDSnujCwCiKcFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0x24aaa8312885fd156a9b311ec39f5fd68edb6703f4a21b0447a2522c90ae6c99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20cf21b6ac3ea8b8ffc3f506b549196e3ff2a56fa30511c5aed5bfef2c23cf38\",\"dweb:/ipfs/QmZKMvYTMDa7HkagdsyuzFW8XhdPyXWZGRTu3hA2UyzD6p\"]},\"contracts/utils/Ownable.sol\":{\"keccak256\":\"0xe447e234293e2fa3c867e7ab927c07629f5e412ee3037d48b0e0a945eb01e787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82202cee4abe4b0f4b9a9b7ec32b4cac6e4c60bca89a4aa3480a946f26f314a1\",\"dweb:/ipfs/QmVmZ2H1zvvzQGNZZxHXjznCj9aQnuVizNH85aixAw4fg3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 574,
								"contract": "contracts/utils/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/SafeERC20.sol\":639:3189  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/SafeERC20.sol\":639:3189  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048c043ad3791e84497e231ce0573fc587318afeae6e833ce59b471e0607638cf64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048c043ad3791e84497e231ce0573fc587318afeae6e833ce59b471e0607638cf64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xC0 NUMBER 0xAD CALLDATACOPY SWAP2 0xE8 DIFFICULTY SWAP8 0xE2 BALANCE 0xCE SDIV PUSH20 0xFC587318AFEAE6E833CE59B471E0607638CF6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "639:2550:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;639:2550:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048c043ad3791e84497e231ce0573fc587318afeae6e833ce59b471e0607638cf64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xC0 NUMBER 0xAD CALLDATACOPY SWAP2 0xE8 DIFFICULTY SWAP8 0xE2 BALANCE 0xCE SDIV PUSH20 0xFC587318AFEAE6E833CE59B471E0607638CF6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "639:2550:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 3189,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048c043ad3791e84497e231ce0573fc587318afeae6e833ce59b471e0607638cf64736f6c63430008110033",
									".code": [
										{
											"begin": 639,
											"end": 3189,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 639,
											"end": 3189,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/OrderBookDex.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/IERC20.sol",
								"contracts/utils/ISupraOracle.sol",
								"contracts/utils/Ownable.sol",
								"contracts/utils/SafeERC20.sol",
								"contracts/utils/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/IERC20.sol\":{\"keccak256\":\"0xe0dd25fc0a978a40e8a07108cc43038512b56d173a63edae65070cd952468f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf5fee1f2d6545064a1ff8ddf36dfc5130947d0b23ddb29b77f778fffb2650af\",\"dweb:/ipfs/QmdB9BnYtfTaKFDvvUUyB5hKpfT2X4SDis4mxQ2VyDqfT8\"]},\"contracts/utils/SafeERC20.sol\":{\"keccak256\":\"0xb87506b1c1ec133f15b882539b0056275dbb385bc930b836e78c94df3f84c58f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14c7601fec0ae5a5b50d7ce05ae7f382eb0da759507dd9810f4006168e6b7602\",\"dweb:/ipfs/QmeJSYK53QX5E6r6znULc51nYJB6zoaXk4jrVDDTbeE2W4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b966eec826536472f8be71e30ad0f9aa323adf55fec7e274b6340aa4faa9c2d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b966eec826536472f8be71e30ad0f9aa323adf55fec7e274b6340aa4faa9c2d64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 SWAP7 PUSH15 0xEC826536472F8BE71E30AD0F9AA323 0xAD CREATE2 0x5F 0xEC PUSH31 0x274B6340AA4FAA9C2D64736F6C634300081100330000000000000000000000 ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b966eec826536472f8be71e30ad0f9aa323adf55fec7e274b6340aa4faa9c2d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 SWAP7 PUSH15 0xEC826536472F8BE71E30AD0F9AA323 0xAD CREATE2 0x5F 0xEC PUSH31 0x274B6340AA4FAA9C2D64736F6C634300081100330000000000000000000000 ",
							"sourceMap": "482:6210:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b966eec826536472f8be71e30ad0f9aa323adf55fec7e274b6340aa4faa9c2d64736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/OrderBookDex.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/IERC20.sol",
								"contracts/utils/ISupraOracle.sol",
								"contracts/utils/Ownable.sol",
								"contracts/utils/SafeERC20.sol",
								"contracts/utils/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x1b1ab545dfde11a2697d8dce26ffc381765d7f073a32e0a4f8288b23a5e44dfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://313a87e1be8a19b3d5d3f5cd3de7ba4257b6fba9bb239d8b213a6bfb5718efe3\",\"dweb:/ipfs/QmYZgT4gXj15jA7XPwUexanaeBArmHRDBQg78rgpS2qBWG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/OrderBookDex.sol": {
				"ast": {
					"absolutePath": "contracts/OrderBookDex.sol",
					"exportedSymbols": {
						"Context": [
							470
						],
						"IERC20": [
							554
						],
						"ISupraOracle": [
							566
						],
						"OrderBookDex": [
							448
						],
						"Ownable": [
							679
						],
						"SafeERC20": [
							821
						],
						"SafeMath": [
							1133
						]
					},
					"id": 449,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "38:24:0"
						},
						{
							"absolutePath": "contracts/utils/ISupraOracle.sol",
							"file": "./utils/ISupraOracle.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 567,
							"src": "64:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/IERC20.sol",
							"file": "./utils/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 555,
							"src": "99:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeERC20.sol",
							"file": "./utils/SafeERC20.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 822,
							"src": "128:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeMath.sol",
							"file": "./utils/SafeMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 1134,
							"src": "160:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Ownable.sol",
							"file": "./utils/Ownable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 680,
							"src": "191:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Ownable",
										"nameLocations": [
											"247:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 679,
										"src": "247:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:0"
								}
							],
							"canonicalName": "OrderBookDex",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								679,
								470
							],
							"name": "OrderBookDex",
							"nameLocation": "231:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 12,
									"libraryName": {
										"id": 9,
										"name": "SafeERC20",
										"nameLocations": [
											"267:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "267:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "261:27:0",
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "IERC20",
											"nameLocations": [
												"281:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 554,
											"src": "281:6:0"
										},
										"referencedDeclaration": 554,
										"src": "281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$554",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "pricefeed",
									"nameLocation": "307:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "294:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISupraOracle_$566",
										"typeString": "contract ISupraOracle"
									},
									"typeName": {
										"id": 14,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 13,
											"name": "ISupraOracle",
											"nameLocations": [
												"294:12:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 566,
											"src": "294:12:0"
										},
										"referencedDeclaration": 566,
										"src": "294:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISupraOracle_$566",
											"typeString": "contract ISupraOracle"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "935b13f6",
									"id": 19,
									"mutability": "mutable",
									"name": "tokenAddresses",
									"nameLocation": "356:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "322:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "330:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "322:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueType": {
											"id": 17,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "340:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "408:53:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 24,
														"name": "pricefeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISupraOracle_$566",
															"typeString": "contract ISupraOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 26,
																"name": "_pricefeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "443:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 25,
															"name": "ISupraOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "430:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISupraOracle_$566_$",
																"typeString": "type(contract ISupraOracle)"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "430:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISupraOracle_$566",
															"typeString": "contract ISupraOracle"
														}
													},
													"src": "418:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISupraOracle_$566",
														"typeString": "contract ISupraOracle"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "418:36:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "_pricefeed",
												"nameLocation": "397:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "389:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:20:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:0:0"
									},
									"scope": 448,
									"src": "377:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "591:165:0",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "pairName",
														"nameLocation": "615:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "601:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 40,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"arguments": [
														{
															"id": 45,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "640:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "5f",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "651:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
																"typeString": "literal_string \"_\""
															},
															"value": "_"
														},
														{
															"id": 47,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "656:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_cd5edcba1904ce1b09e94c8a2d2a85375599856ca21c793571193054498b51d7",
																"typeString": "literal_string \"_\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "626:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 42,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "626:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "633:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "626:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "601:67:0"
											},
											{
												"assignments": [
													51,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "686:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "679:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 50,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 56,
												"initialValue": {
													"arguments": [
														{
															"id": 54,
															"name": "pairName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "718:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 52,
															"name": "pricefeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "697:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISupraOracle_$566",
																"typeString": "contract ISupraOracle"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "707:10:0",
														"memberName": "checkPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 565,
														"src": "697:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_int256_$_t_uint256_$",
															"typeString": "function (string memory) view external returns (int256,uint256)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "697:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "678:49:0"
											},
											{
												"expression": {
													"id": 57,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 51,
													"src": "744:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 39,
												"id": 58,
												"nodeType": "Return",
												"src": "737:12:0"
											}
										]
									},
									"functionSelector": "3161a93a",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ratio",
									"nameLocation": "476:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "482:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "521:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "507:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "507:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:52:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "579:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 37,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "579:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:8:0"
									},
									"scope": 448,
									"src": "467:289:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "918:885:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 74,
																		"name": "fromTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "972:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 72,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "955:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "959:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "955:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "955:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 71,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "945:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "945:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "75736474",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1030:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																			"typeString": "literal_string \"usdt\""
																		},
																		"value": "usdt"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																			"typeString": "literal_string \"usdt\""
																		}
																	],
																	"expression": {
																		"id": 78,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1013:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1017:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1013:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1013:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 77,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1003:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1003:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "945:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 114,
												"nodeType": "IfStatement",
												"src": "928:336:0",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "1049:215:0",
													"statements": [
														{
															"assignments": [
																85
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 85,
																	"mutability": "mutable",
																	"name": "priceFlip",
																	"nameLocation": "1070:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 113,
																	"src": "1063:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 84,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1063:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 90,
															"initialValue": {
																"arguments": [
																	{
																		"id": 87,
																		"name": "toTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1088:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 88,
																		"name": "fromTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1101:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 86,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1082:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_int256_$",
																		"typeString": "function (string memory,string memory) view returns (int256)"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1082:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1063:52:0"
														},
														{
															"assignments": [
																92
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 92,
																	"mutability": "mutable",
																	"name": "tokenAmountToUSDT",
																	"nameLocation": "1136:17:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 113,
																	"src": "1129:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 91,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1129:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 105,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 95,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1163:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1156:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 93,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1156:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1156:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"hexValue": "31653138",
																						"id": 99,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1182:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"id": 98,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1175:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 97,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1175:6:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1175:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 101,
																				"name": "priceFlip",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1190:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1175:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 103,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1174:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1156:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1129:71:0"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 106,
																				"name": "tokenAmountToUSDT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "1222:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "316538",
																				"id": 107,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1242:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100000000_by_1",
																					"typeString": "int_const 100000000"
																				},
																				"value": "1e8"
																			},
																			"src": "1222:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 109,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1221:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1249:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1221:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 70,
															"id": 112,
															"nodeType": "Return",
															"src": "1214:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "75736474",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1318:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																			"typeString": "literal_string \"usdt\""
																		},
																		"value": "usdt"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																			"typeString": "literal_string \"usdt\""
																		}
																	],
																	"expression": {
																		"id": 116,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1301:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1305:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1301:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 115,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1291:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1291:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 124,
																		"name": "toTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1369:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 122,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "1352:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1356:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "1352:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1352:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 121,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "1342:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1342:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1291:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 150,
												"nodeType": "IfStatement",
												"src": "1274:306:0",
												"trueBody": {
													"id": 149,
													"nodeType": "Block",
													"src": "1393:187:0",
													"statements": [
														{
															"assignments": [
																129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 129,
																	"mutability": "mutable",
																	"name": "price",
																	"nameLocation": "1414:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1407:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 128,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1407:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 134,
															"initialValue": {
																"arguments": [
																	{
																		"id": 131,
																		"name": "fromTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1428:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 132,
																		"name": "toTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1443:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 130,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_int256_$",
																		"typeString": "function (string memory,string memory) view returns (int256)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1407:48:0"
														},
														{
															"assignments": [
																136
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 136,
																	"mutability": "mutable",
																	"name": "tokenAmountFromUSDT",
																	"nameLocation": "1476:19:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 149,
																	"src": "1469:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 135,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1469:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 144,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 139,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1505:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1498:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 137,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1498:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1498:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"id": 141,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1517:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 142,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1498:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1469:54:0"
														},
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 145,
																	"name": "tokenAmountFromUSDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "1544:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "316538",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1566:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000_by_1",
																		"typeString": "int_const 100000000"
																	},
																	"value": "1e8"
																},
																"src": "1544:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"functionReturnParameters": 70,
															"id": 148,
															"nodeType": "Return",
															"src": "1537:32:0"
														}
													]
												}
											},
											{
												"assignments": [
													152
												],
												"declarations": [
													{
														"constant": false,
														"id": 152,
														"mutability": "mutable",
														"name": "price1",
														"nameLocation": "1597:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "1590:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 151,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1590:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"arguments": [
														{
															"id": 154,
															"name": "fromTokenName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1612:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "75736474",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																"typeString": "literal_string \"usdt\""
															},
															"value": "usdt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																"typeString": "literal_string \"usdt\""
															}
														],
														"id": 153,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1606:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_int256_$",
															"typeString": "function (string memory,string memory) view returns (int256)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1606:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1590:44:0"
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "price2",
														"nameLocation": "1651:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "1644:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 158,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1644:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"arguments": [
														{
															"id": 161,
															"name": "toTokenName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1666:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "75736474",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																"typeString": "literal_string \"usdt\""
															},
															"value": "usdt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_stringliteral_ca41b004d4133d516f2302a6a68d02d659739ecd39c702e354f6b4f4df7b8787",
																"typeString": "literal_string \"usdt\""
															}
														],
														"id": 160,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1660:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_int256_$",
															"typeString": "function (string memory,string memory) view returns (int256)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1644:42:0"
											},
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "1703:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 184,
														"src": "1696:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 165,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 169,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 167,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "1717:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1717:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 171,
																				"name": "price1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 152,
																				"src": "1737:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1746:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "1737:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1736:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 175,
																	"name": "price2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "1754:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1736:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 177,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1735:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1717:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1696:65:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "1778:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1792:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "1778:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 70,
												"id": 183,
												"nodeType": "Return",
												"src": "1771:25:0"
											}
										]
									},
									"functionSelector": "80770b05",
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "queryAmountOut",
									"nameLocation": "771:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "fromTokenName",
												"nameLocation": "809:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "795:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 61,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "795:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "toTokenName",
												"nameLocation": "846:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "832:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 63,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "832:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "867:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:103:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "910:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 68,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:8:0"
									},
									"scope": 448,
									"src": "762:1041:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "1935:810:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 195,
																				"name": "tokenAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "1967:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																					"typeString": "mapping(string memory => address)"
																				}
																			},
																			"id": 197,
																			"indexExpression": {
																				"id": 196,
																				"name": "_fromTokenName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 187,
																				"src": "1982:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1967:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2009:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2001:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 198,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2001:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2001:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1967:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 203,
																				"name": "tokenAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 19,
																				"src": "2031:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																					"typeString": "mapping(string memory => address)"
																				}
																			},
																			"id": 205,
																			"indexExpression": {
																				"id": 204,
																				"name": "_toTokenName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 189,
																				"src": "2046:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2031:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2071:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2063:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 206,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2063:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2063:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2031:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1967:106:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 212,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1966:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206e6f7420617661696c61626c6520666f722073776170",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2088:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9",
																"typeString": "literal_string \"Tokens not available for swap\""
															},
															"value": "Tokens not available for swap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9",
																"typeString": "literal_string \"Tokens not available for swap\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:184:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1945:184:0"
											},
											{
												"assignments": [
													217
												],
												"declarations": [
													{
														"constant": false,
														"id": 217,
														"mutability": "mutable",
														"name": "returnAmount",
														"nameLocation": "2147:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 277,
														"src": "2139:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 221,
																	"name": "_fromTokenName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2198:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 222,
																	"name": "_toTokenName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2214:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 223,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 220,
																"name": "queryAmountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "2183:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int256_$",
																	"typeString": "function (string memory,string memory,uint256) view returns (int256)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2183:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2139:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 228,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2264:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2279:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2264:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066656564",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2282:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															},
															"value": "Invalid price feed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbf071520f0a95e05bb16da9ebcd49bf0ac91e963647b14497245101e3db79a3",
																"typeString": "literal_string \"Invalid price feed\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "2256:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 235,
																"name": "returnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "2334:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 237,
																		"name": "_toTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "2362:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 236,
																	"name": "_getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "2350:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (string memory) view returns (uint256)"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2350:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2334:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74204c6971756964697479",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2389:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8",
																"typeString": "literal_string \"Insufficient Liquidity\""
															},
															"value": "Insufficient Liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8",
																"typeString": "literal_string \"Insufficient Liquidity\""
															}
														],
														"id": 234,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2313:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 246,
																		"name": "tokenAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "2472:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																			"typeString": "mapping(string memory => address)"
																		}
																	},
																	"id": 248,
																	"indexExpression": {
																		"id": 247,
																		"name": "_fromTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2487:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2472:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2464:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2464:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2464:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 252,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2525:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2529:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2517:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 250,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2517:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2517:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 257,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2558:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OrderBookDex_$448",
																		"typeString": "contract OrderBookDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OrderBookDex_$448",
																		"typeString": "contract OrderBookDex"
																	}
																],
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 255,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2550:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2433:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2433:161:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2433:161:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 265,
																		"name": "tokenAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "2639:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																			"typeString": "mapping(string memory => address)"
																		}
																	},
																	"id": 267,
																	"indexExpression": {
																		"id": 266,
																		"name": "_toTokenName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "2654:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2639:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2631:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 263,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2631:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2631:37:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 271,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2690:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2694:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2690:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2682:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2682:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2682:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "returnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2604:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2604:133:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2604:133:0"
											}
										]
									},
									"functionSelector": "a451f602",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1818:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_fromTokenName",
												"nameLocation": "1846:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1832:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1832:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_toTokenName",
												"nameLocation": "1884:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1870:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1870:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1906:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:105:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:0:0"
									},
									"scope": 448,
									"src": "1809:936:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2818:291:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 286,
																	"name": "tokenAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2849:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																		"typeString": "mapping(string memory => address)"
																	}
																},
																"id": 288,
																"indexExpression": {
																	"id": 287,
																	"name": "_name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "2864:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2849:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2882:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2874:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 289,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2874:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2874:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2849:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206e6f7420617661696c61626c6520666f722073776170",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9",
																"typeString": "literal_string \"Tokens not available for swap\""
															},
															"value": "Tokens not available for swap"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce0c84109464d13cb3617d42c7e83e5199433d8afb022654d7cf2bf8ceeca6a9",
																"typeString": "literal_string \"Tokens not available for swap\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2828:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"id": 300,
																		"name": "tokenAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "2989:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																			"typeString": "mapping(string memory => address)"
																		}
																	},
																	"id": 302,
																	"indexExpression": {
																		"id": 301,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "3004:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2989:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2981:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2981:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2981:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 306,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3033:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3037:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3033:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 304,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3025:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3025:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3066:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OrderBookDex_$448",
																		"typeString": "contract OrderBookDex"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OrderBookDex_$448",
																		"typeString": "contract OrderBookDex"
																	}
																],
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3058:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3058:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3058:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "3085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2950:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2950:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "2950:152:0"
											}
										]
									},
									"functionSelector": "433ff288",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2760:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2787:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2773:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2773:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2802:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2794:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2772:38:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2818:0:0"
									},
									"scope": 448,
									"src": "2751:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3215:47:0",
										"statements": [
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 326,
															"name": "tokenAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "3225:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 328,
														"indexExpression": {
															"id": 327,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "3240:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3225:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 329,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "3249:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3225:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "3225:30:0"
											}
										]
									},
									"functionSelector": "e07a8665",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 323,
												"name": "onlyOwner",
												"nameLocations": [
													"3201:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 598,
												"src": "3201:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3201:9:0"
										}
									],
									"name": "addTrustedTokens",
									"nameLocation": "3124:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "3171:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3157:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:37:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:0"
									},
									"scope": 448,
									"src": "3115:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "3388:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 345,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "3406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3414:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3406:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 347,
																	"name": "_names",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "3424:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																		"typeString": "string memory[] memory"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3431:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3424:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3406:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204e616d65732f546f6b656e73",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3439:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2286e863fd3779b7a63f86a5daedb3046d372c0fc20d5d22ebceabb566152232",
																"typeString": "literal_string \"Invalid Names/Tokens\""
															},
															"value": "Invalid Names/Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2286e863fd3779b7a63f86a5daedb3046d372c0fc20d5d22ebceabb566152232",
																"typeString": "literal_string \"Invalid Names/Tokens\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3398:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "3398:64:0"
											},
											{
												"body": {
													"id": 374,
													"nodeType": "Block",
													"src": "3518:63:0",
													"statements": [
														{
															"expression": {
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 364,
																		"name": "tokenAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "3532:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																			"typeString": "mapping(string memory => address)"
																		}
																	},
																	"id": 368,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 365,
																			"name": "_names",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "3547:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 367,
																		"indexExpression": {
																			"id": 366,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "3554:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3547:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3532:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 369,
																		"name": "_tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "3560:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 371,
																	"indexExpression": {
																		"id": 370,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "3568:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3560:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3532:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 373,
															"nodeType": "ExpressionStatement",
															"src": "3532:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "3493:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 358,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "3497:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3505:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3497:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3493:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 375,
												"initializationExpression": {
													"assignments": [
														354
													],
													"declarations": [
														{
															"constant": false,
															"id": 354,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3486:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 375,
															"src": "3478:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 353,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3478:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 356,
													"initialValue": {
														"hexValue": "30",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3490:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3478:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3513:3:0",
														"subExpression": {
															"id": 361,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "3513:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 363,
													"nodeType": "ExpressionStatement",
													"src": "3513:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3473:108:0"
											}
										]
									},
									"functionSelector": "d7eb64f7",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyOwner",
												"nameLocations": [
													"3378:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 598,
												"src": "3378:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3378:9:0"
										}
									],
									"name": "addTrustedTokensMulti",
									"nameLocation": "3277:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "3325:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3308:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 334,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3308:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 335,
													"nodeType": "ArrayTypeName",
													"src": "3308:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "_names",
												"nameLocation": "3358:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3342:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3342:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3342:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:72:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3388:0:0"
									},
									"scope": 448,
									"src": "3268:319:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3722:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 394,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "3771:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3763:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3763:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 398,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "3786:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3778:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3778:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3778:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "3791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "3739:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 388,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3732:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3732:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "3732:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3732:65:0"
											}
										]
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "3602:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3702:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3694:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:94:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:0"
									},
									"scope": 448,
									"src": "3593:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "3916:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "3962:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3954:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3954:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 414,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "3933:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 413,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3926:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$554_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3926:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3940:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 707,
														"src": "3926:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "3926:47:0"
											}
										]
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "3822:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3853:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3876:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3868:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3896:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "3888:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:72:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:0:0"
									},
									"scope": 448,
									"src": "3813:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "4101:86:0",
										"statements": [
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "4111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 441,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4174:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OrderBookDex_$448",
																			"typeString": "contract OrderBookDex"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OrderBookDex_$448",
																			"typeString": "contract OrderBookDex"
																		}
																	],
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4166:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 439,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4166:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4166:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 434,
																			"name": "tokenAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "4128:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																				"typeString": "mapping(string memory => address)"
																			}
																		},
																		"id": 436,
																		"indexExpression": {
																			"id": 435,
																			"name": "_tokenName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "4143:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4128:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4121:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$554_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4121:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$554",
																	"typeString": "contract IERC20"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4156:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 515,
															"src": "4121:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4121:59:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4111:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4111:69:0"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBalance",
									"nameLocation": "3995:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "_tokenName",
												"nameLocation": "4021:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "4007:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4007:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:26:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "4080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:17:0"
									},
									"scope": 448,
									"src": "3986:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "222:3967:0",
							"usedErrors": []
						}
					],
					"src": "38:4152:0"
				},
				"id": 0
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							470
						]
					},
					"id": 471,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "113:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 470,
							"linearizedBaseContracts": [
								470
							],
							"name": "Context",
							"nameLocation": "628:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "704:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 456,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "721:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "725:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "721:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 455,
												"id": 458,
												"nodeType": "Return",
												"src": "714:17:1"
											}
										]
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:1"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "695:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:1"
									},
									"scope": 470,
									"src": "642:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "811:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 465,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "828:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "832:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "828:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 464,
												"id": 467,
												"nodeType": "Return",
												"src": "821:15:1"
											}
										]
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "753:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:2:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "795:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "795:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:16:1"
									},
									"scope": 470,
									"src": "744:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 471,
							"src": "610:235:1",
							"usedErrors": []
						}
					],
					"src": "88:757:1"
				},
				"id": 1
			},
			"contracts/utils/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/utils/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							554
						]
					},
					"id": 555,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 472,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 554,
							"linearizedBaseContracts": [
								554
							],
							"name": "IERC20",
							"nameLocation": "141:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 480,
									"name": "Approval",
									"nameLocation": "160:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "185:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "169:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "208:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "192:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "225:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "217:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:63:2"
									},
									"src": "154:78:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 488,
									"name": "Transfer",
									"nameLocation": "243:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "268:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "252:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "290:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "274:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "302:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "294:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:57:2"
									},
									"src": "237:72:2"
								},
								{
									"functionSelector": "06fdde03",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "324:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "328:2:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "354:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:15:2"
									},
									"scope": 554,
									"src": "315:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "384:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 554,
									"src": "375:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "446:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:2:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "480:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 500,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "480:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:7:2"
									},
									"scope": 554,
									"src": "437:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "502:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:9:2"
									},
									"scope": 554,
									"src": "493:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "563:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "581:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "573:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:15:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "611:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:9:2"
									},
									"scope": 554,
									"src": "554:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "635:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "645:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "668:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "660:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:32:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "700:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:9:2"
									},
									"scope": 554,
									"src": "626:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "724:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "732:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:32:2"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "782:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "782:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:6:2"
									},
									"scope": 554,
									"src": "715:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "803:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:27:2"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "857:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 539,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:2"
									},
									"scope": 554,
									"src": "794:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "878:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "908:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "900:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "930:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "922:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "950:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "942:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:71:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "980:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:6:2"
									},
									"scope": 554,
									"src": "869:117:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 555,
							"src": "131:857:2",
							"usedErrors": []
						}
					],
					"src": "106:883:2"
				},
				"id": 2
			},
			"contracts/utils/ISupraOracle.sol": {
				"ast": {
					"absolutePath": "contracts/utils/ISupraOracle.sol",
					"exportedSymbols": {
						"ISupraOracle": [
							566
						]
					},
					"id": 567,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 556,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISupraOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 566,
							"linearizedBaseContracts": [
								566
							],
							"name": "ISupraOracle",
							"nameLocation": "75:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "abc4544e",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkPrice",
									"nameLocation": "104:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "marketPair",
												"nameLocation": "129:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "115:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "115:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:26:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "171:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "164:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 560,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "164:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "186:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "178:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:33:3"
									},
									"scope": 566,
									"src": "95:102:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 567,
							"src": "65:135:3",
							"usedErrors": []
						}
					],
					"src": "39:161:3"
				},
				"id": 3
			},
			"contracts/utils/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							470
						],
						"Ownable": [
							679
						]
					},
					"id": 680,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:4"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 680,
							"sourceUnit": 471,
							"src": "127:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 571,
										"name": "Context",
										"nameLocations": [
											"676:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 470,
										"src": "676:7:4"
									},
									"id": 572,
									"nodeType": "InheritanceSpecifier",
									"src": "676:7:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "152:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 679,
							"linearizedBaseContracts": [
								679,
								470
							],
							"name": "Ownable",
							"nameLocation": "665:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 574,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "706:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 679,
									"src": "690:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 573,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "690:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 580,
									"name": "OwnershipTransferred",
									"nameLocation": "725:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "762:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "746:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "793:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "777:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:57:4"
									},
									"src": "719:84:4"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "919:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "948:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 584,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "929:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "929:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "929:32:4"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "809:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 590,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "919:0:4"
									},
									"scope": 679,
									"src": "905:63:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1077:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 593,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "1087:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1087:13:4"
											},
											{
												"id": 596,
												"nodeType": "PlaceholderStatement",
												"src": "1110:1:4"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "974:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 598,
									"name": "onlyOwner",
									"nameLocation": "1065:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:4"
									},
									"src": "1056:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "1249:30:4",
										"statements": [
											{
												"expression": {
													"id": 604,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "1266:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 603,
												"id": 605,
												"nodeType": "Return",
												"src": "1259:13:4"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1124:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1203:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1240:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:9:4"
									},
									"scope": 679,
									"src": "1194:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "1397:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 612,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "1415:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1415:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 614,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "1426:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1426:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1415:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1440:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1407:68:4"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "1285:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1361:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:2:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:0:4"
									},
									"scope": 679,
									"src": "1352:130:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1878:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 627,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "1888:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:4"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "1488:331:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 624,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 598,
												"src": "1868:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:4"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:4"
									},
									"scope": 679,
									"src": "1824:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "2144:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2162:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 645,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 654,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "2256:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 653,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2237:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:4"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 598,
												"src": "2134:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2101:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:4"
									},
									"scope": 679,
									"src": "2074:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "2489:124:4",
										"statements": [
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "2499:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 664,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"id": 666,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 574,
													"src": "2518:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:4"
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "2534:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 669,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "2543:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2587:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2597:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 672,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2566:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "EmitStatement",
												"src": "2561:45:4"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2454:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:4"
									},
									"scope": 679,
									"src": "2426:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 680,
							"src": "647:1968:4",
							"usedErrors": []
						}
					],
					"src": "102:2513:4"
				},
				"id": 4
			},
			"contracts/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							554
						],
						"SafeERC20": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 681,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"id": 682,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "123:33:5"
						},
						{
							"absolutePath": "contracts/utils/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 555,
							"src": "158:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 684,
								"nodeType": "StructuredDocumentation",
								"src": "182:456:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "SafeERC20",
							"nameLocation": "647:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "765:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "795:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 698,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "825:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$554",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "831:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 542,
																		"src": "825:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "840:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "825:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 701,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "850:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "854:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 696,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "802:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "806:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "802:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "802:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 694,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "775:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "775:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "775:86:5"
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "672:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$554",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "IERC20",
														"nameLocations": [
															"694:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 554,
														"src": "694:6:5"
													},
													"referencedDeclaration": 554,
													"src": "694:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$554",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "724:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "716:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "744:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "736:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "684:71:5"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:0:5"
									},
									"scope": 821,
									"src": "663:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "1002:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 720,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "1032:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 723,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "1062:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$554",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1068:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 553,
																		"src": "1062:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1081:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1062:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "1091:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "1097:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1101:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 721,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1039:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1043:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1039:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1039:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 719,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1012:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "1012:96:5"
											}
										]
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "883:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "916:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "909:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$554",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"909:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 554,
														"src": "909:6:5"
													},
													"referencedDeclaration": 554,
													"src": "909:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$554",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "939:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "931:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "961:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "953:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "981:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "973:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:93:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1002:0:5"
									},
									"scope": 821,
									"src": "874:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "1227:550:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 744,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "1529:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1538:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1529:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 747,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1528:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 752,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1569:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$821",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$821",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1561:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 750,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1561:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1561:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 754,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "1576:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "1545:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$554",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1551:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 524,
																				"src": "1545:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1545:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1588:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1545:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 758,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1544:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1528:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1604:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1507:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1507:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "1507:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "1700:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 767,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "1730:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$554",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1736:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 533,
																		"src": "1730:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1744:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1730:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 770,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "1754:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 771,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "1763:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 765,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1707:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1711:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1707:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1707:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$554",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 763,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1680:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "1680:90:5"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1130:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1158:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1151:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$554",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "IERC20",
														"nameLocations": [
															"1151:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 554,
														"src": "1151:6:5"
													},
													"referencedDeclaration": 554,
													"src": "1151:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$554",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1181:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1173:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1206:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1198:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:76:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:5"
									},
									"scope": 821,
									"src": "1121:656:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "2230:957:5",
										"statements": [
											{
												"assignments": [
													786,
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 786,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2814:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "2809:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 785,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2809:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "2836:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "2823:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 787,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2823:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"id": 794,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "2870:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 791,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2858:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$554",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$554",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2850:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2850:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2850:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2865:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2850:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2850:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2808:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2893:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "2885:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 802,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2952:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2963:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2952:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2972:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2952:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "2948:233:5",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "2975:206:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 809,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "3104:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 811,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3117:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 810,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3117:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 812,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3116:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 807,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3093:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3097:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3093:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3093:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3125:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 806,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3085:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3085:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 816,
															"nodeType": "ExpressionStatement",
															"src": "3085:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "1783:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "2169:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2196:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2189:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$554",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 778,
														"name": "IERC20",
														"nameLocations": [
															"2189:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 554,
														"src": "2189:6:5"
													},
													"referencedDeclaration": 554,
													"src": "2189:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$554",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2216:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2203:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 781,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2203:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:33:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2230:0:5"
									},
									"scope": 821,
									"src": "2160:1027:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 822,
							"src": "639:2550:5",
							"usedErrors": []
						}
					],
					"src": "99:3091:5"
				},
				"id": 5
			},
			"contracts/utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1133
						]
					},
					"id": 1134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1133,
							"linearizedBaseContracts": [
								1133
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "717:140:6",
										"statements": [
											{
												"id": 854,
												"nodeType": "UncheckedBlock",
												"src": "727:124:6",
												"statements": [
													{
														"assignments": [
															837
														],
														"declarations": [
															{
																"constant": false,
																"id": 837,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 854,
																"src": "751:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 836,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 841,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 839,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "767:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 843,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "790:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 849,
														"nodeType": "IfStatement",
														"src": "782:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 848,
															"nodeType": "Return",
															"src": "793:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 851,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "838:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 852,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 853,
														"nodeType": "Return",
														"src": "824:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "702:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "708:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:6"
									},
									"scope": 1133,
									"src": "641:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "1078:113:6",
										"statements": [
											{
												"id": 882,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "1116:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "1120:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 875,
														"nodeType": "IfStatement",
														"src": "1112:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 873,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 867,
															"id": 874,
															"nodeType": "Return",
															"src": "1123:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 877,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "1168:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 878,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "1172:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 880,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 867,
														"id": 881,
														"nodeType": "Return",
														"src": "1154:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:6",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1018:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1029:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1063:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:6"
									},
									"scope": 1133,
									"src": "1002:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "1415:417:6",
										"statements": [
											{
												"id": 924,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1683:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "1679:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 901,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 895,
															"id": 902,
															"nodeType": "Return",
															"src": "1691:16:6"
														}
													},
													{
														"assignments": [
															905
														],
														"declarations": [
															{
																"constant": false,
																"id": 905,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 924,
																"src": "1721:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 904,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 909,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "1733:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 907,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "1737:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 910,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1756:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 911,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "1760:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 913,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "1765:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 919,
														"nodeType": "IfStatement",
														"src": "1752:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 917,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 895,
															"id": 918,
															"nodeType": "Return",
															"src": "1768:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 921,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1813:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 922,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 895,
														"id": 923,
														"nodeType": "Return",
														"src": "1799:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1355:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1366:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:6"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1400:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1406:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:6"
									},
									"scope": 1133,
									"src": "1339:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "2057:114:6",
										"statements": [
											{
												"id": 952,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "2095:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 945,
														"nodeType": "IfStatement",
														"src": "2091:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 937,
															"id": 944,
															"nodeType": "Return",
															"src": "2103:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 947,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "2148:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 948,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "2152:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 950,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 937,
														"id": 951,
														"nodeType": "Return",
														"src": "2134:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "1997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2008:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:6"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2042:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2048:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:6"
									},
									"scope": 1133,
									"src": "1981:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2406:114:6",
										"statements": [
											{
												"id": 980,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "2444:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 973,
														"nodeType": "IfStatement",
														"src": "2440:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 965,
															"id": 972,
															"nodeType": "Return",
															"src": "2452:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 975,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "2497:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 976,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "2501:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 978,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 965,
														"id": 979,
														"nodeType": "Return",
														"src": "2483:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2346:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2357:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2391:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 961,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2397:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:6"
									},
									"scope": 1133,
									"src": "2330:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "2822:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2839:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2843:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "2832:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2779:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2813:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:6"
									},
									"scope": 1133,
									"src": "2755:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "3189:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1007,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "3206:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1008,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "3210:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1010,
												"nodeType": "Return",
												"src": "3199:12:6"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3146:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:6"
									},
									"scope": 1133,
									"src": "3122:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "3532:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1022,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1023,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "3553:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1025,
												"nodeType": "Return",
												"src": "3542:12:6"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "3478:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "3489:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:6"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "3523:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:6"
									},
									"scope": 1133,
									"src": "3465:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "3917:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "3934:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1038,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3938:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1040,
												"nodeType": "Return",
												"src": "3927:12:6"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3863:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3874:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "3908:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:6"
									},
									"scope": 1133,
									"src": "3850:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "4466:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "4483:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1053,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1055,
												"nodeType": "Return",
												"src": "4476:12:6"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4412:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4423:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4457:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:6"
									},
									"scope": 1133,
									"src": "4399:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "5054:106:6",
										"statements": [
											{
												"id": 1080,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "5096:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1071,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "5101:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1073,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "5104:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1069,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1075,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1077,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "5142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1068,
														"id": 1079,
														"nodeType": "Return",
														"src": "5131:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4972:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "4994:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "5045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:6"
									},
									"scope": 1133,
									"src": "4959:201:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "5739:105:6",
										"statements": [
											{
												"id": 1105,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1095,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "5781:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1098,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "5788:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1094,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1101,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "5822:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1102,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "5826:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1093,
														"id": 1104,
														"nodeType": "Return",
														"src": "5815:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5657:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5668:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5679:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1088,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:6"
									},
									"scope": 1133,
									"src": "5644:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "6585:105:6",
										"statements": [
											{
												"id": 1130,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1120,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "6627:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1123,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "6634:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1119,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1125,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "6668:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "6672:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1118,
														"id": 1129,
														"nodeType": "Return",
														"src": "6661:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6503:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6514:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6525:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6576:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:6"
									},
									"scope": 1133,
									"src": "6490:200:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1134,
							"src": "482:6210:6",
							"usedErrors": []
						}
					],
					"src": "107:6585:6"
				},
				"id": 6
			}
		}
	}
}